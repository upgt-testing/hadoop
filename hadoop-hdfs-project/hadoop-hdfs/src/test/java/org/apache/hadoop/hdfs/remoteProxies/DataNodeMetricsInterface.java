package org.apache.hadoop.hdfs.remoteProxies;

public interface DataNodeMetricsInterface {
    void addLifeline(long arg0, java.lang.String arg1);
    void incrActorCmdQueueLength(int arg0);
    void incrVolumeFailures(int arg0);
    void incrRamDiskBlocksEvictedWithoutRead();
    void incrDataNodeBlockRecoveryWorkerCount();
    void incrECReconstructionTasks();
    void addRamDiskBlocksLazyPersistWindowMs(long arg0);
    void incrBytesWritten(int arg0);
    void incrECDecodingTime(long arg0);
    void incrECReconstructionDecodingTime(long arg0);
    int getDataNodeBlockRecoveryWorkerCount();
    void incrBlockVerificationFailures();
    void incrBlocksUncached(int arg0);
    DataNodeUsageReportInterface getDNUsageReport(long arg0);
    void addHeartbeatTotal(long arg0, java.lang.String arg1);
    long getECInvalidReconstructionTasks();
    void addBlockReport(long arg0, java.lang.String arg1);
    void decrDataNodeBlockRecoveryWorkerCount();
    void incrBlocksDeletedInPendingIBR();
    void resetBlocksInPendingIBR();
    void incrBlocksGetLocalPathInfo();
    void incrDataNodePacketResponderCount();
    void addHeartbeat(long arg0, java.lang.String arg1);
    void addRamDiskBytesWrite(long arg0);
    void incrTotalWriteTime(long arg0);
    void incrBlocksWritten();
    void addWriteBlockOp(long arg0);
    void incrWritesFromClient(boolean arg0, long arg1);
    void incrBlocksCached(int arg0);
    void addReadBlockOp(long arg0);
    void incrRamDiskBlocksWriteFallback();
    void incrBytesRead(int arg0);
    void decrDataNodePacketResponderCount();
    void incrECReconstructionBytesWritten(long arg0);
    void addCopyBlockOp(long arg0);
    void incrBlocksVerified();
    void incrBlocksRead();
    void incrDatanodeNetworkErrors();
    JvmMetricsInterface getJvmMetrics();
    void addRamDiskBlocksEvictionWindowMs(long arg0);
    void decrDataNodeActiveXceiversCount();
    void incrECReconstructionValidateTime(long arg0);
    void incrRamDiskBlocksLazyPersisted();
    void incrRamDiskBlocksReadHits();
    java.lang.String name();
    int getDataNodeActiveXceiverCount();
    void incrFsyncCount();
    void addSendDataPacketTransferNanos(long arg0);
    int getDataNodePacketResponderCount();
    void addReplaceBlockOp(long arg0);
    void incrECReconstructionWriteTime(long arg0);
    void incrNumProcessedCommands();
    void incrRamDiskBlocksWrite();
    void addFlushNanos(long arg0);
    void incrBlocksInPendingIBR();
    void addFsyncNanos(long arg0);
    void incrTotalReadTime(long arg0);
    void setDataNodePacketResponderCount(int arg0);
    void incrECReconstructionReadTime(long arg0);
    void incrECReconstructionRemoteBytesRead(long arg0);
    void addBlockChecksumOp(long arg0);
    void setDataNodeActiveXceiversCount(int arg0);
    void incrBlocksReplicated();
    void shutdown();
    void incrRamDiskBlocksDeletedBeforeLazyPersisted();
    void incrBlocksReceivedInPendingIBR();
    void addSendDataPacketBlockedOnNetworkNanos(long arg0);
    DataNodeMetricsInterface create(ConfigurationInterface arg0, java.lang.String arg1);
    void addNumProcessedCommands(long arg0);
    void incrRamDiskBlocksEvicted();
    void setDataNodeBlockRecoveryWorkerCount(int arg0);
    void incrECFailedReconstructionTasks();
    void addPacketAckRoundTripTimeNanos(long arg0);
    void incrDataNodeActiveXceiversCount();
    void incrBlocksRemoved(int arg0);
    void incrBlocksReceivingInPendingIBR();
    void incrRamDiskBytesLazyPersisted(long arg0);
    void incrECReconstructionBytesRead(long arg0);
    void incrReadsFromClient(boolean arg0, long arg1);
    void addCacheReport(long arg0);
    void addIncrementalBlockReport(long arg0, java.lang.String arg1);
    void incrECInvalidReconstructionTasks();
}