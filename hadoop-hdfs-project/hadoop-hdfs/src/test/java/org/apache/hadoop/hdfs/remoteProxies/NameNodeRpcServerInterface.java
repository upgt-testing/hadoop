package org.apache.hadoop.hdfs.remoteProxies;

public interface NameNodeRpcServerInterface {
    org.apache.hadoop.fs.BatchedRemoteIterator.BatchedEntries<org.apache.hadoop.hdfs.protocol.EncryptionZone> listEncryptionZones(long arg0) throws java.io.IOException;
    ECBlockGroupStatsInterface getECBlockGroupStats() throws java.io.IOException;
    boolean delete(java.lang.String arg0, boolean arg1) throws java.io.IOException;
    java.util.List<java.lang.String> listReconfigurableProperties() throws java.io.IOException;
    java.net.InetSocketAddress getServiceRpcAddress();
    SnapshotDiffReportListingInterface getSnapshotDiffReportListing(java.lang.String arg0, java.lang.String arg1, java.lang.String arg2, byte[] arg3, int arg4) throws java.io.IOException;
    TokenInterface<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier> getDelegationToken(TextInterface arg0) throws java.io.IOException;
    void createSymlink(java.lang.String arg0, java.lang.String arg1, FsPermissionInterface arg2, boolean arg3) throws java.io.IOException;
    void msync() throws java.io.IOException;
    org.apache.hadoop.fs.BatchedRemoteIterator.BatchedEntries<org.apache.hadoop.hdfs.protocol.CacheDirectiveEntry> listCacheDirectives(long arg0, CacheDirectiveInfoInterface arg1) throws java.io.IOException;
    BlocksWithLocationsInterface getBlocks(DatanodeInfoInterface arg0, long arg1, long arg2) throws java.io.IOException;
    boolean checkPathLength(java.lang.String arg0);
    ErasureCodingPolicyInfoInterface[] getErasureCodingPolicies() throws java.io.IOException;
    HAServiceStatusInterface getServiceStatus() throws org.apache.hadoop.security.AccessControlException, org.apache.hadoop.ha.ServiceFailedException, java.io.IOException;
    boolean isUpgradeFinalized() throws java.io.IOException;
    java.net.InetSocketAddress getLifelineRpcAddress();
    DatanodeCommandInterface blockReport(DatanodeRegistrationInterface arg0, java.lang.String arg1, org.apache.hadoop.hdfs.server.protocol.StorageBlockReport[] arg2, BlockReportContextInterface arg3) throws java.io.IOException;
    void transitionToObserver(StateChangeRequestInfoInterface arg0) throws org.apache.hadoop.ha.ServiceFailedException, org.apache.hadoop.security.AccessControlException, java.io.IOException;
    BlockStoragePolicyInterface[] getStoragePolicies() throws java.io.IOException;
    void removeAcl(java.lang.String arg0) throws java.io.IOException;
    void createEncryptionZone(java.lang.String arg0, java.lang.String arg1) throws java.io.IOException;
    long renewDelegationToken(TokenInterface<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier> arg0) throws org.apache.hadoop.security.token.SecretManager.InvalidToken, java.io.IOException;
    org.apache.hadoop.fs.BatchedRemoteIterator.BatchedEntries<org.apache.hadoop.hdfs.protocol.OpenFileEntry> listOpenFiles(long arg0) throws java.io.IOException;
    LocatedBlocksInterface getBlockLocations(java.lang.String arg0, long arg1, long arg2) throws java.io.IOException;
    void refreshNodes() throws java.io.IOException;
    BlockStoragePolicyInterface getStoragePolicy(java.lang.String arg0) throws java.io.IOException;
    long rollEdits() throws org.apache.hadoop.security.AccessControlException, java.io.IOException;
    ReplicatedBlockStatsInterface getReplicatedBlockStats() throws java.io.IOException;
    void updatePipeline(java.lang.String arg0, ExtendedBlockInterface arg1, ExtendedBlockInterface arg2, DatanodeIDInterface[] arg3, java.lang.String[] arg4) throws java.io.IOException;
    void start();
    java.util.List<org.apache.hadoop.fs.XAttr> getXAttrs(java.lang.String arg0, java.util.List<org.apache.hadoop.fs.XAttr> arg1) throws java.io.IOException;
    QuotaUsageInterface getQuotaUsage(java.lang.String arg0) throws java.io.IOException;
    HeartbeatResponseInterface sendHeartbeat(DatanodeRegistrationInterface arg0, org.apache.hadoop.hdfs.server.protocol.StorageReport[] arg1, long arg2, long arg3, int arg4, int arg5, int arg6, VolumeFailureSummaryInterface arg7, boolean arg8, SlowPeerReportsInterface arg9, SlowDiskReportsInterface arg10) throws java.io.IOException;
    ReconfigurationTaskStatusInterface getReconfigurationStatus() throws java.io.IOException;
    void setStoragePolicy(java.lang.String arg0, java.lang.String arg1) throws java.io.IOException;
    void removeCacheDirective(long arg0) throws java.io.IOException;
    BatchedDirectoryListingInterface getBatchedListing(java.lang.String[] arg0, byte[] arg1, boolean arg2) throws java.io.IOException;
    java.lang.Long getNextSPSPath() throws java.io.IOException;
    void finalizeUpgrade() throws java.io.IOException;
    long[] getStats() throws java.io.IOException;
    void checkNNStartup() throws java.io.IOException;
    boolean rename(java.lang.String arg0, java.lang.String arg1) throws java.io.IOException;
    SnapshottableDirectoryStatusInterface[] getSnapshottableDirListing() throws java.io.IOException;
    org.apache.hadoop.hdfs.protocol.HdfsFileStatus getFileInfo(java.lang.String arg0) throws java.io.IOException;
    EventBatchListInterface getEventBatchList(long arg0, long arg1, FSEditLogInterface arg2, boolean arg3, int arg4) throws java.io.IOException;
    void unsetErasureCodingPolicy(java.lang.String arg0) throws java.io.IOException;
    java.util.List<org.apache.hadoop.fs.XAttr> listXAttrs(java.lang.String arg0) throws java.io.IOException;
    void setAcl(java.lang.String arg0, java.util.List<org.apache.hadoop.fs.permission.AclEntry> arg1) throws java.io.IOException;
    boolean setSafeMode(org.apache.hadoop.hdfs.protocol.HdfsConstants.SafeModeAction arg0, boolean arg1) throws java.io.IOException;
    org.apache.hadoop.ha.HAServiceProtocol.HAServiceState getHAServiceState() throws java.io.IOException;
    void verifyLayoutVersion(int arg0) throws java.io.IOException;
    DatanodeRegistrationInterface registerDatanode(DatanodeRegistrationInterface arg0) throws java.io.IOException;
    void cancelDelegationToken(TokenInterface<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier> arg0) throws java.io.IOException;
    boolean recoverLease(java.lang.String arg0, java.lang.String arg1) throws java.io.IOException;
    HdfsLocatedFileStatusInterface getLocatedFileInfo(java.lang.String arg0, boolean arg1) throws java.io.IOException;
    void refreshUserToGroupsMappings() throws java.io.IOException;
    FsServerDefaultsInterface getServerDefaults() throws java.io.IOException;
    void rename2(java.lang.String arg0, java.lang.String arg1, org.apache.hadoop.fs.Options.Rename... arg2) throws java.io.IOException;
    RemoteEditLogManifestInterface getEditLogManifest(long arg0) throws java.io.IOException;
    void satisfyStoragePolicy(java.lang.String arg0) throws java.io.IOException;
    void endCheckpoint(NamenodeRegistrationInterface arg0, CheckpointSignatureInterface arg1) throws java.io.IOException;
    ECTopologyVerifierResultInterface getECTopologyResultForPolicies(java.lang.String... arg0) throws java.io.IOException;
    void errorReport(DatanodeRegistrationInterface arg0, int arg1, java.lang.String arg2) throws java.io.IOException;
    java.net.InetSocketAddress getRpcAddress();
    void renewLease(java.lang.String arg0) throws java.io.IOException;
    org.apache.hadoop.fs.BatchedRemoteIterator.BatchedEntries<org.apache.hadoop.hdfs.protocol.ZoneReencryptionStatus> listReencryptionStatus(long arg0) throws java.io.IOException;
    boolean mkdirs(java.lang.String arg0, FsPermissionInterface arg1, boolean arg2) throws java.io.IOException;
    ServerInterface getLifelineRpcServer();
    org.apache.hadoop.fs.BatchedRemoteIterator.BatchedEntries<org.apache.hadoop.hdfs.protocol.OpenFileEntry> listOpenFiles(long arg0, java.util.EnumSet<org.apache.hadoop.hdfs.protocol.OpenFilesIterator.OpenFilesType> arg1, java.lang.String arg2) throws java.io.IOException;
    void disallowSnapshot(java.lang.String arg0) throws java.io.IOException;
    void errorReport(NamenodeRegistrationInterface arg0, int arg1, java.lang.String arg2) throws java.io.IOException;
    void removeXAttr(java.lang.String arg0, XAttrInterface arg1) throws java.io.IOException;
    FSEditLogOpInterface readOp(EditLogInputStreamInterface arg0) throws java.io.IOException;
    EncryptionZoneInterface getEZForPath(java.lang.String arg0) throws java.io.IOException;
    CorruptFileBlocksInterface listCorruptFileBlocks(java.lang.String arg0, java.lang.String arg1) throws java.io.IOException;
    void modifyCacheDirective(CacheDirectiveInfoInterface arg0, java.util.EnumSet<org.apache.hadoop.fs.CacheFlag> arg1) throws java.io.IOException;
    void addCachePool(CachePoolInfoInterface arg0) throws java.io.IOException;
    ContentSummaryInterface getContentSummary(java.lang.String arg0) throws java.io.IOException;
    void join() throws java.lang.InterruptedException;
    NamespaceInfoInterface versionRequest() throws java.io.IOException;
    void sendLifeline(DatanodeRegistrationInterface arg0, org.apache.hadoop.hdfs.server.protocol.StorageReport[] arg1, long arg2, long arg3, int arg4, int arg5, int arg6, VolumeFailureSummaryInterface arg7) throws java.io.IOException;
    long getTransactionID() throws java.io.IOException;
    void monitorHealth() throws org.apache.hadoop.ha.HealthCheckFailedException, org.apache.hadoop.security.AccessControlException, java.io.IOException;
    org.apache.hadoop.fs.BatchedRemoteIterator.BatchedEntries<org.apache.hadoop.hdfs.protocol.CachePoolEntry> listCachePools(java.lang.String arg0) throws java.io.IOException;
    RollingUpgradeInfoInterface rollingUpgrade(org.apache.hadoop.hdfs.protocol.HdfsConstants.RollingUpgradeAction arg0) throws java.io.IOException;
    java.util.Set<java.net.InetSocketAddress> getAuxiliaryRpcAddresses();
    LocatedBlockInterface getAdditionalDatanode(java.lang.String arg0, long arg1, ExtendedBlockInterface arg2, DatanodeInfoInterface[] arg3, java.lang.String[] arg4, DatanodeInfoInterface[] arg5, int arg6, java.lang.String arg7) throws java.io.IOException;
    EventBatchListInterface getEditsFromTxid(long arg0) throws java.io.IOException;
    LocatedBlockInterface updateBlockForPipeline(ExtendedBlockInterface arg0, java.lang.String arg1) throws java.io.IOException;
    void transitionToStandby(StateChangeRequestInfoInterface arg0) throws org.apache.hadoop.ha.ServiceFailedException, org.apache.hadoop.security.AccessControlException, java.io.IOException;
    long getMostRecentCheckpointTxId() throws java.io.IOException;
    NamenodeRegistrationInterface registerSubordinateNamenode(NamenodeRegistrationInterface arg0) throws java.io.IOException;
    org.apache.hadoop.hdfs.protocol.HdfsFileStatus create(java.lang.String arg0, FsPermissionInterface arg1, java.lang.String arg2, EnumSetWritableInterface<org.apache.hadoop.fs.CreateFlag> arg3, boolean arg4, short arg5, long arg6, org.apache.hadoop.crypto.CryptoProtocolVersion[] arg7, java.lang.String arg8, java.lang.String arg9) throws java.io.IOException;
    void startReconfiguration() throws java.io.IOException;
    void refreshCallQueue() throws java.io.IOException;
    long getCurrentEditLogTxid() throws java.io.IOException;
    void deleteSnapshot(java.lang.String arg0, java.lang.String arg1) throws java.io.IOException;
    org.apache.hadoop.hdfs.protocol.HdfsFileStatus getFileLinkInfo(java.lang.String arg0) throws java.io.IOException;
    void removeAclEntries(java.lang.String arg0, java.util.List<org.apache.hadoop.fs.permission.AclEntry> arg1) throws java.io.IOException;
    ErasureCodingPolicyInterface getErasureCodingPolicy(java.lang.String arg0) throws java.io.IOException;
    boolean restoreFailedStorage(java.lang.String arg0) throws java.io.IOException;
    boolean setReplication(java.lang.String arg0, short arg1) throws java.io.IOException;
    java.lang.String createSnapshot(java.lang.String arg0, java.lang.String arg1) throws java.io.IOException;
    ExportedBlockKeysInterface getBlockKeys() throws java.io.IOException;
    CheckpointSignatureInterface rollEditLog() throws java.io.IOException;
    boolean complete(java.lang.String arg0, java.lang.String arg1, ExtendedBlockInterface arg2, long arg3) throws java.io.IOException;
    ServerInterface getClientRpcServer();
    void reencryptEncryptionZone(java.lang.String arg0, org.apache.hadoop.hdfs.protocol.HdfsConstants.ReencryptAction arg1) throws java.io.IOException;
    void blockReceivedAndDeleted(DatanodeRegistrationInterface arg0, java.lang.String arg1, StorageReceivedDeletedBlocksInterface[] arg2) throws java.io.IOException;
    java.lang.String getLinkTarget(java.lang.String arg0) throws java.io.IOException;
    void removeDefaultAcl(java.lang.String arg0) throws java.io.IOException;
    void setPermission(java.lang.String arg0, FsPermissionInterface arg1) throws java.io.IOException;
    void modifyCachePool(CachePoolInfoInterface arg0) throws java.io.IOException;
    void setOwner(java.lang.String arg0, java.lang.String arg1, java.lang.String arg2) throws java.io.IOException;
    LocatedBlockInterface addBlock(java.lang.String arg0, java.lang.String arg1, ExtendedBlockInterface arg2, DatanodeInfoInterface[] arg3, long arg4, java.lang.String[] arg5, java.util.EnumSet<org.apache.hadoop.hdfs.AddBlockFlag> arg6) throws java.io.IOException;
    AclStatusInterface getAclStatus(java.lang.String arg0) throws java.io.IOException;
    java.lang.String[] getGroupsForUser(java.lang.String arg0) throws java.io.IOException;
    long getPreferredBlockSize(java.lang.String arg0) throws java.io.IOException;
    void verifySoftwareVersion(DatanodeRegistrationInterface arg0) throws org.apache.hadoop.hdfs.server.common.IncorrectVersionException;
    void abandonBlock(ExtendedBlockInterface arg0, long arg1, java.lang.String arg2, java.lang.String arg3) throws java.io.IOException;
    void setXAttr(java.lang.String arg0, XAttrInterface arg1, java.util.EnumSet<org.apache.hadoop.fs.XAttrSetFlag> arg2) throws java.io.IOException;
    java.util.Collection<org.apache.hadoop.ipc.RefreshResponse> refresh(java.lang.String arg0, java.lang.String[] arg1);
    UserGroupInformationInterface getRemoteUser() throws java.io.IOException;
    void checkAccess(java.lang.String arg0, org.apache.hadoop.fs.permission.FsAction arg1) throws java.io.IOException;
    NamenodeCommandInterface startCheckpoint(NamenodeRegistrationInterface arg0) throws java.io.IOException;
    DatanodeStorageReportInterface[] getDatanodeStorageReport(org.apache.hadoop.hdfs.protocol.HdfsConstants.DatanodeReportType arg0) throws java.io.IOException;
    java.util.Map<java.lang.String, java.lang.String> getErasureCodingCodecs() throws java.io.IOException;
    void renameSnapshot(java.lang.String arg0, java.lang.String arg1, java.lang.String arg2) throws java.io.IOException;
    long addCacheDirective(CacheDirectiveInfoInterface arg0, java.util.EnumSet<org.apache.hadoop.fs.CacheFlag> arg1) throws java.io.IOException;
    ServerInterface getServiceRpcServer();
    void refreshSuperUserGroupsConfiguration() throws java.io.IOException;
    void setTimes(java.lang.String arg0, long arg1, long arg2) throws java.io.IOException;
    void setErasureCodingPolicy(java.lang.String arg0, java.lang.String arg1) throws java.io.IOException;
    void setQuota(java.lang.String arg0, long arg1, long arg2, org.apache.hadoop.fs.StorageType arg3) throws java.io.IOException;
    void verifyRequest(org.apache.hadoop.hdfs.server.protocol.NodeRegistration arg0) throws java.io.IOException;
    void fsync(java.lang.String arg0, long arg1, java.lang.String arg2, long arg3) throws java.io.IOException;
    SnapshotDiffReportInterface getSnapshotDiffReport(java.lang.String arg0, java.lang.String arg1, java.lang.String arg2) throws java.io.IOException;
    LastBlockWithStatusInterface append(java.lang.String arg0, java.lang.String arg1, EnumSetWritableInterface<org.apache.hadoop.fs.CreateFlag> arg2) throws java.io.IOException;
    void disableErasureCodingPolicy(java.lang.String arg0) throws java.io.IOException;
    boolean isFileClosed(java.lang.String arg0) throws java.io.IOException;
    DataEncryptionKeyInterface getDataEncryptionKey() throws java.io.IOException;
    boolean isRollingUpgrade() throws java.io.IOException;
    void enableErasureCodingPolicy(java.lang.String arg0) throws java.io.IOException;
    void reportBadBlocks(LocatedBlockInterface[] arg0) throws java.io.IOException;
    void modifyAclEntries(java.lang.String arg0, java.util.List<org.apache.hadoop.fs.permission.AclEntry> arg1) throws java.io.IOException;
    void metaSave(java.lang.String arg0) throws java.io.IOException;
    boolean upgradeStatus() throws java.io.IOException;
    void setBalancerBandwidth(long arg0) throws java.io.IOException;
    boolean saveNamespace(long arg0, long arg1) throws java.io.IOException;
    void allowSnapshot(java.lang.String arg0) throws java.io.IOException;
    void refreshServiceAcl() throws java.io.IOException;
    void transitionToActive(StateChangeRequestInfoInterface arg0) throws org.apache.hadoop.ha.ServiceFailedException, org.apache.hadoop.security.AccessControlException, java.io.IOException;
    void removeCachePool(java.lang.String arg0) throws java.io.IOException;
    void unsetStoragePolicy(java.lang.String arg0) throws java.io.IOException;
    AddErasureCodingPolicyResponseInterface[] addErasureCodingPolicies(ErasureCodingPolicyInterface[] arg0) throws java.io.IOException;
    boolean truncate(java.lang.String arg0, long arg1, java.lang.String arg2) throws java.io.IOException;
    DatanodeInfoInterface[] getDatanodeReport(org.apache.hadoop.hdfs.protocol.HdfsConstants.DatanodeReportType arg0) throws java.io.IOException;
    DatanodeCommandInterface cacheReport(DatanodeRegistrationInterface arg0, java.lang.String arg1, java.util.List<java.lang.Long> arg2) throws java.io.IOException;
    void stop();
    DatanodeInfoInterface[] getSlowDatanodeReport() throws java.io.IOException;
    void concat(java.lang.String arg0, java.lang.String[] arg1) throws java.io.IOException;
    java.lang.String getClientMachine();
    DirectoryListingInterface getListing(java.lang.String arg0, byte[] arg1, boolean arg2) throws java.io.IOException;
    void commitBlockSynchronization(ExtendedBlockInterface arg0, long arg1, long arg2, boolean arg3, boolean arg4, DatanodeIDInterface[] arg5, java.lang.String[] arg6) throws java.io.IOException;
    void removeErasureCodingPolicy(java.lang.String arg0) throws java.io.IOException;
}