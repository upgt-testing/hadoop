package org.apache.hadoop.hdfs.remoteProxies;

public interface ContextHandlerInterface {
//    boolean addBean(java.lang.Object arg0, org.eclipse.jetty.util.component.ContainerLifeCycle.Managed arg1);
    void removeBeans();
    java.lang.String getContextPath();
    void setVirtualHosts(java.lang.String[] arg0);
    java.lang.String dump();
    boolean addBean(java.lang.Object arg0, boolean arg1);
    void lambda$named$0(java.lang.String arg0, java.lang.Object arg1, java.lang.Appendable arg2, java.lang.String arg3) throws java.io.IOException;
    void setUsingSecurityManager(boolean arg0);
    void unmanage(BeanInterface arg0);
    void insertHandler(HandlerWrapperInterface arg0);
    void dumpObjects(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Object... arg2) throws java.io.IOException;
    java.lang.String[] getWelcomeFiles();
    void setHandler(org.eclipse.jetty.server.Handler arg0);
    void addProgrammaticListener(java.util.EventListener arg0);
    ResourceInterface getResource(java.lang.String arg0) throws java.net.MalformedURLException;
    boolean isRunning();
    java.util.Map<java.lang.String, java.lang.String> getInitParams();
    void doShutdown(java.util.List<java.util.concurrent.Future<java.lang.Void>> arg0) throws org.eclipse.jetty.util.MultiException;
    java.lang.String toString();
    boolean isStopped();
    boolean isUsingSecurityManager();
    void updateBean(java.lang.Object arg0, java.lang.Object arg1);
    void handle(RequestInterface arg0, java.lang.Runnable arg1);
    void start() throws java.lang.Exception;
    void start(org.eclipse.jetty.util.component.LifeCycle arg0) throws java.lang.Exception;
    boolean isFailed();
    java.lang.String[] getProtectedTargets();
    org.eclipse.jetty.server.Handler[] getChildHandlersByClass(java.lang.Class<?> arg0);
    ResourceInterface getBaseResource();
    java.util.Map<java.lang.String, java.lang.String> getLocaleEncodings();
    java.lang.String getLocaleEncoding(java.util.Locale arg0);
    org.eclipse.jetty.util.Attributes unwrap(org.eclipse.jetty.util.Attributes arg0);
    void updateBeans(java.lang.Object[] arg0, java.lang.Object[] arg1);
    void doStop() throws java.lang.Exception;
    <T> T getChildHandlerByClass(java.lang.Class<T> arg0);
    void addEventListener(org.eclipse.jetty.util.component.Container.Listener arg0);
    void setMaxFormContentSize(int arg0);
    int getMaxFormKeys();
    java.lang.String getResourceBase();
    void setCompactPath(boolean arg0);
    ContextInterface getCurrentContext();
    void setAvailable(boolean arg0);
    void setStarted();
    boolean isStarting();
    <T> T findContainerOf(org.eclipse.jetty.server.HandlerContainer arg0, java.lang.Class<T> arg1, org.eclipse.jetty.server.Handler arg2);
    void dumpObjects(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Object arg2, java.lang.Object... arg3) throws java.io.IOException;
    java.lang.String normalizeHostname(java.lang.String arg0);
    void setEventListeners(java.util.EventListener[] arg0);
    void removeLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle.Listener arg0);
    boolean isProgrammaticListener(java.util.EventListener arg0);
    java.util.Set<java.lang.String> getAttributeNameSet();
    void requestInitialized(RequestInterface arg0, javax.servlet.http.HttpServletRequest arg1);
    void setAliasChecks(java.util.List<org.eclipse.jetty.server.handler.ContextHandler.AliasCheck> arg0);
    void setWelcomeFiles(java.lang.String[] arg0);
    void nextScope(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletRequest arg2, javax.servlet.http.HttpServletResponse arg3) throws java.io.IOException, javax.servlet.ServletException;
    boolean isStopping();
    java.lang.String setInitParameter(java.lang.String arg0, java.lang.String arg1);
    java.util.concurrent.Future<java.lang.Void> shutdown();
    boolean removeAliasCheck(org.eclipse.jetty.server.handler.ContextHandler.AliasCheck arg0);
    void setErrorHandler(ErrorHandlerInterface arg0);
    void setContextPath(java.lang.String arg0);
    void setBaseResource(ResourceInterface arg0);
    void expandChildren(java.util.List<org.eclipse.jetty.server.Handler> arg0, java.lang.Class<?> arg1);
    java.lang.String[] getVirtualHosts();
    void dumpThis(java.lang.Appendable arg0) throws java.io.IOException;
    void dump(java.lang.Appendable arg0, java.lang.String arg1, java.util.Collection<?>... arg2) throws java.io.IOException;
    java.util.List<org.eclipse.jetty.server.handler.ContextHandler.AliasCheck> getAliasChecks();
    java.lang.String getClassPath();
    void requestDestroyed(RequestInterface arg0, javax.servlet.http.HttpServletRequest arg1);
    org.eclipse.jetty.server.Handler getHandler();
    void setStopping();
    ResourceInterface newResource(java.lang.String arg0) throws java.io.IOException;
    void setServerInfo(java.lang.String arg0);
    java.lang.String getState(org.eclipse.jetty.util.component.LifeCycle arg0);
    boolean isProtectedTarget(java.lang.String arg0);
    java.util.Set<java.lang.String> getResourcePaths(java.lang.String arg0);
    void clearAttributes();
    void handle(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletRequest arg2, javax.servlet.http.HttpServletResponse arg3) throws java.io.IOException, javax.servlet.ServletException;
    void start(java.lang.Object arg0);
    java.util.Enumeration<java.lang.String> getAttributeNames();
    java.lang.Object getAttribute(java.lang.String arg0);
    void callContextInitialized(javax.servlet.ServletContextListener arg0, ServletContextEventInterface arg1);
    void updateBean(java.lang.Object arg0, java.lang.Object arg1, boolean arg2);
    java.util.EventListener[] getEventListeners();
    boolean isAvailable();
    <T> java.util.Collection<T> getContainedBeans(java.lang.Class<T> arg0);
    boolean removeBean(java.lang.Object arg0);
    void expandHandler(org.eclipse.jetty.server.Handler arg0, java.util.List<org.eclipse.jetty.server.Handler> arg1, java.lang.Class<?> arg2);
    boolean checkVirtualHost(RequestInterface arg0);
    boolean isAuto(java.lang.Object arg0);
    org.eclipse.jetty.util.component.Dumpable named(java.lang.String arg0, java.lang.Object arg1);
    void setServer(ServerInterface arg0);
    void handle(java.lang.Runnable arg0);
    void doHandle(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletRequest arg2, javax.servlet.http.HttpServletResponse arg3) throws java.io.IOException, javax.servlet.ServletException;
    void exitScope(RequestInterface arg0);
    BeanInterface getBean(java.lang.Object arg0);
    void setProtectedTargets(java.lang.String[] arg0);
    void addManaged(org.eclipse.jetty.util.component.LifeCycle arg0);
    org.eclipse.jetty.server.Handler[] getHandlers();
    ContextHandlerInterface getContextHandler(javax.servlet.ServletContext arg0);
    boolean checkContext(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletResponse arg2) throws java.io.IOException;
    void setDisplayName(java.lang.String arg0);
    boolean contains(java.lang.Object arg0);
    void contextInitialized() throws java.lang.Exception;
    ServerInterface getServer();
    void addEventListener(java.util.EventListener arg0);
    boolean isShutdown();
    void clearAliasChecks();
    ContextInterface getServletContext();
    void manage(java.lang.Object arg0);
    void setFailed(java.lang.Throwable arg0);
    void doScope(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletRequest arg2, javax.servlet.http.HttpServletResponse arg3) throws java.io.IOException, javax.servlet.ServletException;
    java.lang.String getServerInfo();
    void setStopped();
    boolean checkContextPath(java.lang.String arg0);
    void destroy();
    void contextDestroyed() throws java.lang.Exception;
    boolean isUnmanaged(java.lang.Object arg0);
    void setLogger(org.eclipse.jetty.util.log.Logger arg0);
    void setAttribute(java.lang.String arg0, java.lang.Object arg1);
    java.lang.Class<?> loadClass(java.lang.String arg0) throws java.lang.ClassNotFoundException;
    void setMaxFormKeys(int arg0);
    void removeEventListener(java.util.EventListener arg0);
    boolean addBean(java.lang.Object arg0);
    void addAliasCheck(org.eclipse.jetty.server.handler.ContextHandler.AliasCheck arg0);
    long getStopTimeout();
    java.lang.String getLogNameSuffix();
    void dump(java.lang.Appendable arg0, java.lang.String arg1) throws java.io.IOException;
    java.util.Collection<java.lang.Object> getBeans();
    <T> T getBean(java.lang.Class<T> arg0);
    void dumpBeans(java.lang.Appendable arg0, java.lang.String arg1, java.util.Collection<?>... arg2) throws java.io.IOException;
    void setStopTimeout(long arg0);
    void stop(org.eclipse.jetty.util.component.LifeCycle arg0) throws java.lang.Exception;
    void enterScope(RequestInterface arg0, java.lang.Object arg1);
    boolean getAllowNullPathInfo();
    void removeVirtualHosts(java.lang.String[] arg0);
    void dumpObject(java.lang.Appendable arg0, java.lang.Object arg1) throws java.io.IOException;
    void stopContext() throws java.lang.Exception;
    void removeAttribute(java.lang.String arg0);
    boolean isDurableListener(java.util.EventListener arg0);
    void dump(java.lang.Appendable arg0) throws java.io.IOException;
    org.eclipse.jetty.util.log.Logger getLogger();
    void dumpStdErr();
    MimeTypesInterface getMimeTypes();
    void setAttributes(org.eclipse.jetty.util.Attributes arg0);
    void setClassLoader(java.lang.ClassLoader arg0);
    void setResourceBase(java.lang.String arg0);
    int getMaxFormContentSize();
    void addLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle.Listener arg0);
    java.lang.String getState();
    void callContextDestroyed(javax.servlet.ServletContextListener arg0, ServletContextEventInterface arg1);
    <T> java.util.Collection<T> getBeans(java.lang.Class<T> arg0);
    void stop(java.lang.Object arg0);
    java.lang.String getContextPathEncoded();
    void removeEventListener(org.eclipse.jetty.util.component.Container.Listener arg0);
    void setAllowNullPathInfo(boolean arg0);
    ResourceInterface newResource(java.net.URI arg0) throws java.io.IOException;
    boolean isManaged(java.lang.Object arg0);
    org.eclipse.jetty.server.Handler[] getChildHandlers();
    void setStarting();
    java.util.Enumeration<java.lang.String> getInitParameterNames();
    void setBeans(java.util.Collection<java.lang.Object> arg0);
    ResourceInterface newResource(java.net.URL arg0) throws java.io.IOException;
    void nextHandle(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletRequest arg2, javax.servlet.http.HttpServletResponse arg3) throws java.io.IOException, javax.servlet.ServletException;
    boolean remove(BeanInterface arg0);
    boolean isDumpable(java.lang.Object arg0);
    void stop() throws java.lang.Exception;
    boolean isCompactPath();
    org.eclipse.jetty.util.Attributes getAttributes();
    void doStart() throws java.lang.Exception;
    java.lang.String getRequestContextPath();
    java.lang.String dump(org.eclipse.jetty.util.component.Dumpable arg0);
    void dumpMapEntries(java.lang.Appendable arg0, java.lang.String arg1, java.util.Map<?, ?> arg2, boolean arg3) throws java.io.IOException;
    void dumpIterable(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Iterable<?> arg2, boolean arg3) throws java.io.IOException;
    void startContext() throws java.lang.Exception;
    java.lang.String getLocaleEncoding(java.lang.String arg0);
    void dumpContainer(java.lang.Appendable arg0, java.lang.String arg1, org.eclipse.jetty.util.component.Container arg2, boolean arg3) throws java.io.IOException;
    void addVirtualHosts(java.lang.String[] arg0);
    void doError(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletRequest arg2, javax.servlet.http.HttpServletResponse arg3) throws java.io.IOException, javax.servlet.ServletException;
    ErrorHandlerInterface getErrorHandler();
    java.lang.String dumpSelf();
    void addLocaleEncoding(java.lang.String arg0, java.lang.String arg1);
    boolean checkAlias(java.lang.String arg0, ResourceInterface arg1);
    void manage(BeanInterface arg0);
    java.lang.String getInitParameter(java.lang.String arg0);
    boolean isStarted();
    <T> void getContainedBeans(java.lang.Class<T> arg0, java.util.Collection<T> arg1);
    java.lang.ClassLoader getClassLoader();
    void setMimeTypes(MimeTypesInterface arg0);
    java.lang.String getDisplayName();
    void setManagedAttribute(java.lang.String arg0, java.lang.Object arg1);
    void unmanage(java.lang.Object arg0);
}