package org.apache.hadoop.hdfs.remoteProxies;

public interface ContextInterface {
    javax.servlet.ServletRegistration.Dynamic addServlet(java.lang.String arg0, java.lang.Class<? extends javax.servlet.Servlet> arg1);
    <T> T createFilter(java.lang.Class<T> arg0) throws javax.servlet.ServletException;
    org.eclipse.jetty.util.Attributes unwrap(org.eclipse.jetty.util.Attributes arg0);
    void log(java.lang.Exception arg0, java.lang.String arg1);
    java.lang.ClassLoader getClassLoader();
    javax.servlet.FilterRegistration.Dynamic addFilter(java.lang.String arg0, java.lang.Class<? extends javax.servlet.Filter> arg1);
    void dump(java.lang.Appendable arg0, java.lang.String arg1) throws java.io.IOException;
    void declareRoles(java.lang.String... arg0);
    boolean isEnabled();
    javax.servlet.FilterRegistration.Dynamic addFilter(java.lang.String arg0, java.lang.String arg1);
    java.lang.String getInitParameter(java.lang.String arg0);
    javax.servlet.Servlet getServlet(java.lang.String arg0) throws javax.servlet.ServletException;
    void setAttribute(java.lang.String arg0, java.lang.Object arg1);
    java.lang.String getContextPath();
    javax.servlet.ServletContext getContext(java.lang.String arg0);
    void dumpContainer(java.lang.Appendable arg0, java.lang.String arg1, org.eclipse.jetty.util.component.Container arg2, boolean arg3) throws java.io.IOException;
    javax.servlet.FilterRegistration.Dynamic addFilter(java.lang.String arg0, javax.servlet.Filter arg1);
    org.eclipse.jetty.util.component.Dumpable named(java.lang.String arg0, java.lang.Object arg1);
    void clearAttributes();
    java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Object> map();
    void setSessionTrackingModes(java.util.Set<javax.servlet.SessionTrackingMode> arg0);
    javax.servlet.descriptor.JspConfigDescriptor getJspConfigDescriptor();
    void checkListener(java.lang.Class<? extends java.util.EventListener> arg0) throws java.lang.IllegalStateException;
    void setJspConfigDescriptor(javax.servlet.descriptor.JspConfigDescriptor arg0);
    java.util.Set<java.lang.String> getResourcePaths(java.lang.String arg0);
    int getMinorVersion();
    int getEffectiveMinorVersion();
    java.util.Enumeration<javax.servlet.Servlet> getServlets();
    java.util.Enumeration<java.lang.String> getAttributeNames();
    java.lang.String getMimeType(java.lang.String arg0);
    <T> void addListener(T arg0);
    void addAll(org.eclipse.jetty.util.Attributes arg0);
    void setExtendedListenerTypes(boolean arg0);
    ContextHandlerInterface getContextHandler();
    javax.servlet.ServletRegistration.Dynamic addServlet(java.lang.String arg0, javax.servlet.Servlet arg1);
    void dumpMapEntries(java.lang.Appendable arg0, java.lang.String arg1, java.util.Map<?, ?> arg2, boolean arg3) throws java.io.IOException;
    java.util.Set<java.lang.String> getAttributeNameSet();
    java.io.InputStream getResourceAsStream(java.lang.String arg0);
    javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String arg0);
    java.util.Set<java.util.Map.Entry<java.lang.String, java.lang.Object>> getAttributeEntrySet();
    void dumpObject(java.lang.Appendable arg0, java.lang.Object arg1) throws java.io.IOException;
    void log(java.lang.String arg0, java.lang.Throwable arg1);
    java.util.Set<javax.servlet.SessionTrackingMode> getDefaultSessionTrackingModes();
    int getEffectiveMajorVersion();
    int size();
    <T> T createInstance(java.lang.Class<T> arg0) throws javax.servlet.ServletException;
    <T> T createListener(java.lang.Class<T> arg0) throws javax.servlet.ServletException;
    void setEffectiveMajorVersion(int arg0);
    <T> T createServlet(java.lang.Class<T> arg0) throws javax.servlet.ServletException;
    void removeAttribute(java.lang.String arg0);
    int getMajorVersion();
    java.lang.String dumpSelf();
    java.util.Set<java.lang.String> keySet();
    java.lang.String getVirtualServerName();
    java.util.Set<javax.servlet.SessionTrackingMode> getEffectiveSessionTrackingModes();
    java.util.Enumeration<java.lang.String> getInitParameterNames();
    java.util.Enumeration<java.lang.String> getServletNames();
    void log(java.lang.String arg0);
    java.lang.String getServletContextName();
    java.lang.String getServerInfo();
    java.lang.String getRealPath(java.lang.String arg0);
    void setEnabled(boolean arg0);
    void addListener(java.lang.String arg0);
    void dumpObjects(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Object arg2, java.lang.Object... arg3) throws java.io.IOException;
    javax.servlet.FilterRegistration getFilterRegistration(java.lang.String arg0);
    java.lang.String dump();
    java.lang.String toString();
    boolean setInitParameter(java.lang.String arg0, java.lang.String arg1);
    java.lang.Object getAttribute(java.lang.String arg0);
    java.net.URL getResource(java.lang.String arg0) throws java.net.MalformedURLException;
    java.util.Map<java.lang.String, ? extends javax.servlet.FilterRegistration> getFilterRegistrations();
    javax.servlet.RequestDispatcher getNamedDispatcher(java.lang.String arg0);
    javax.servlet.ServletRegistration getServletRegistration(java.lang.String arg0);
    void dumpIterable(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Iterable<?> arg2, boolean arg3) throws java.io.IOException;
    javax.servlet.ServletRegistration.Dynamic addServlet(java.lang.String arg0, java.lang.String arg1);
    void lambda$named$0(java.lang.String arg0, java.lang.Object arg1, java.lang.Appendable arg2, java.lang.String arg3) throws java.io.IOException;
    void setEffectiveMinorVersion(int arg0);
    void addListener(java.lang.Class<? extends java.util.EventListener> arg0);
    javax.servlet.SessionCookieConfig getSessionCookieConfig();
    java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Object> ensureMap();
    boolean isExtendedListenerTypes();
    java.lang.String dump(org.eclipse.jetty.util.component.Dumpable arg0);
    java.util.Map<java.lang.String, ? extends javax.servlet.ServletRegistration> getServletRegistrations();
    java.util.Enumeration<java.lang.String> getAttributeNamesCopy(org.eclipse.jetty.util.Attributes arg0);
}