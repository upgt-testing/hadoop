package org.apache.hadoop.hdfs.remoteProxies;

public interface HttpInputInterface {
    boolean isReady();
    boolean isAsync();
    boolean isFinished();
    boolean markSupported();
    void consume(ContentInterface arg0);
    boolean eof();
    boolean onIdleTimeout(java.lang.Throwable arg0);
    boolean earlyEOF();
    long getContentReceived();
    java.io.InputStream nullInputStream();
    ContentInterface nextNonSentinelContent() throws java.io.IOException;
    int read(byte[] arg0) throws java.io.IOException;
    int readNBytes(byte[] arg0, int arg1, int arg2) throws java.io.IOException;
    ContentInterface nextContent() throws java.io.IOException;
    void recycle();
    void run();
    void setInterceptor(org.eclipse.jetty.server.HttpInput.Interceptor arg0);
    void blockForContent() throws java.io.IOException;
    int get(ContentInterface arg0, byte[] arg1, int arg2, int arg3);
    int readLine(byte[] arg0, int arg1, int arg2) throws java.io.IOException;
    boolean wakeup();
    int available();
    org.eclipse.jetty.server.HttpInput.Interceptor getInterceptor();
    void reset() throws java.io.IOException;
    byte[] readAllBytes() throws java.io.IOException;
    byte[] readNBytes(int arg0) throws java.io.IOException;
    void close() throws java.io.IOException;
    boolean failed(java.lang.Throwable arg0);
    java.lang.Throwable fail(ContentInterface arg0, java.lang.Throwable arg1);
    HttpChannelStateInterface getHttpChannelState();
    boolean consumeAll();
    void produceContent() throws java.io.IOException;
    void mark(int arg0);
    void unblock();
    void addInterceptor(org.eclipse.jetty.server.HttpInput.Interceptor arg0);
    ContentInterface produceNextContent() throws java.io.IOException;
    int read() throws java.io.IOException;
    long getBlockingTimeout();
    void setReadListener(javax.servlet.ReadListener arg0);
    long skip(long arg0) throws java.io.IOException;
    boolean hasContent();
    int read(byte[] arg0, int arg1, int arg2) throws java.io.IOException;
    ContentInterface nextInterceptedContent() throws java.io.IOException;
    boolean isError();
    void wake();
    void asyncReadProduce() throws java.io.IOException;
    ContentInterface intercept(ContentInterface arg0) throws java.io.IOException;
    boolean addContent(ContentInterface arg0);
    java.lang.String toString();
    long transferTo(java.io.OutputStream arg0) throws java.io.IOException;
    long getContentConsumed();
}