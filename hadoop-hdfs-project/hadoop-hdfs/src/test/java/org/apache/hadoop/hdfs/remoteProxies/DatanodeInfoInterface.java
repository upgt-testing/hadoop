package org.apache.hadoop.hdfs.remoteProxies;

public interface DatanodeInfoInterface {
    ByteStringInterface getDatanodeUuidBytes();
    ByteStringInterface getHostNameBytes();
    boolean maintenanceNotExpired(long arg0);
    java.lang.String getInfoSecureAddr();
    boolean isEnteringMaintenance();
    int getXferPort();
    void setLastUpdateMonotonic(long arg0);
    int getLevel();
    long getNonDfsUsed();
    float getDfsUsedPercent();
    int compareTo(DatanodeIDInterface arg0);
    java.lang.String getPeerHostName();
    void setMaintenanceExpireTimeInMS(long arg0);
    void setSoftwareVersion(java.lang.String arg0);
    boolean isMaintenance();
    void setLastUpdate(long arg0);
    java.lang.String getXferAddrWithHostname();
    void setBlockPoolUsed(long arg0);
    long getCacheUsed();
    java.lang.String getHostName();
    void updateRegInfo(DatanodeIDInterface arg0);
    java.lang.String getXferAddr(boolean arg0);
    long getLastBlockReportTime();
    java.lang.String getIpcAddr(boolean arg0);
    void addDependentHostName(java.lang.String arg0);
    boolean isDecommissioned();
    long getLastUpdateMonotonic();
    void setDfsUsed(long arg0);
    void setDependentHostNames(java.util.List<java.lang.String> arg0);
    void setPeerHostName(java.lang.String arg0);
    void setAdminState(org.apache.hadoop.hdfs.protocol.DatanodeInfo.AdminStates arg0);
    java.lang.String getXferAddr();
    long getRemaining();
    java.lang.String getNetworkLocation();
    java.lang.String checkDatanodeUuid(java.lang.String arg0);
    void stopDecommission();
    java.lang.String getDatanodeReport();
    java.lang.String getIpAddr();
    java.lang.String getName();
    java.lang.String getIpcAddr();
    void setXceiverCount(int arg0);
    void setNumBlocks(int arg0);
    void startMaintenance();
    void setCacheUsed(long arg0);
    java.lang.String toString();
    ByteStringInterface getByteString(java.lang.String arg0);
    void setNonDfsUsed(long arg0);
    java.lang.String dumpDatanode();
    float getBlockPoolUsedPercent();
    void setIpAndXferPort(java.lang.String arg0, ByteStringInterface arg1, int arg2);
    int getIpcPort();
    void setCapacity(long arg0);
    void setLastBlockReportMonotonic(long arg0);
    org.apache.hadoop.net.Node getParent();
    float getCacheUsedPercent();
    void setInMaintenance();
    int getInfoSecurePort();
    void setNetworkLocation(java.lang.String arg0);
    java.lang.String getUpgradeDomain();
    void stopMaintenance();
    ByteStringInterface getIpAddrBytes();
    boolean isInMaintenance();
    long getCacheRemaining();
    float getRemainingPercent();
    boolean isStale(long arg0);
    long getCapacity();
    void setParent(org.apache.hadoop.net.Node arg0);
    org.apache.hadoop.hdfs.protocol.DatanodeInfo.AdminStates getAdminState();
    void setCacheCapacity(long arg0);
    long getLastBlockReportMonotonic();
    java.lang.String getDatanodeUuid();
    void startDecommission();
    java.net.InetSocketAddress getResolvedAddress();
    void setRemaining(long arg0);
    java.lang.String getSoftwareVersion();
    java.util.List<java.lang.String> getDependentHostNames();
    int getXceiverCount();
    long getMaintenanceExpireTimeInMS();
    long getDfsUsed();
    void setIpAddr(java.lang.String arg0);
    boolean maintenanceExpired();
    int getInfoPort();
    long getBlockPoolUsed();
    void setUpgradeDomain(java.lang.String arg0);
    long getCacheCapacity();
    java.lang.String getIpcAddrWithHostname();
    long getLastUpdate();
    void setLevel(int arg0);
    boolean isInService();
    java.lang.String getInfoAddr();
    boolean equals(java.lang.Object arg0);
    void setDecommissioned();
    boolean isDecommissionInProgress();
    int getNumBlocks();
    void setLastBlockReportTime(long arg0);
    float getCacheRemainingPercent();
    int hashCode();
}