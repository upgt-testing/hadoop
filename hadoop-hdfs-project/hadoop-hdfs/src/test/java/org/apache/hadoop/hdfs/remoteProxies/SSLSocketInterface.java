package org.apache.hadoop.hdfs.remoteProxies;

public interface SSLSocketInterface {
    void setKeepAlive(boolean arg0) throws java.net.SocketException;
    void setEnableSessionCreation(boolean arg0);
    void setSoTimeout(int arg0) throws java.net.SocketException;
    void connect(java.net.SocketAddress arg0, int arg1) throws java.io.IOException;
    boolean isClosed();
    java.lang.String getApplicationProtocol();
    java.io.OutputStream getOutputStream() throws java.io.IOException;
    void setHandshakeApplicationProtocolSelector(java.util.function.BiFunction<javax.net.ssl.SSLSocket, java.util.List<java.lang.String>, java.lang.String> arg0);
    int getLocalPort();
    boolean isBound();
    void setConnected();
    boolean getReuseAddress() throws java.net.SocketException;
    void checkOldImpl();
    javax.net.ssl.SSLSession getHandshakeSession();
    void setReceiveBufferSize(int arg0) throws java.net.SocketException;
    void setSoLinger(boolean arg0, int arg1) throws java.net.SocketException;
    java.io.InputStream getInputStream() throws java.io.IOException;
    void setSocketImplFactory(java.net.SocketImplFactory arg0) throws java.io.IOException;
    void setTcpNoDelay(boolean arg0) throws java.net.SocketException;
    boolean isOutputShutdown();
    void setEnabledCipherSuites(java.lang.String[] arg0);
    void setUseClientMode(boolean arg0);
    boolean getOOBInline() throws java.net.SocketException;
    void setPerformancePreferences(int arg0, int arg1, int arg2);
    <T> T getOption(java.net.SocketOption<T> arg0) throws java.io.IOException;
    java.lang.String[] getEnabledProtocols();
    void createImpl(boolean arg0) throws java.net.SocketException;
    int getTrafficClass() throws java.net.SocketException;
    boolean getNeedClientAuth();
    int getSendBufferSize() throws java.net.SocketException;
    java.lang.String[] getSupportedProtocols();
    <T> java.net.Socket setOption(java.net.SocketOption<T> arg0, T arg1) throws java.io.IOException;
    void setImpl();
    java.lang.String[] getEnabledCipherSuites();
    java.util.function.BiFunction<javax.net.ssl.SSLSocket, java.util.List<java.lang.String>, java.lang.String> getHandshakeApplicationProtocolSelector();
    void startHandshake() throws java.io.IOException;
    boolean isConnected();
    boolean getWantClientAuth();
    boolean getTcpNoDelay() throws java.net.SocketException;
    int getSoLinger() throws java.net.SocketException;
    boolean isInputShutdown();
    SSLParametersInterface getSSLParameters();
    void shutdownOutput() throws java.io.IOException;
    java.util.Set<java.net.SocketOption<?>> supportedOptions();
    int getPort();
    void setOOBInline(boolean arg0) throws java.net.SocketException;
    void bind(java.net.SocketAddress arg0) throws java.io.IOException;
    java.net.SocketAddress getRemoteSocketAddress();
    void checkAddress(java.net.InetAddress arg0, java.lang.String arg1);
    java.net.SocketAddress getLocalSocketAddress();
    void shutdownInput() throws java.io.IOException;
    void setWantClientAuth(boolean arg0);
    void setTrafficClass(int arg0) throws java.net.SocketException;
    int getSoTimeout() throws java.net.SocketException;
    javax.net.ssl.SSLSession getSession();
    void close() throws java.io.IOException;
    int getReceiveBufferSize() throws java.net.SocketException;
    void setEnabledProtocols(java.lang.String[] arg0);
    void connect(java.net.SocketAddress arg0) throws java.io.IOException;
    boolean getUseClientMode();
    java.nio.channels.SocketChannel getChannel();
    java.lang.String getHandshakeApplicationProtocol();
    java.net.InetAddress getInetAddress();
    void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener arg0);
    java.lang.String toString();
    void sendUrgentData(int arg0) throws java.io.IOException;
    void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener arg0);
    void setBound();
    java.lang.Void checkPermission(java.net.SocketImpl arg0);
    void setCreated();
    java.net.InetAddress getLocalAddress();
    void postAccept();
    java.net.SocketImpl getImpl() throws java.net.SocketException;
    void setReuseAddress(boolean arg0) throws java.net.SocketException;
    boolean getEnableSessionCreation();
    void setNeedClientAuth(boolean arg0);
    boolean getKeepAlive() throws java.net.SocketException;
    void setSendBufferSize(int arg0) throws java.net.SocketException;
    java.lang.String[] getSupportedCipherSuites();
    void setSSLParameters(SSLParametersInterface arg0);
}