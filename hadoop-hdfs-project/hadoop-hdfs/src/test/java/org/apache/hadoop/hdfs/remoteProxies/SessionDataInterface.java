package org.apache.hadoop.hdfs.remoteProxies;

public interface SessionDataInterface {
    void setContextPath(java.lang.String arg0);
    long getExpiry();
    boolean isExpiredAt(long arg0);
    void setId(java.lang.String arg0);
    void setVhost(java.lang.String arg0);
    void setMaxInactiveMs(long arg0);
    void clean();
    java.lang.String getLastNode();
    void setDirty(boolean arg0);
    java.util.Map<java.lang.String, java.lang.Object> getAllAttributes();
    long getMaxInactiveMs();
    long calcExpiry();
    java.lang.Object setAttribute(java.lang.String arg0, java.lang.Object arg1);
    java.util.Set<java.lang.String> getKeys();
    void serializeAttributes(SessionDataInterface arg0, java.io.ObjectOutputStream arg1) throws java.io.IOException;
    void setMetaDataDirty(boolean arg0);
    void setCreated(long arg0);
    long getLastSaved();
    void setLastNode(java.lang.String arg0);
    void setLastSaved(long arg0);
    boolean isDirty();
    java.lang.Object getAttribute(java.lang.String arg0);
    void readObject(java.io.ObjectInputStream arg0) throws java.io.IOException, java.lang.ClassNotFoundException;
    void setDirty(java.lang.String arg0);
    void setLastAccessed(long arg0);
    void calcAndSetExpiry();
    void copy(SessionDataInterface arg0);
    void setCookieSet(long arg0);
    void setAccessed(long arg0);
    java.lang.String getContextPath();
    long getCreated();
    long getCookieSet();
    void deserializeAttributes(SessionDataInterface arg0, java.io.ObjectInputStream arg1) throws java.io.IOException, java.lang.ClassNotFoundException;
    void clearAllAttributes();
    void writeObject(java.io.ObjectOutputStream arg0) throws java.io.IOException;
    void putAllAttributes(java.util.Map<java.lang.String, java.lang.Object> arg0);
    long getAccessed();
    java.lang.String getId();
    long calcExpiry(long arg0);
    void setExpiry(long arg0);
    java.lang.String toString();
    void calcAndSetExpiry(long arg0);
    long getLastAccessed();
    java.lang.String getVhost();
    boolean isMetaDataDirty();
}