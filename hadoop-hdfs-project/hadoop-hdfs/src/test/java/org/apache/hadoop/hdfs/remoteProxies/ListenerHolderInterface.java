package org.apache.hadoop.hdfs.remoteProxies;

public interface ListenerHolderInterface {
    void setStopTimeout(long arg0);
    boolean isFailed();
    void setServletHandler(ServletHandlerInterface arg0);
//    java.lang.Class<? extends T> getHeldClass();
//    void setInstance(T arg0);
    java.lang.String dumpSelf();
    java.lang.String getClassName();
    void setClassName(java.lang.String arg0);
    void setStarting();
    void dumpObject(java.lang.Appendable arg0, java.lang.Object arg1) throws java.io.IOException;
    ServletHandlerInterface getServletHandler();
    void setStarted();
    boolean isStopped();
    void setStopped();
    boolean isStarting();
    void dumpContainer(java.lang.Appendable arg0, java.lang.String arg1, org.eclipse.jetty.util.component.Container arg2, boolean arg3) throws java.io.IOException;
    void dumpMapEntries(java.lang.Appendable arg0, java.lang.String arg1, java.util.Map<?, ?> arg2, boolean arg3) throws java.io.IOException;
//    T getInstance();
    void dump(java.lang.Appendable arg0, java.lang.String arg1) throws java.io.IOException;
    void stop(java.lang.Object arg0);
    void initialize() throws java.lang.Exception;
//    <W> T wrap(T arg0, java.lang.Class<W> arg1, java.util.function.BiFunction<W, T, T> arg2);
    java.lang.String dump();
    void doStart() throws java.lang.Exception;
    java.lang.String toString();
    void setListener(java.util.EventListener arg0);
    SourceInterface getSource();
    void doStop() throws java.lang.Exception;
    long getStopTimeout();
    void stop() throws java.lang.Exception;
    boolean isRunning();
    java.util.EventListener getListener();
    void setStopping();
    java.lang.String getState();
    boolean isStarted();
    void dumpObjects(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Object arg2, java.lang.Object... arg3) throws java.io.IOException;
    void start(java.lang.Object arg0);
    boolean isStopping();
    void setFailed(java.lang.Throwable arg0);
    java.lang.String getState(org.eclipse.jetty.util.component.LifeCycle arg0);
    org.eclipse.jetty.util.component.Dumpable named(java.lang.String arg0, java.lang.Object arg1);
    void illegalStateIfContextStarted();
    java.lang.String dump(org.eclipse.jetty.util.component.Dumpable arg0);
    boolean isInstance();
//    T unwrap(T arg0);
    void lambda$named$0(java.lang.String arg0, java.lang.Object arg1, java.lang.Appendable arg2, java.lang.String arg3) throws java.io.IOException;
//    void setHeldClass(java.lang.Class<? extends T> arg0);
    void removeLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle.Listener arg0);
    void addLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle.Listener arg0);
    void start() throws java.lang.Exception;
    void dumpIterable(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Iterable<?> arg2, boolean arg3) throws java.io.IOException;
}