package org.apache.hadoop.hdfs.remoteProxies;

public interface ChannelEndPointInterface {
    void setConnection(org.eclipse.jetty.io.Connection arg0);
    long getIdleTimeout();
    void onIncompleteFlush();
    void fillInterested(org.eclipse.jetty.util.Callback arg0);
    void shutdownInput();
    void doShutdownOutput();
    java.lang.Runnable onSelected();
    java.lang.String toEndPointString();
    long getIdleFor();
    int fill(java.nio.ByteBuffer arg0) throws java.io.IOException;
    boolean isFillInterested();
    void doOnClose(java.lang.Throwable arg0);
    void updateKeyAction(java.nio.channels.Selector arg0);
    void onClose(java.lang.Throwable arg0);
    long getCreatedTimeStamp();
    void onIdleExpired(java.util.concurrent.TimeoutException arg0);
    void doClose();
    void needsFillInterest();
    void reset();
    boolean isOutputShutdown();
    boolean flush(java.nio.ByteBuffer... arg0) throws java.io.IOException;
    FillInterestInterface getFillInterest();
    boolean isOptimizedForDirectBuffers();
    void close();
    void changeInterests(int arg0);
    java.net.InetSocketAddress getLocalAddress();
    java.lang.String toString();
    void close(java.lang.Throwable arg0);
    void scheduleIdleTimeout(long arg0);
    void updateKey();
    java.lang.String toConnectionString();
    void write(org.eclipse.jetty.util.Callback arg0, java.nio.ByteBuffer... arg1) throws java.lang.IllegalStateException;
    boolean isInputShutdown();
    void upgrade(org.eclipse.jetty.io.Connection arg0);
    void onOpen();
    void setIdleTimeout(long arg0);
    void activate();
    void notIdle();
    java.net.InetSocketAddress getRemoteAddress();
    void onClose();
    void doShutdownInput();
    boolean tryFillInterested(org.eclipse.jetty.util.Callback arg0);
    void deactivate();
    java.nio.channels.SocketChannel getChannel();
    boolean isOpen();
    WriteFlusherInterface getWriteFlusher();
    void checkFill() throws java.io.IOException;
    void idleCheck();
    void shutdownOutput();
    org.eclipse.jetty.util.thread.Scheduler getScheduler();
    java.lang.Object getTransport();
    org.eclipse.jetty.io.Connection getConnection();
    void replaceKey(java.nio.channels.SelectionKey arg0);
    long checkIdleTimeout();
    void checkFlush() throws java.io.IOException;
}