package org.apache.hadoop.hdfs.remoteProxies;

public interface BPOfferServiceInterface {
    NamespaceInfoInterface setNamespaceInfo(NamespaceInfoInterface arg0) throws java.io.IOException;
    void writeLock();
    void shutdownActor(BPServiceActorInterface arg0);
    java.lang.String blockIdArrayToString(long[] arg0);
    void notifyNamenodeReceivedBlock(ExtendedBlockInterface arg0, java.lang.String arg1, java.lang.String arg2, boolean arg3);
    void scheduleBlockReport(long arg0);
    boolean processCommandFromActor(DatanodeCommandInterface arg0, BPServiceActorInterface arg1) throws java.io.IOException;
    DatanodeProtocolClientSideTranslatorPBInterface getActiveNN();
    void trySendErrorReport(int arg0, java.lang.String arg1);
    void readLock();
    boolean processCommandFromActive(DatanodeCommandInterface arg0, BPServiceActorInterface arg1) throws java.io.IOException;
    void triggerBlockReportForTests() throws java.io.IOException;
    void checkBlock(ExtendedBlockInterface arg0);
    boolean containsNN(java.net.InetSocketAddress arg0);
    void triggerHeartbeatForTests() throws java.io.IOException;
    void refreshNNList(java.lang.String arg0, java.util.List<java.lang.String> arg1, java.util.ArrayList<java.net.InetSocketAddress> arg2, java.util.ArrayList<java.net.InetSocketAddress> arg3) throws java.io.IOException;
    boolean shouldRetryInit();
    void reportRemoteBadBlock(DatanodeInfoInterface arg0, ExtendedBlockInterface arg1);
    void writeUnlock();
    int countNameNodes();
    java.lang.String getBlockPoolId();
    boolean isInitialized();
    void registrationSucceeded(BPServiceActorInterface arg0, DatanodeRegistrationInterface arg1) throws java.io.IOException;
    boolean hasBlockPoolId();
    void reportBadBlocks(ExtendedBlockInterface arg0, java.lang.String arg1, org.apache.hadoop.fs.StorageType arg2);
    NamespaceInfoInterface getNamespaceInfo();
    void checkNSEquality(java.lang.Object arg0, java.lang.Object arg1, java.lang.String arg2) throws java.io.IOException;
    void start();
    void readUnlock();
    boolean processCommandFromStandby(DatanodeCommandInterface arg0, BPServiceActorInterface arg1) throws java.io.IOException;
    void verifyAndSetNamespaceInfo(BPServiceActorInterface arg0, NamespaceInfoInterface arg1) throws java.io.IOException;
    java.lang.String getBlockPoolId(boolean arg0);
//    java.util.List<org.apache.hadoop.hdfs.server.datanode.BPServiceActor> getBPServiceActors();
    java.lang.String toString();
    void stop();
    void signalRollingUpgrade(RollingUpgradeStatusInterface arg0) throws java.io.IOException;
    void join();
    void notifyNamenodeBlock(ExtendedBlockInterface arg0, org.apache.hadoop.hdfs.server.protocol.ReceivedDeletedBlockInfo.BlockStatus arg1, java.lang.String arg2, java.lang.String arg3, boolean arg4);
    void updateActorStatesFromHeartbeat(BPServiceActorInterface arg0, NNHAStatusHeartbeatInterface arg1);
    DatanodeRegistrationInterface createRegistration();
    java.lang.String getNameserviceId();
    void notifyNamenodeReceivingBlock(ExtendedBlockInterface arg0, java.lang.String arg1);
    boolean isAlive();
    void notifyNamenodeDeletedBlock(ExtendedBlockInterface arg0, java.lang.String arg1);
    void triggerDeletionReportForTests() throws java.io.IOException;
    DataNodeInterface getDataNode();
}