package org.apache.hadoop.hdfs.remoteProxies;

public interface ExtendedBlockProtoInterface {
    ExtendedBlockProtoInterface getDefaultInstance();
    BuilderInterface newBuilder();
    ExtendedBlockProtoInterface parseFrom(ByteStringInterface arg0) throws org.apache.hadoop.thirdparty.protobuf.InvalidProtocolBufferException;
    int getRepeatedFieldCount(FieldDescriptorInterface arg0);
    <V> void serializeLongMapTo(CodedOutputStreamInterface arg0, MapFieldInterface<java.lang.Long, V> arg1, MapEntryInterface<java.lang.Long, V> arg2, int arg3) throws java.io.IOException;
    <T> void addAll(java.lang.Iterable<T> arg0, java.util.Collection<? super T> arg1);
    java.lang.reflect.Method getMethodOrDie(java.lang.Class arg0, java.lang.String arg1, java.lang.Class... arg2);
    org.apache.hadoop.thirdparty.protobuf.Internal.FloatList mutableCopy(org.apache.hadoop.thirdparty.protobuf.Internal.FloatList arg0);
    FieldAccessorTableInterface internalGetFieldAccessorTable();
    DescriptorInterface getDescriptorForType();
    int computeStringSizeNoTag(java.lang.Object arg0);
    org.apache.hadoop.thirdparty.protobuf.Internal.LongList mutableCopy(org.apache.hadoop.thirdparty.protobuf.Internal.LongList arg0);
    UnknownFieldSetInterface getUnknownFields();
    org.apache.hadoop.thirdparty.protobuf.MessageLite getDefaultInstanceForType();
    boolean compareMapField(java.lang.Object arg0, java.lang.Object arg1);
    boolean hasField(FieldDescriptorInterface arg0);
    org.apache.hadoop.thirdparty.protobuf.Message.Builder newBuilderForType();
    int getMemoizedSerializedSize();
    int hashFields(int arg0, java.util.Map<org.apache.hadoop.thirdparty.protobuf.Descriptors.FieldDescriptor, java.lang.Object> arg1);
    void writeTo(java.io.OutputStream arg0) throws java.io.IOException;
    <M> M parseWithIOException(org.apache.hadoop.thirdparty.protobuf.Parser<M> arg0, java.io.InputStream arg1) throws java.io.IOException;
    long getNumBytes();
    FieldDescriptorInterface getOneofFieldDescriptor(OneofDescriptorInterface arg0);
    java.util.Map<org.apache.hadoop.thirdparty.protobuf.Descriptors.FieldDescriptor, java.lang.Object> getAllFieldsRaw();
    org.apache.hadoop.thirdparty.protobuf.Internal.IntList emptyIntList();
    ExtendedBlockProtoInterface parseFrom(java.io.InputStream arg0) throws java.io.IOException;
    org.apache.hadoop.thirdparty.protobuf.Internal.BooleanList emptyBooleanList();
    ByteStringInterface toByteString();
    java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    int hashMapField(java.lang.Object arg0);
    ExtendedBlockProtoInterface parseFrom(java.io.InputStream arg0, ExtensionRegistryLiteInterface arg1) throws java.io.IOException;
    int computeStringSize(int arg0, java.lang.Object arg1);
    java.util.Map convertMapEntryListToMap(java.util.List arg0);
    <V> void serializeBooleanMapTo(CodedOutputStreamInterface arg0, MapFieldInterface<java.lang.Boolean, V> arg1, MapEntryInterface<java.lang.Boolean, V> arg2, int arg3) throws java.io.IOException;
    BuilderInterface toBuilder();
    org.apache.hadoop.thirdparty.protobuf.Parser<org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.ExtendedBlockProto> getParserForType();
//    BuilderInterface newBuilderForType(org.apache.hadoop.thirdparty.protobuf.GeneratedMessageV3.BuilderParent arg0);
    ExtendedBlockProtoInterface parseDelimitedFrom(java.io.InputStream arg0) throws java.io.IOException;
    java.lang.String getPoolId();
    java.util.Map<org.apache.hadoop.thirdparty.protobuf.Descriptors.FieldDescriptor, java.lang.Object> getAllFields();
    java.lang.String getInitializationErrorString();
    java.lang.Object getFieldRaw(FieldDescriptorInterface arg0);
    void writeStringNoTag(CodedOutputStreamInterface arg0, java.lang.Object arg1) throws java.io.IOException;
    DescriptorInterface getDescriptor();
    boolean hasNumBytes();
    <MessageType, T> ExtensionInterface<MessageType, T> checkNotLite(ExtensionLiteInterface<MessageType, T> arg0);
//    org.apache.hadoop.thirdparty.protobuf.MessageLite.Builder toBuilder();
    org.apache.hadoop.thirdparty.protobuf.Internal.BooleanList mutableCopy(org.apache.hadoop.thirdparty.protobuf.Internal.BooleanList arg0);
    <M> M parseDelimitedWithIOException(org.apache.hadoop.thirdparty.protobuf.Parser<M> arg0, java.io.InputStream arg1) throws java.io.IOException;
//    org.apache.hadoop.thirdparty.protobuf.Message.Builder newBuilderForType(org.apache.hadoop.thirdparty.protobuf.AbstractMessage.BuilderParent arg0);
    boolean parseUnknownField(CodedInputStreamInterface arg0, BuilderInterface arg1, ExtensionRegistryLiteInterface arg2, int arg3) throws java.io.IOException;
    org.apache.hadoop.thirdparty.protobuf.Internal.IntList mutableCopy(org.apache.hadoop.thirdparty.protobuf.Internal.IntList arg0);
    org.apache.hadoop.thirdparty.protobuf.Internal.FloatList newFloatList();
//    ExtendedBlockProtoInterface getDefaultInstanceForType();
    <K, V> void serializeMapTo(CodedOutputStreamInterface arg0, java.util.Map<K, V> arg1, MapEntryInterface<K, V> arg2, int arg3) throws java.io.IOException;
    ExtendedBlockProtoInterface parseFrom(ByteStringInterface arg0, ExtensionRegistryLiteInterface arg1) throws org.apache.hadoop.thirdparty.protobuf.InvalidProtocolBufferException;
    ExtendedBlockProtoInterface parseDelimitedFrom(java.io.InputStream arg0, ExtensionRegistryLiteInterface arg1) throws java.io.IOException;
    java.lang.Object getField(FieldDescriptorInterface arg0);
    org.apache.hadoop.thirdparty.protobuf.Internal.BooleanList newBooleanList();
    ExtendedBlockProtoInterface parseFrom(CodedInputStreamInterface arg0) throws java.io.IOException;
    void writeTo(CodedOutputStreamInterface arg0) throws java.io.IOException;
    org.apache.hadoop.thirdparty.protobuf.Internal.LongList emptyLongList();
    <V> void maybeSerializeBooleanEntryTo(CodedOutputStreamInterface arg0, java.util.Map<java.lang.Boolean, V> arg1, MapEntryInterface<java.lang.Boolean, V> arg2, int arg3, boolean arg4) throws java.io.IOException;
    UninitializedMessageExceptionInterface newUninitializedMessageException();
    int hashBoolean(boolean arg0);
    ExtendedBlockProtoInterface parseFrom(byte[] arg0, ExtensionRegistryLiteInterface arg1) throws org.apache.hadoop.thirdparty.protobuf.InvalidProtocolBufferException;
    int hashCode();
//    org.apache.hadoop.thirdparty.protobuf.Message.Builder newBuilderForType(org.apache.hadoop.thirdparty.protobuf.GeneratedMessageV3.BuilderParent arg0);
    boolean isInitialized();
//    org.apache.hadoop.thirdparty.protobuf.Parser<? extends org.apache.hadoop.thirdparty.protobuf.Message> getParserForType();
    MapFieldInterface internalGetMapField(int arg0);
    boolean hasBlockId();
    boolean equals(java.lang.Object arg0);
    ByteStringInterface getPoolIdBytes();
    boolean hasOneof(OneofDescriptorInterface arg0);
    java.lang.String getSerializingExceptionMessage(java.lang.String arg0);
    BuilderInterface newBuilder(ExtendedBlockProtoInterface arg0);
    <V> void serializeStringMapTo(CodedOutputStreamInterface arg0, MapFieldInterface<java.lang.String, V> arg1, MapEntryInterface<java.lang.String, V> arg2, int arg3) throws java.io.IOException;
//    org.apache.hadoop.thirdparty.protobuf.Message.Builder toBuilder();
//    org.apache.hadoop.thirdparty.protobuf.Parser<? extends org.apache.hadoop.thirdparty.protobuf.GeneratedMessageV3> getParserForType();
    <V> void serializeIntegerMapTo(CodedOutputStreamInterface arg0, MapFieldInterface<java.lang.Integer, V> arg1, MapEntryInterface<java.lang.Integer, V> arg2, int arg3) throws java.io.IOException;
    void makeExtensionsImmutable();
    long getBlockId();
    boolean hasGenerationStamp();
    java.lang.Object invokeOrDie(java.lang.reflect.Method arg0, java.lang.Object arg1, java.lang.Object... arg2);
    org.apache.hadoop.thirdparty.protobuf.Internal.DoubleList mutableCopy(org.apache.hadoop.thirdparty.protobuf.Internal.DoubleList arg0);
//    org.apache.hadoop.thirdparty.protobuf.Message getDefaultInstanceForType();
//    org.apache.hadoop.thirdparty.protobuf.MessageLite.Builder newBuilderForType();
    ByteStringInterface toByteString(java.lang.Object arg0);
    org.apache.hadoop.thirdparty.protobuf.Internal.LongList newLongList();
    ExtendedBlockProtoInterface parseFrom(CodedInputStreamInterface arg0, ExtensionRegistryLiteInterface arg1) throws java.io.IOException;
    boolean compareBytes(java.lang.Object arg0, java.lang.Object arg1);
    org.apache.hadoop.thirdparty.protobuf.Internal.FloatList emptyFloatList();
    <M> M parseDelimitedWithIOException(org.apache.hadoop.thirdparty.protobuf.Parser<M> arg0, java.io.InputStream arg1, ExtensionRegistryLiteInterface arg2) throws java.io.IOException;
    <T> void addAll(java.lang.Iterable<T> arg0, java.util.List<? super T> arg1);
//    org.apache.hadoop.thirdparty.protobuf.Parser<? extends org.apache.hadoop.thirdparty.protobuf.MessageLite> getParserForType();
    ExtendedBlockProtoInterface parseFrom(java.nio.ByteBuffer arg0, ExtensionRegistryLiteInterface arg1) throws org.apache.hadoop.thirdparty.protobuf.InvalidProtocolBufferException;
    <M> M parseWithIOException(org.apache.hadoop.thirdparty.protobuf.Parser<M> arg0, CodedInputStreamInterface arg1, ExtensionRegistryLiteInterface arg2) throws java.io.IOException;
    int hashEnumList(java.util.List<? extends org.apache.hadoop.thirdparty.protobuf.Internal.EnumLite> arg0);
    boolean parseUnknownFieldProto3(CodedInputStreamInterface arg0, BuilderInterface arg1, ExtensionRegistryLiteInterface arg2, int arg3) throws java.io.IOException;
    org.apache.hadoop.thirdparty.protobuf.Internal.DoubleList emptyDoubleList();
    void checkByteStringIsUtf8(ByteStringInterface arg0) throws java.lang.IllegalArgumentException;
    ExtendedBlockProtoInterface parseFrom(java.nio.ByteBuffer arg0) throws org.apache.hadoop.thirdparty.protobuf.InvalidProtocolBufferException;
    boolean compareFields(java.util.Map<org.apache.hadoop.thirdparty.protobuf.Descriptors.FieldDescriptor, java.lang.Object> arg0, java.util.Map<org.apache.hadoop.thirdparty.protobuf.Descriptors.FieldDescriptor, java.lang.Object> arg1);
    org.apache.hadoop.thirdparty.protobuf.Internal.DoubleList newDoubleList();
    int hashLong(long arg0);
    byte[] toByteArray();
    void enableAlwaysUseFieldBuildersForTesting();
    boolean canUseUnsafe();
    int getSerializedSize();
    <M> M parseWithIOException(org.apache.hadoop.thirdparty.protobuf.Parser<M> arg0, CodedInputStreamInterface arg1) throws java.io.IOException;
//    BuilderInterface newBuilderForType();
    java.util.Map<org.apache.hadoop.thirdparty.protobuf.Descriptors.FieldDescriptor, java.lang.Object> getAllFieldsMutable(boolean arg0);
    java.util.List<java.lang.String> findInitializationErrors();
    java.lang.String toString();
    void writeDelimitedTo(java.io.OutputStream arg0) throws java.io.IOException;
    org.apache.hadoop.thirdparty.protobuf.Internal.IntList newIntList();
    <M> M parseWithIOException(org.apache.hadoop.thirdparty.protobuf.Parser<M> arg0, java.io.InputStream arg1, ExtensionRegistryLiteInterface arg2) throws java.io.IOException;
    long getGenerationStamp();
    int hashEnum(org.apache.hadoop.thirdparty.protobuf.Internal.EnumLite arg0);
    org.apache.hadoop.thirdparty.protobuf.Parser<org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.ExtendedBlockProto> parser();
    ExtendedBlockProtoInterface parseFrom(byte[] arg0) throws org.apache.hadoop.thirdparty.protobuf.InvalidProtocolBufferException;
    boolean hasPoolId();
    void setMemoizedSerializedSize(int arg0);
    java.lang.Object getRepeatedField(FieldDescriptorInterface arg0, int arg1);
    void writeString(CodedOutputStreamInterface arg0, int arg1, java.lang.Object arg2) throws java.io.IOException;
}