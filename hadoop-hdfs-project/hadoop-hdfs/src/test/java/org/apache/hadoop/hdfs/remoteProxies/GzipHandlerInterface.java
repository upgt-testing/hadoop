package org.apache.hadoop.hdfs.remoteProxies;

public interface GzipHandlerInterface {
    void manage(BeanInterface arg0);
    void setExcludedMimeTypes(java.lang.String... arg0);
    boolean contains(java.lang.Object arg0);
    void addIncludedMimeTypes(java.lang.String... arg0);
    void setHandler(org.eclipse.jetty.server.Handler arg0);
    boolean isSyncFlush();
    void setMinGzipSize(int arg0);
    void setStopping();
    void dumpIterable(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Iterable<?> arg2, boolean arg3) throws java.io.IOException;
    org.eclipse.jetty.server.Handler getHandler();
    boolean isUnmanaged(java.lang.Object arg0);
    java.util.Collection<java.lang.Object> getBeans();
    void dumpObject(java.lang.Appendable arg0, java.lang.Object arg1) throws java.io.IOException;
    boolean isFailed();
    void setSyncFlush(boolean arg0);
    java.lang.String[] getIncludedMethods();
    void dumpBeans(java.lang.Appendable arg0, java.lang.String arg1, java.util.Collection<?>... arg2) throws java.io.IOException;
    void start(java.lang.Object arg0);
    void expandChildren(java.util.List<org.eclipse.jetty.server.Handler> arg0, java.lang.Class<?> arg1);
    void addEventListener(org.eclipse.jetty.util.component.Container.Listener arg0);
    void lambda$named$0(java.lang.String arg0, java.lang.Object arg1, java.lang.Appendable arg2, java.lang.String arg3) throws java.io.IOException;
    boolean isDumpable(java.lang.Object arg0);
    void setExcludedMethodList(java.lang.String arg0);
    void setExcludedMethods(java.lang.String... arg0);
    void start(org.eclipse.jetty.util.component.LifeCycle arg0) throws java.lang.Exception;
    void setStopped();
    void setIncludedMethodList(java.lang.String arg0);
    void destroy();
    java.lang.String[] getMethods();
    HttpFieldInterface getVaryField();
    void setServer(ServerInterface arg0);
    void expandHandler(org.eclipse.jetty.server.Handler arg0, java.util.List<org.eclipse.jetty.server.Handler> arg1, java.lang.Class<?> arg2);
    org.eclipse.jetty.server.Handler[] getHandlers();
    void setDispatcherTypes(javax.servlet.DispatcherType... arg0);
    <T> T getBean(java.lang.Class<T> arg0);
    org.eclipse.jetty.util.component.Dumpable named(java.lang.String arg0, java.lang.Object arg1);
    void removeLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle.Listener arg0);
    void addIncludedPaths(java.lang.String... arg0);
    void doStart() throws java.lang.Exception;
    void dumpObjects(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Object... arg2) throws java.io.IOException;
    <T> java.util.Collection<T> getBeans(java.lang.Class<T> arg0);
    java.lang.String[] getIncludedAgentPatterns();
    void doStop() throws java.lang.Exception;
    int getInflateBufferSize();
    void updateBean(java.lang.Object arg0, java.lang.Object arg1);
    void dumpStdErr();
//    boolean addBean(java.lang.Object arg0, org.eclipse.jetty.util.component.ContainerLifeCycle.Managed arg1);
    void dumpMapEntries(java.lang.Appendable arg0, java.lang.String arg1, java.util.Map<?, ?> arg2, boolean arg3) throws java.io.IOException;
    void addIncludedAgentPatterns(java.lang.String... arg0);
    void setFailed(java.lang.Throwable arg0);
    void setExcludedPaths(java.lang.String... arg0);
    void recycle(java.util.zip.Deflater arg0);
    void setBeans(java.util.Collection<java.lang.Object> arg0);
    java.lang.String[] getIncludedPaths();
    void updateBeans(java.lang.Object[] arg0, java.lang.Object[] arg1);
    void dump(java.lang.Appendable arg0, java.lang.String arg1, java.util.Collection<?>... arg2) throws java.io.IOException;
    boolean isMimeTypeGzipable(java.lang.String arg0);
    void setIncludedMethods(java.lang.String... arg0);
    void removeBeans();
    java.lang.String dump(org.eclipse.jetty.util.component.Dumpable arg0);
    void setDeflaterPoolCapacity(int arg0);
    org.eclipse.jetty.server.Handler[] getChildHandlers();
    java.lang.String toString();
    void setStarted();
    boolean isStopping();
    int getDeflaterPoolCapacity();
    java.lang.String[] getExcludedMethods();
    void setIncludedPaths(java.lang.String... arg0);
    void stop(org.eclipse.jetty.util.component.LifeCycle arg0) throws java.lang.Exception;
    void addExcludedMimeTypes(java.lang.String... arg0);
    DeflaterPoolInterface newDeflaterPool(int arg0);
    int getCompressionLevel();
    void setIncludedMimeTypes(java.lang.String... arg0);
    void dumpThis(java.lang.Appendable arg0) throws java.io.IOException;
    void setCompressionLevel(int arg0);
    long getStopTimeout();
    java.lang.String getState(org.eclipse.jetty.util.component.LifeCycle arg0);
    boolean isAuto(java.lang.Object arg0);
    void dump(java.lang.Appendable arg0) throws java.io.IOException;
    void dumpObjects(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Object arg2, java.lang.Object... arg3) throws java.io.IOException;
    java.lang.String getState();
    boolean isAgentGzipable(java.lang.String arg0);
    <T> T findContainerOf(org.eclipse.jetty.server.HandlerContainer arg0, java.lang.Class<T> arg1, org.eclipse.jetty.server.Handler arg2);
    java.lang.String dump();
    void addExcludedPaths(java.lang.String... arg0);
    boolean remove(BeanInterface arg0);
    org.eclipse.jetty.server.Handler[] getChildHandlersByClass(java.lang.Class<?> arg0);
    <T> java.util.Collection<T> getContainedBeans(java.lang.Class<T> arg0);
    boolean getCheckGzExists();
    java.lang.String getExcludedMethodList();
    void unmanage(BeanInterface arg0);
    boolean isStopped();
    void addIncludedMethods(java.lang.String... arg0);
    void doError(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletRequest arg2, javax.servlet.http.HttpServletResponse arg3) throws java.io.IOException, javax.servlet.ServletException;
    java.lang.String getIncludedMethodList();
    boolean addBean(java.lang.Object arg0);
    void setStopTimeout(long arg0);
    void handle(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletRequest arg2, javax.servlet.http.HttpServletResponse arg3) throws java.io.IOException, javax.servlet.ServletException;
    void setDispatcherTypes(java.util.EnumSet<javax.servlet.DispatcherType> arg0);
    BeanInterface getBean(java.lang.Object arg0);
    void insertHandler(HandlerWrapperInterface arg0);
    java.lang.String[] getExcludedMimeTypes();
    void setExcludedAgentPatterns(java.lang.String... arg0);
    boolean isStarted();
    ServerInterface getServer();
    boolean removeBean(java.lang.Object arg0);
    java.lang.String[] getIncludedMimeTypes();
    void stop() throws java.lang.Exception;
    boolean isPathGzipable(java.lang.String arg0);
    void addManaged(org.eclipse.jetty.util.component.LifeCycle arg0);
    void setStarting();
    void start() throws java.lang.Exception;
    void dump(java.lang.Appendable arg0, java.lang.String arg1) throws java.io.IOException;
    java.lang.String[] getExcludedAgentPatterns();
    void addExcludedAgentPatterns(java.lang.String... arg0);
    <T> T getChildHandlerByClass(java.lang.Class<T> arg0);
    void stop(java.lang.Object arg0);
    void addExcludedMethods(java.lang.String... arg0);
    void removeEventListener(org.eclipse.jetty.util.component.Container.Listener arg0);
    void updateBean(java.lang.Object arg0, java.lang.Object arg1, boolean arg2);
    void setIncludedAgentPatterns(java.lang.String... arg0);
    void setCheckGzExists(boolean arg0);
    boolean addBean(java.lang.Object arg0, boolean arg1);
    boolean isManaged(java.lang.Object arg0);
    void doShutdown(java.util.List<java.util.concurrent.Future<java.lang.Void>> arg0) throws org.eclipse.jetty.util.MultiException;
    java.util.EnumSet<javax.servlet.DispatcherType> getDispatcherTypes();
    <T> void getContainedBeans(java.lang.Class<T> arg0, java.util.Collection<T> arg1);
    void addLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle.Listener arg0);
    java.util.zip.Deflater getDeflater(RequestInterface arg0, long arg1);
    void manage(java.lang.Object arg0);
    boolean isStarting();
    java.lang.String[] getExcludedPaths();
    void unmanage(java.lang.Object arg0);
    void setInflateBufferSize(int arg0);
    int getMinGzipSize();
    void dumpContainer(java.lang.Appendable arg0, java.lang.String arg1, org.eclipse.jetty.util.component.Container arg2, boolean arg3) throws java.io.IOException;
    boolean isRunning();
    java.lang.String dumpSelf();
}