package org.apache.hadoop.hdfs.remoteProxies;

public interface JsonFactoryInterface {
    JsonGeneratorInterface _createUTF8Generator(java.io.OutputStream arg0, IOContextInterface arg1) throws java.io.IOException;
    JsonGeneratorInterface createJsonGenerator(java.io.Writer arg0) throws java.io.IOException;
    JsonParserInterface _createParser(java.io.InputStream arg0, IOContextInterface arg1) throws java.io.IOException;
    JsonFactoryInterface disable(com.fasterxml.jackson.core.JsonGenerator.Feature arg0);
    JsonFactoryInterface configure(com.fasterxml.jackson.core.JsonGenerator.Feature arg0, boolean arg1);
    VersionInterface version();
    JsonFactoryInterface disable(com.fasterxml.jackson.core.JsonParser.Feature arg0);
    InputDecoratorInterface getInputDecorator();
    JsonFactoryInterface copy();
    boolean requiresPropertyOrdering();
    JsonParserInterface createJsonParser(byte[] arg0) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    JsonParserInterface createJsonParser(java.lang.String arg0) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    java.io.OutputStream _createDataOutputWrapper(java.io.DataOutput arg0);
    com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor arg0) throws java.io.IOException;
    JsonFactoryInterface setRootValueSeparator(java.lang.String arg0);
    JsonParserInterface createParser(char[] arg0) throws java.io.IOException;
    java.io.OutputStream _fileOutputStream(java.io.File arg0) throws java.io.IOException;
    JsonFactoryInterface enable(com.fasterxml.jackson.core.JsonParser.Feature arg0);
    JsonParserInterface createParser(java.net.URL arg0) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    IOContextInterface _createNonBlockingContext(java.lang.Object arg0);
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema arg0);
    JsonParserInterface _createParser(char[] arg0, int arg1, int arg2, IOContextInterface arg3, boolean arg4) throws java.io.IOException;
    java.io.InputStream _optimizedStreamFromURL(java.net.URL arg0) throws java.io.IOException;
    boolean canHandleBinaryNatively();
    void _requireJSONFactory(java.lang.String arg0);
    JsonFactoryInterface setInputDecorator(InputDecoratorInterface arg0);
    java.io.InputStream _fileInputStream(java.io.File arg0) throws java.io.IOException;
    java.lang.Class<? extends com.fasterxml.jackson.core.FormatFeature> getFormatWriteFeatureType();
    JsonParserInterface _createParser(byte[] arg0, int arg1, int arg2, IOContextInterface arg3) throws java.io.IOException;
    JsonParserInterface createParser(char[] arg0, int arg1, int arg2) throws java.io.IOException;
    JsonFactoryInterface disable(com.fasterxml.jackson.core.JsonFactory.Feature arg0);
    JsonGeneratorInterface _createGenerator(java.io.Writer arg0, IOContextInterface arg1) throws java.io.IOException;
    OutputDecoratorInterface getOutputDecorator();
    int getGeneratorFeatures();
    JsonParserInterface _createParser(java.io.Reader arg0, IOContextInterface arg1) throws java.io.IOException;
    ContentReferenceInterface _createContentReference(java.lang.Object arg0, int arg1, int arg2);
    JsonParserInterface createNonBlockingByteBufferParser() throws java.io.IOException;
    JsonFactoryInterface enable(com.fasterxml.jackson.core.JsonFactory.Feature arg0);
    TSFBuilderInterface<?, ?> builder();
    ContentReferenceInterface _createContentReference(java.lang.Object arg0);
    int getParserFeatures();
    JsonFactoryInterface setOutputDecorator(OutputDecoratorInterface arg0);
    boolean canParseAsync();
    IOContextInterface _createContext(ContentReferenceInterface arg0, boolean arg1);
    int getFormatGeneratorFeatures();
    boolean isEnabled(com.fasterxml.jackson.core.JsonFactory.Feature arg0);
    JsonParserInterface createParser(java.io.Reader arg0) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    JsonParserInterface createJsonParser(java.io.Reader arg0) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    JsonFactoryInterface configure(com.fasterxml.jackson.core.JsonFactory.Feature arg0, boolean arg1);
    JsonFactoryInterface setCodec(ObjectCodecInterface arg0);
    BufferRecyclerInterface _getBufferRecycler();
    IOContextInterface _createContext(java.lang.Object arg0, boolean arg1);
    JsonGeneratorInterface createGenerator(java.io.File arg0, com.fasterxml.jackson.core.JsonEncoding arg1) throws java.io.IOException;
    JsonParserInterface createJsonParser(java.net.URL arg0) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    JsonGeneratorInterface createJsonGenerator(java.io.OutputStream arg0) throws java.io.IOException;
    java.lang.Class<? extends com.fasterxml.jackson.core.FormatFeature> getFormatReadFeatureType();
    JsonParserInterface createJsonParser(byte[] arg0, int arg1, int arg2) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    JsonParserInterface createParser(java.io.InputStream arg0) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    java.io.OutputStream _decorate(java.io.OutputStream arg0, IOContextInterface arg1) throws java.io.IOException;
    <T> T _reportRangeError(java.lang.String arg0) throws java.lang.IllegalArgumentException;
    TSFBuilderInterface<?, ?> rebuild();
    JsonParserInterface createParser(byte[] arg0, int arg1, int arg2) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature arg0);
    JsonGeneratorInterface createGenerator(java.io.Writer arg0) throws java.io.IOException;
    java.lang.String getFormatName();
    void _checkRangeBoundsForCharArray(char[] arg0, int arg1, int arg2) throws java.io.IOException;
    JsonFactoryInterface enable(com.fasterxml.jackson.core.JsonGenerator.Feature arg0);
    void _checkRangeBoundsForByteArray(byte[] arg0, int arg1, int arg2) throws java.lang.IllegalArgumentException;
    java.io.Writer _decorate(java.io.Writer arg0, IOContextInterface arg1) throws java.io.IOException;
    java.io.DataInput _decorate(java.io.DataInput arg0, IOContextInterface arg1) throws java.io.IOException;
    int getFormatParserFeatures();
    com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor arg0) throws java.io.IOException;
    JsonParserInterface createJsonParser(java.io.InputStream arg0) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    JsonGeneratorInterface createGenerator(java.io.DataOutput arg0, com.fasterxml.jackson.core.JsonEncoding arg1) throws java.io.IOException;
    JsonParserInterface createParser(byte[] arg0) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    JsonParserInterface createParser(java.io.DataInput arg0) throws java.io.IOException;
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser.Feature arg0);
    JsonParserInterface createParser(java.lang.String arg0) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    JsonFactoryInterface configure(com.fasterxml.jackson.core.JsonParser.Feature arg0, boolean arg1);
    JsonGeneratorInterface createJsonGenerator(java.io.OutputStream arg0, com.fasterxml.jackson.core.JsonEncoding arg1) throws java.io.IOException;
    JsonGeneratorInterface createGenerator(java.io.OutputStream arg0, com.fasterxml.jackson.core.JsonEncoding arg1) throws java.io.IOException;
    JsonParserInterface createParser(java.io.File arg0) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    CharacterEscapesInterface getCharacterEscapes();
    boolean _isJSONFactory();
    ObjectCodecInterface getCodec();
    JsonGeneratorInterface createGenerator(java.io.OutputStream arg0) throws java.io.IOException;
    JsonFactoryInterface setCharacterEscapes(CharacterEscapesInterface arg0);
    boolean canUseCharArrays();
    boolean isEnabled(com.fasterxml.jackson.core.StreamWriteFeature arg0);
    java.lang.Object readResolve();
    java.lang.String getRootValueSeparator();
    JsonParserInterface _createParser(java.io.DataInput arg0, IOContextInterface arg1) throws java.io.IOException;
    JsonGeneratorInterface createGenerator(java.io.DataOutput arg0) throws java.io.IOException;
    void _checkInvalidCopy(java.lang.Class<?> arg0);
    java.io.Reader _decorate(java.io.Reader arg0, IOContextInterface arg1) throws java.io.IOException;
    JsonParserInterface createNonBlockingByteArrayParser() throws java.io.IOException;
    boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature arg0);
    java.io.InputStream _decorate(java.io.InputStream arg0, IOContextInterface arg1) throws java.io.IOException;
    JsonParserInterface createJsonParser(java.io.File arg0) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException;
    boolean requiresCustomCodec();
    java.io.Writer _createWriter(java.io.OutputStream arg0, com.fasterxml.jackson.core.JsonEncoding arg1, IOContextInterface arg2) throws java.io.IOException;
}