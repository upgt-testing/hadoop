package org.apache.hadoop.hdfs.remoteProxies;

public interface UnsafeInterface {
    void putShort(java.lang.Object arg0, long arg1, short arg2);
    byte getByte(java.lang.Object arg0, long arg1);
    void putObject(java.lang.Object arg0, long arg1, java.lang.Object arg2);
    boolean shouldBeInitialized(java.lang.Class<?> arg0);
    java.lang.Object getObject(java.lang.Object arg0, long arg1);
    java.lang.Class<?> defineAnonymousClass(java.lang.Class<?> arg0, byte[] arg1, java.lang.Object[] arg2);
    int getAndAddInt(java.lang.Object arg0, long arg1, int arg2);
    float getFloat(java.lang.Object arg0, long arg1);
    void putDouble(java.lang.Object arg0, long arg1, double arg2);
    void setMemory(long arg0, long arg1, byte arg2);
    float getFloat(long arg0);
    int getLoadAverage(double[] arg0, int arg1);
    boolean getBooleanVolatile(java.lang.Object arg0, long arg1);
    java.lang.Object getObjectVolatile(java.lang.Object arg0, long arg1);
    void freeMemory(long arg0);
    void putLong(java.lang.Object arg0, long arg1, long arg2);
    int arrayIndexScale(java.lang.Class<?> arg0);
    java.lang.Object staticFieldBase(java.lang.reflect.Field arg0);
    void invokeCleaner(java.nio.ByteBuffer arg0);
    void copyMemory(long arg0, long arg1, long arg2);
    void putIntVolatile(java.lang.Object arg0, long arg1, int arg2);
    void park(boolean arg0, long arg1);
    long staticFieldOffset(java.lang.reflect.Field arg0);
    long getAndAddLong(java.lang.Object arg0, long arg1, long arg2);
    void throwException(java.lang.Throwable arg0);
    long allocateMemory(long arg0);
    double getDouble(java.lang.Object arg0, long arg1);
    byte getByte(long arg0);
    java.lang.Object allocateInstance(java.lang.Class<?> arg0) throws java.lang.InstantiationException;
    boolean compareAndSwapObject(java.lang.Object arg0, long arg1, java.lang.Object arg2, java.lang.Object arg3);
    void putLong(long arg0, long arg1);
    char getChar(java.lang.Object arg0, long arg1);
    void putByte(java.lang.Object arg0, long arg1, byte arg2);
    int getInt(java.lang.Object arg0, long arg1);
    void copyMemory(java.lang.Object arg0, long arg1, java.lang.Object arg2, long arg3, long arg4);
    void ensureClassInitialized(java.lang.Class<?> arg0);
    void fullFence();
    boolean compareAndSwapLong(java.lang.Object arg0, long arg1, long arg2, long arg3);
    boolean compareAndSwapInt(java.lang.Object arg0, long arg1, int arg2, int arg3);
    double getDoubleVolatile(java.lang.Object arg0, long arg1);
    void setMemory(java.lang.Object arg0, long arg1, long arg2, byte arg3);
    long objectFieldOffset(java.lang.reflect.Field arg0);
    void putInt(long arg0, int arg1);
    int getInt(long arg0);
    void putLongVolatile(java.lang.Object arg0, long arg1, long arg2);
    void putDouble(long arg0, double arg1);
    char getCharVolatile(java.lang.Object arg0, long arg1);
    void putDoubleVolatile(java.lang.Object arg0, long arg1, double arg2);
    void putObjectVolatile(java.lang.Object arg0, long arg1, java.lang.Object arg2);
    short getShortVolatile(java.lang.Object arg0, long arg1);
    int getAndSetInt(java.lang.Object arg0, long arg1, int arg2);
    byte getByteVolatile(java.lang.Object arg0, long arg1);
    boolean getBoolean(java.lang.Object arg0, long arg1);
    void unpark(java.lang.Object arg0);
    void putAddress(long arg0, long arg1);
    void putFloatVolatile(java.lang.Object arg0, long arg1, float arg2);
    void putInt(java.lang.Object arg0, long arg1, int arg2);
    void putShort(long arg0, short arg1);
    void loadFence();
    void putBooleanVolatile(java.lang.Object arg0, long arg1, boolean arg2);
    void putShortVolatile(java.lang.Object arg0, long arg1, short arg2);
    void putByteVolatile(java.lang.Object arg0, long arg1, byte arg2);
    void putByte(long arg0, byte arg1);
    long reallocateMemory(long arg0, long arg1);
    void putOrderedObject(java.lang.Object arg0, long arg1, java.lang.Object arg2);
    long getLong(long arg0);
    java.lang.Object getAndSetObject(java.lang.Object arg0, long arg1, java.lang.Object arg2);
    long getAndSetLong(java.lang.Object arg0, long arg1, long arg2);
    void putOrderedInt(java.lang.Object arg0, long arg1, int arg2);
    short getShort(long arg0);
    short getShort(java.lang.Object arg0, long arg1);
    int arrayBaseOffset(java.lang.Class<?> arg0);
    void putOrderedLong(java.lang.Object arg0, long arg1, long arg2);
    int pageSize();
    void putFloat(long arg0, float arg1);
    UnsafeInterface getUnsafe();
    void putChar(java.lang.Object arg0, long arg1, char arg2);
    void putChar(long arg0, char arg1);
    void putBoolean(java.lang.Object arg0, long arg1, boolean arg2);
    float getFloatVolatile(java.lang.Object arg0, long arg1);
    long getLong(java.lang.Object arg0, long arg1);
    int addressSize();
    int getIntVolatile(java.lang.Object arg0, long arg1);
    double getDouble(long arg0);
    char getChar(long arg0);
    void putCharVolatile(java.lang.Object arg0, long arg1, char arg2);
    long getAddress(long arg0);
    void storeFence();
    long getLongVolatile(java.lang.Object arg0, long arg1);
    void putFloat(java.lang.Object arg0, long arg1, float arg2);
}