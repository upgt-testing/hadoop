package org.apache.hadoop.hdfs.remoteProxies;

public interface FSImageInterface {
    void rollingRollback(long arg0, long arg1) throws java.io.IOException;
    void waitForThreads(java.util.List<java.lang.Thread> arg0);
    boolean addToCheckpointing(long arg0);
    void close() throws java.io.IOException;
    long getMostRecentCheckpointTxId();
    void endCheckpoint(CheckpointSignatureInterface arg0) throws java.io.IOException;
    NamenodeCommandInterface startCheckpoint(NamenodeRegistrationInterface arg0, NamenodeRegistrationInterface arg1, int arg2) throws java.io.IOException;
    int getNamespaceID();
    void purgeOldStorage(org.apache.hadoop.hdfs.server.namenode.NNStorage.NameNodeFile arg0);
    long loadEdits(java.lang.Iterable<org.apache.hadoop.hdfs.server.namenode.EditLogInputStream> arg0, FSNamesystemInterface arg1) throws java.io.IOException;
    void format(FSNamesystemInterface arg0, java.lang.String arg1, boolean arg2) throws java.io.IOException;
    java.util.List<java.net.URI> getCheckpointEditsDirs(ConfigurationInterface arg0, java.lang.String arg1);
    FSEditLogInterface getEditLog();
    void checkUpgrade() throws java.io.IOException;
    void openEditLogForWrite(int arg0) throws java.io.IOException;
    java.util.Collection<java.net.URI> getCheckpointDirs(ConfigurationInterface arg0, java.lang.String arg1);
    CheckpointSignatureInterface rollEditLog(int arg0) throws java.io.IOException;
    void loadFSImageFile(FSNamesystemInterface arg0, MetaRecoveryContextInterface arg1, FSImageFileInterface arg2, org.apache.hadoop.hdfs.server.common.HdfsServerConstants.StartupOption arg3) throws java.io.IOException;
    NNStorageInterface getStorage();
    void renameCheckpoint(long arg0, org.apache.hadoop.hdfs.server.namenode.NNStorage.NameNodeFile arg1, org.apache.hadoop.hdfs.server.namenode.NNStorage.NameNodeFile arg2, boolean arg3) throws java.io.IOException;
    boolean confirmFormat(boolean arg0, boolean arg1) throws java.io.IOException;
    boolean recoverTransitionRead(org.apache.hadoop.hdfs.server.common.HdfsServerConstants.StartupOption arg0, FSNamesystemInterface arg1, MetaRecoveryContextInterface arg2) throws java.io.IOException;
    boolean hasRollbackFSImage() throws java.io.IOException;
    void saveNamespace(FSNamesystemInterface arg0, org.apache.hadoop.hdfs.server.namenode.NNStorage.NameNodeFile arg1, CancelerInterface arg2) throws java.io.IOException;
    boolean loadFSImage(FSNamesystemInterface arg0, org.apache.hadoop.hdfs.server.common.HdfsServerConstants.StartupOption arg1, MetaRecoveryContextInterface arg2) throws java.io.IOException;
    long loadEdits(java.lang.Iterable<org.apache.hadoop.hdfs.server.namenode.EditLogInputStream> arg0, FSNamesystemInterface arg1, long arg2, org.apache.hadoop.hdfs.server.common.HdfsServerConstants.StartupOption arg3, MetaRecoveryContextInterface arg4) throws java.io.IOException;
    void doRollback(FSNamesystemInterface arg0) throws java.io.IOException;
    void initEditLog(org.apache.hadoop.hdfs.server.common.HdfsServerConstants.StartupOption arg0) throws java.io.IOException;
    long getCorrectLastAppliedOrWrittenTxId();
    void updateLastAppliedTxIdFromWritten();
    boolean recoverStorageDirs(org.apache.hadoop.hdfs.server.common.HdfsServerConstants.StartupOption arg0, NNStorageInterface arg1, java.util.Map<org.apache.hadoop.hdfs.server.common.Storage.StorageDirectory, org.apache.hadoop.hdfs.server.common.Storage.StorageState> arg2) throws java.io.IOException;
    void initNewDirs();
    long getLastAppliedTxId();
    void renameCheckpoint(org.apache.hadoop.hdfs.server.namenode.NNStorage.NameNodeFile arg0, org.apache.hadoop.hdfs.server.namenode.NNStorage.NameNodeFile arg1) throws java.io.IOException;
    boolean isUpgradeFinalized();
    void saveFSImageInAllDirs(FSNamesystemInterface arg0, org.apache.hadoop.hdfs.server.namenode.NNStorage.NameNodeFile arg1, long arg2, CancelerInterface arg3) throws java.io.IOException;
    boolean needsResaveBasedOnStaleCheckpoint(java.io.File arg0, long arg1);
    void doUpgrade(FSNamesystemInterface arg0) throws java.io.IOException;
    int getLayoutVersion();
    void reloadFromImageFile(java.io.File arg0, FSNamesystemInterface arg1) throws java.io.IOException;
    void saveFSImage(SaveNamespaceContextInterface arg0, StorageDirectoryInterface arg1, org.apache.hadoop.hdfs.server.namenode.NNStorage.NameNodeFile arg2) throws java.io.IOException;
    void saveLegacyOIVImage(FSNamesystemInterface arg0, java.lang.String arg1, CancelerInterface arg2) throws java.io.IOException;
    void finalizeUpgrade(boolean arg0) throws java.io.IOException;
    void loadFSImage(java.io.File arg0, FSNamesystemInterface arg1, MetaRecoveryContextInterface arg2, boolean arg3) throws java.io.IOException;
    void saveNamespace(FSNamesystemInterface arg0) throws java.io.IOException;
    void updateStorageVersion() throws java.io.IOException;
    void saveDigestAndRenameCheckpointImage(org.apache.hadoop.hdfs.server.namenode.NNStorage.NameNodeFile arg0, long arg1, MD5HashInterface arg2) throws java.io.IOException;
    void doImportCheckpoint(FSNamesystemInterface arg0) throws java.io.IOException;
    void loadFSImage(java.io.File arg0, MD5HashInterface arg1, FSNamesystemInterface arg2, MetaRecoveryContextInterface arg3, boolean arg4) throws java.io.IOException;
    void saveFSImageInAllDirs(FSNamesystemInterface arg0, long arg1) throws java.io.IOException;
    void checkUpgrade(NNStorageInterface arg0) throws java.io.IOException;
    java.lang.String getClusterID();
    java.lang.String getBlockPoolID();
    void removeFromCheckpointing(long arg0);
    boolean saveNamespace(long arg0, long arg1, FSNamesystemInterface arg2) throws java.io.IOException;
    void deleteCancelledCheckpoint(long arg0) throws java.io.IOException;
    void renameImageFileInDir(StorageDirectoryInterface arg0, org.apache.hadoop.hdfs.server.namenode.NNStorage.NameNodeFile arg1, org.apache.hadoop.hdfs.server.namenode.NNStorage.NameNodeFile arg2, long arg3, boolean arg4) throws java.io.IOException;
    long getLastAppliedOrWrittenTxId();
}