package org.apache.hadoop.hdfs.remoteProxies;

public interface SessionInterface {
    java.util.Set<java.lang.String> getNames();
    int getMaxInactiveInterval();
    void invalidate();
    java.lang.String getVHost();
    void unbindValue(java.lang.String arg0, java.lang.Object arg1);
    javax.servlet.ServletContext getServletContext();
    boolean isValid();
    java.lang.String getExtendedId();
    long getCreationTime() throws java.lang.IllegalStateException;
    void didActivate();
    boolean isResident();
    long getRequests();
    void setExtendedId(java.lang.String arg0);
    boolean isNew() throws java.lang.IllegalStateException;
    void use();
    int getAttributes();
    void checkLocked() throws java.lang.IllegalStateException;
    long calculateInactivityTimeout(long arg0);
    void setIdChanged(boolean arg0);
    void callSessionAttributeListeners(java.lang.String arg0, java.lang.Object arg1, java.lang.Object arg2);
    java.util.Enumeration<java.lang.String> getAttributeNames();
    void setAttribute(java.lang.String arg0, java.lang.Object arg1);
    java.lang.String[] getValueNames() throws java.lang.IllegalStateException;
    long getLastAccessedTime();
    void removeValue(java.lang.String arg0);
    void removeAttribute(java.lang.String arg0);
    void doInvalidate() throws java.lang.IllegalStateException;
    boolean isIdChanged();
    long getCookieSetTime();
    SessionDataInterface getSessionData();
    java.lang.Object getAttribute(java.lang.String arg0);
    boolean isInvalid();
    java.lang.String toString();
    javax.servlet.http.HttpSessionContext getSessionContext();
    java.lang.Object getValue(java.lang.String arg0);
    void cookieSet();
    void renewId(javax.servlet.http.HttpServletRequest arg0);
    LockInterface lock();
    void willPassivate();
    void checkValidForRead() throws java.lang.IllegalStateException;
    void setMaxInactiveInterval(int arg0);
    boolean access(long arg0);
    SessionHandlerInterface getSessionHandler();
    SessionInterface getSession();
    void finishInvalidate() throws java.lang.IllegalStateException;
    void bindValue(java.lang.String arg0, java.lang.Object arg1);
    boolean isExpiredAt(long arg0);
    java.lang.String getContextPath();
    void complete();
    void setResident(boolean arg0);
    boolean isIdleLongerThan(int arg0);
    void checkValidForWrite() throws java.lang.IllegalStateException;
    boolean beginInvalidate();
    void putValue(java.lang.String arg0, java.lang.Object arg1);
    void updateInactivityTimer();
    boolean isChanging();
    java.lang.String getId();
}