package org.apache.hadoop.hdfs.remoteProxies;

public interface SSLServerSocketInterface {
    boolean isClosed();
    void setSocketFactory(java.net.SocketImplFactory arg0) throws java.io.IOException;
    java.nio.channels.ServerSocketChannel getChannel();
    SSLParametersInterface getSSLParameters();
    void close() throws java.io.IOException;
    void setNeedClientAuth(boolean arg0);
    void setSoTimeout(int arg0) throws java.net.SocketException;
    java.lang.Void checkPermission();
    int getSoTimeout() throws java.io.IOException;
    boolean getEnableSessionCreation();
    java.lang.String toString();
    void setUseClientMode(boolean arg0);
    java.net.Socket accept() throws java.io.IOException;
    java.lang.String[] getEnabledProtocols();
    void setEnabledProtocols(java.lang.String[] arg0);
    void implAccept(java.net.Socket arg0) throws java.io.IOException;
    void checkOldImpl();
    java.lang.String[] getSupportedCipherSuites();
    java.net.SocketImpl getImpl() throws java.net.SocketException;
    java.lang.String[] getSupportedProtocols();
    void setEnableSessionCreation(boolean arg0);
    void bind(java.net.SocketAddress arg0, int arg1) throws java.io.IOException;
    boolean getReuseAddress() throws java.net.SocketException;
    java.util.Set<java.net.SocketOption<?>> supportedOptions();
    int getLocalPort();
    int getReceiveBufferSize() throws java.net.SocketException;
    java.lang.String[] getEnabledCipherSuites();
    void setImpl();
    void bind(java.net.SocketAddress arg0) throws java.io.IOException;
    boolean getWantClientAuth();
    java.net.InetAddress getInetAddress();
    <T> T getOption(java.net.SocketOption<T> arg0) throws java.io.IOException;
    void setSSLParameters(SSLParametersInterface arg0);
    void setReceiveBufferSize(int arg0) throws java.net.SocketException;
    boolean getNeedClientAuth();
    void setCreated();
    void setBound();
    boolean isBound();
    void setPerformancePreferences(int arg0, int arg1, int arg2);
    java.net.SocketAddress getLocalSocketAddress();
    void setWantClientAuth(boolean arg0);
    <T> java.net.ServerSocket setOption(java.net.SocketOption<T> arg0, T arg1) throws java.io.IOException;
    boolean getUseClientMode();
    void setReuseAddress(boolean arg0) throws java.net.SocketException;
    void setEnabledCipherSuites(java.lang.String[] arg0);
    void createImpl() throws java.net.SocketException;
}