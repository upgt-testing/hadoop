package org.apache.hadoop.hdfs.remoteProxies;

public interface ServerConnectorInterface {
    java.lang.String dump();
    java.lang.String getState(org.eclipse.jetty.util.component.LifeCycle arg0);
    int getAcceptorPriorityDelta();
    void dumpObjects(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Object arg2, java.lang.Object... arg3) throws java.io.IOException;
    void updateBeans(java.lang.Object[] arg0, java.lang.Object[] arg1);
    void dump(java.lang.Appendable arg0, java.lang.String arg1, java.util.Collection<?>... arg2) throws java.io.IOException;
    void interruptAcceptors();
    void open() throws java.io.IOException;
    java.util.Collection<org.eclipse.jetty.server.ConnectionFactory> getConnectionFactories();
    void setBeans(java.util.Collection<java.lang.Object> arg0);
    org.eclipse.jetty.util.component.Dumpable named(java.lang.String arg0, java.lang.Object arg1);
    void dumpObjects(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Object... arg2) throws java.io.IOException;
    int getSoLingerTime();
    java.lang.String toString();
    boolean addBean(java.lang.Object arg0);
    void updateBean(java.lang.Object arg0, java.lang.Object arg1, boolean arg2);
    long getIdleTimeout();
    int getLocalPort();
    void setAccepting(boolean arg0);
    void removeEventListener(org.eclipse.jetty.util.component.Container.Listener arg0);
    boolean removeBean(java.lang.Object arg0);
    java.util.List<java.lang.String> getProtocols();
    void dumpObject(java.lang.Appendable arg0, java.lang.Object arg1) throws java.io.IOException;
    java.lang.String getDefaultProtocol();
    void addManaged(org.eclipse.jetty.util.component.LifeCycle arg0);
    long getStopTimeout();
    void accepted(java.nio.channels.SocketChannel arg0) throws java.io.IOException;
    java.lang.String dump(org.eclipse.jetty.util.component.Dumpable arg0);
    int getAcceptedSendBufferSize();
    void doStart() throws java.lang.Exception;
    java.lang.String getHost();
    void addFirstConnectionFactory(org.eclipse.jetty.server.ConnectionFactory arg0);
    <T> T getConnectionFactory(java.lang.Class<T> arg0);
    boolean isFailed();
    void setStopped();
    void start(java.lang.Object arg0);
    ServerInterface getServer();
    java.lang.Object getTransport();
    void destroy();
    boolean remove(BeanInterface arg0);
    java.util.Collection<org.eclipse.jetty.io.EndPoint> getConnectedEndPoints();
    void onEndPointClosed(org.eclipse.jetty.io.EndPoint arg0);
    void setName(java.lang.String arg0);
    void addLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle.Listener arg0);
    void dumpBeans(java.lang.Appendable arg0, java.lang.String arg1, java.util.Collection<?>... arg2) throws java.io.IOException;
    void dumpIterable(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Iterable<?> arg2, boolean arg3) throws java.io.IOException;
    void clearConnectionFactories();
    void setSoLingerTime(int arg0);
    void setIdleTimeout(long arg0);
    void accept(int arg0) throws java.io.IOException;
    boolean isUnmanaged(java.lang.Object arg0);
    void lambda$named$0(java.lang.String arg0, java.lang.Object arg1, java.lang.Appendable arg2, java.lang.String arg3) throws java.io.IOException;
    java.lang.String dumpSelf();
    void setPort(int arg0);
    boolean getReuseAddress();
    int getPort();
    java.util.concurrent.Executor getExecutor();
//    boolean addBean(java.lang.Object arg0, org.eclipse.jetty.util.component.ContainerLifeCycle.Managed arg1);
    void stop() throws java.lang.Exception;
    java.util.Collection<java.lang.Object> getBeans();
    void join(long arg0) throws java.lang.InterruptedException;
    void setFailed(java.lang.Throwable arg0);
    void updateBean(java.lang.Object arg0, java.lang.Object arg1);
    SelectorManagerInterface getSelectorManager();
    void dump(java.lang.Appendable arg0) throws java.io.IOException;
    java.lang.String getName();
    java.nio.channels.ServerSocketChannel openAcceptChannel() throws java.io.IOException;
    void setAcceptQueueSize(int arg0);
    void setAcceptedReceiveBufferSize(int arg0);
    void setAcceptedTcpNoDelay(boolean arg0);
    void addEventListener(org.eclipse.jetty.util.component.Container.Listener arg0);
    void stop(java.lang.Object arg0);
    void setStarting();
    org.eclipse.jetty.server.ConnectionFactory getDefaultConnectionFactory();
    <T> void getContainedBeans(java.lang.Class<T> arg0, java.util.Collection<T> arg1);
    void onEndPointOpened(org.eclipse.jetty.io.EndPoint arg0);
    org.eclipse.jetty.util.thread.Scheduler getScheduler();
    boolean isStarted();
    boolean isStopping();
    java.lang.String getState();
    boolean isAccepting();
    org.eclipse.jetty.server.ConnectionFactory getConnectionFactory(java.lang.String arg0);
    boolean isStarting();
    boolean isStopped();
    void manage(java.lang.Object arg0);
    boolean addBean(java.lang.Object arg0, boolean arg1);
    boolean isManaged(java.lang.Object arg0);
    void dumpContainer(java.lang.Appendable arg0, java.lang.String arg1, org.eclipse.jetty.util.component.Container arg2, boolean arg3) throws java.io.IOException;
    void setDefaultProtocol(java.lang.String arg0);
    void setStarted();
    void setReuseAddress(boolean arg0);
    org.eclipse.jetty.io.ByteBufferPool getByteBufferPool();
    boolean isShutdown();
    void configure(java.net.Socket arg0);
    void setStopping();
    void close();
    void start(org.eclipse.jetty.util.component.LifeCycle arg0) throws java.lang.Exception;
    java.util.concurrent.Future<java.lang.Void> shutdown();
    void removeBeans();
    void doStop() throws java.lang.Exception;
    void open(java.nio.channels.ServerSocketChannel arg0) throws java.io.IOException;
    boolean isOpen();
    void dumpStdErr();
    boolean contains(java.lang.Object arg0);
    SelectorManagerInterface newSelectorManager(java.util.concurrent.Executor arg0, org.eclipse.jetty.util.thread.Scheduler arg1, int arg2);
    void dumpThis(java.lang.Appendable arg0) throws java.io.IOException;
    void join() throws java.lang.InterruptedException;
    boolean isInheritChannel();
    int getAcceptQueueSize();
    int getAcceptedReceiveBufferSize();
    void dump(java.lang.Appendable arg0, java.lang.String arg1) throws java.io.IOException;
    boolean getAcceptedTcpNoDelay();
    void removeLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle.Listener arg0);
    org.eclipse.jetty.server.ConnectionFactory removeConnectionFactory(java.lang.String arg0);
    void dumpMapEntries(java.lang.Appendable arg0, java.lang.String arg1, java.util.Map<?, ?> arg2, boolean arg3) throws java.io.IOException;
    org.eclipse.jetty.server.HttpChannel.Listener getHttpChannelListeners();
    <T> java.util.Collection<T> getBeans(java.lang.Class<T> arg0);
    void setAcceptedSendBufferSize(int arg0);
    void start() throws java.lang.Exception;
    void unmanage(BeanInterface arg0);
    void setConnectionFactories(java.util.Collection<org.eclipse.jetty.server.ConnectionFactory> arg0);
    int getAcceptors();
    boolean isDumpable(java.lang.Object arg0);
    void setAcceptorPriorityDelta(int arg0);
    <T> java.util.Collection<T> getContainedBeans(java.lang.Class<T> arg0);
    void stop(org.eclipse.jetty.util.component.LifeCycle arg0) throws java.lang.Exception;
    void addConnectionFactory(org.eclipse.jetty.server.ConnectionFactory arg0);
    void addIfAbsentConnectionFactory(org.eclipse.jetty.server.ConnectionFactory arg0);
    boolean isRunning();
    void unmanage(java.lang.Object arg0);
    boolean handleAcceptFailure(java.lang.Throwable arg0);
    void setStopTimeout(long arg0);
    BeanInterface getBean(java.lang.Object arg0);
    void setInheritChannel(boolean arg0);
    ChannelEndPointInterface newEndPoint(java.nio.channels.SocketChannel arg0, ManagedSelectorInterface arg1, java.nio.channels.SelectionKey arg2) throws java.io.IOException;
    void manage(BeanInterface arg0);
    boolean isAuto(java.lang.Object arg0);
    void setHost(java.lang.String arg0);
    <T> T getBean(java.lang.Class<T> arg0);
}