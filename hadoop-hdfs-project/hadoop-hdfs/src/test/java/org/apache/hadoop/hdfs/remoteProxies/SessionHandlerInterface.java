package org.apache.hadoop.hdfs.remoteProxies;

public interface SessionHandlerInterface {
    HttpCookieInterface getSessionCookie(javax.servlet.http.HttpSession arg0, java.lang.String arg1, boolean arg2);
    org.eclipse.jetty.server.SessionIdManager getSessionIdManager();
    void handle(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletRequest arg2, javax.servlet.http.HttpServletResponse arg3) throws java.io.IOException, javax.servlet.ServletException;
    boolean isStopped();
    long getSessionTimeTotal();
    boolean isDumpable(java.lang.Object arg0);
    java.lang.String getSessionPath();
    java.util.Collection<java.lang.Object> getBeans();
    void removeLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle.Listener arg0);
    void setStopped();
    void updateBeans(java.lang.Object[] arg0, java.lang.Object[] arg1);
    boolean isUnmanaged(java.lang.Object arg0);
    int getRefreshCookieAge();
    void dumpObjects(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Object... arg2) throws java.io.IOException;
    void setMaxInactiveInterval(int arg0);
    java.lang.String getExtendedId(javax.servlet.http.HttpSession arg0);
    void lambda$named$0(java.lang.String arg0, java.lang.Object arg1, java.lang.Appendable arg2, java.lang.String arg3) throws java.io.IOException;
    int getMaxInactiveInterval();
    boolean isValid(javax.servlet.http.HttpSession arg0);
    double getSessionTimeStdDev();
    HttpCookieInterface access(javax.servlet.http.HttpSession arg0, boolean arg1);
    BeanInterface getBean(java.lang.Object arg0);
    void sessionInactivityTimerExpired(SessionInterface arg0);
    void doStart() throws java.lang.Exception;
    void dumpIterable(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Iterable<?> arg2, boolean arg3) throws java.io.IOException;
    void setSessionCache(org.eclipse.jetty.server.session.SessionCache arg0);
    boolean addBean(java.lang.Object arg0, boolean arg1);
    void nextScope(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletRequest arg2, javax.servlet.http.HttpServletResponse arg3) throws java.io.IOException, javax.servlet.ServletException;
    double getSessionTimeMean();
    org.eclipse.jetty.server.Handler[] getChildHandlers();
    void dump(java.lang.Appendable arg0, java.lang.String arg1, java.util.Collection<?>... arg2) throws java.io.IOException;
    void setUsingCookies(boolean arg0);
    boolean isStopping();
    void doHandle(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletRequest arg2, javax.servlet.http.HttpServletResponse arg3) throws java.io.IOException, javax.servlet.ServletException;
    void doError(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletRequest arg2, javax.servlet.http.HttpServletResponse arg3) throws java.io.IOException, javax.servlet.ServletException;
    void callSessionIdListeners(SessionInterface arg0, java.lang.String arg1);
    void setStopTimeout(long arg0);
    void complete(javax.servlet.http.HttpSession arg0);
    void doScope(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletRequest arg2, javax.servlet.http.HttpServletResponse arg3) throws java.io.IOException, javax.servlet.ServletException;
    void start(java.lang.Object arg0);
    void unmanage(BeanInterface arg0);
    java.lang.String getSessionIdPathParameterNamePrefix();
    void setStarted();
    SessionInterface removeSession(java.lang.String arg0, boolean arg1);
    void setHandler(org.eclipse.jetty.server.Handler arg0);
    void addEventListener(java.util.EventListener arg0);
    org.eclipse.jetty.server.Handler getHandler();
    void dumpObjects(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Object arg2, java.lang.Object... arg3) throws java.io.IOException;
    boolean isStarted();
    void removeEventListener(org.eclipse.jetty.util.component.Container.Listener arg0);
    boolean isManaged(java.lang.Object arg0);
    org.eclipse.jetty.util.component.Dumpable named(java.lang.String arg0, java.lang.Object arg1);
    void removeEventListener(java.util.EventListener arg0);
    void scavenge();
    void setFailed(java.lang.Throwable arg0);
    void addManaged(org.eclipse.jetty.util.component.LifeCycle arg0);
    void invalidate(java.lang.String arg0);
    boolean getSecureCookies();
    java.lang.String getSessionCookieName(javax.servlet.SessionCookieConfig arg0);
    void unmanage(java.lang.Object arg0);
    <T> java.util.Collection<T> getContainedBeans(java.lang.Class<T> arg0);
    boolean removeBean(java.lang.Object arg0);
    boolean isFailed();
    void setNodeIdInSessionId(boolean arg0);
    void addLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle.Listener arg0);
    void doSessionAttributeListeners(SessionInterface arg0, java.lang.String arg1, java.lang.Object arg2, java.lang.Object arg3);
    org.eclipse.jetty.server.Handler[] getChildHandlersByClass(java.lang.Class<?> arg0);
    boolean addBean(java.lang.Object arg0);
    org.eclipse.jetty.server.session.SessionCache getSessionCache();
    void nextHandle(java.lang.String arg0, RequestInterface arg1, javax.servlet.http.HttpServletRequest arg2, javax.servlet.http.HttpServletResponse arg3) throws java.io.IOException, javax.servlet.ServletException;
    java.lang.String dump();
    java.lang.String getState();
    boolean isIdInUse(java.lang.String arg0) throws java.lang.Exception;
    java.lang.String dumpSelf();
    void dump(java.lang.Appendable arg0) throws java.io.IOException;
    void renewSessionId(java.lang.String arg0, java.lang.String arg1, java.lang.String arg2, java.lang.String arg3);
    void updateBean(java.lang.Object arg0, java.lang.Object arg1);
    void dumpObject(java.lang.Appendable arg0, java.lang.Object arg1) throws java.io.IOException;
    javax.servlet.http.HttpSession newHttpSession(javax.servlet.http.HttpServletRequest arg0);
    java.util.Set<javax.servlet.SessionTrackingMode> getEffectiveSessionTrackingModes();
    void stop(java.lang.Object arg0);
    void dumpContainer(java.lang.Appendable arg0, java.lang.String arg1, org.eclipse.jetty.util.component.Container arg2, boolean arg3) throws java.io.IOException;
    SessionInterface getSession(java.lang.String arg0);
    void callSessionDestroyedListeners(SessionInterface arg0);
    boolean isUsingURLs();
    <T> T getChildHandlerByClass(java.lang.Class<T> arg0);
    javax.servlet.SessionCookieConfig getSessionCookieConfig();
    boolean isRunning();
    ServerInterface getServer();
    boolean remove(BeanInterface arg0);
    boolean isStarting();
    void addEventListener(org.eclipse.jetty.util.component.Container.Listener arg0);
    java.lang.String toString();
    void checkRequestedSessionId(RequestInterface arg0, javax.servlet.http.HttpServletRequest arg1);
    void shutdownSessions() throws java.lang.Exception;
    org.eclipse.jetty.http.HttpCookie.SameSite getSameSite();
    <T> java.util.Collection<T> getBeans(java.lang.Class<T> arg0);
    long getSessionTimeMax();
    void setRefreshCookieAge(int arg0);
    void removeBeans();
    java.lang.String dump(org.eclipse.jetty.util.component.Dumpable arg0);
    void destroy();
    void dumpStdErr();
    void setStopping();
    int getMaxCookieAge();
    boolean isCheckingRemoteSessionIdEncoding();
    void updateBean(java.lang.Object arg0, java.lang.Object arg1, boolean arg2);
    void expandChildren(java.util.List<org.eclipse.jetty.server.Handler> arg0, java.lang.Class<?> arg1);
    java.lang.String getSessionDomain();
    javax.servlet.http.HttpSession getHttpSession(java.lang.String arg0);
    void doStop() throws java.lang.Exception;
    void setSessionCookie(java.lang.String arg0);
    boolean contains(java.lang.Object arg0);
    org.eclipse.jetty.util.thread.Scheduler getScheduler();
    org.eclipse.jetty.server.Handler[] getHandlers();
    void dumpBeans(java.lang.Appendable arg0, java.lang.String arg1, java.util.Collection<?>... arg2) throws java.io.IOException;
    java.lang.String getId(javax.servlet.http.HttpSession arg0);
    void manage(java.lang.Object arg0);
//    boolean addBean(java.lang.Object arg0, org.eclipse.jetty.util.component.ContainerLifeCycle.Managed arg1);
    void commit(javax.servlet.http.HttpSession arg0);
    void setSessionTrackingModes(java.util.Set<javax.servlet.SessionTrackingMode> arg0);
    void dump(java.lang.Appendable arg0, java.lang.String arg1) throws java.io.IOException;
    int getSessionsCreated();
    <T> void getContainedBeans(java.lang.Class<T> arg0, java.util.Collection<T> arg1);
    boolean getHttpOnly();
    void dumpMapEntries(java.lang.Appendable arg0, java.lang.String arg1, java.util.Map<?, ?> arg2, boolean arg3) throws java.io.IOException;
    void doShutdown(java.util.List<java.util.concurrent.Future<java.lang.Void>> arg0) throws org.eclipse.jetty.util.MultiException;
    void complete(SessionInterface arg0, RequestInterface arg1);
    java.lang.String getSessionCookie();
    <T> T getBean(java.lang.Class<T> arg0);
    void start() throws java.lang.Exception;
    void setSecureRequestOnly(boolean arg0);
    void setSameSite(org.eclipse.jetty.http.HttpCookie.SameSite arg0);
    java.lang.String getSessionIdPathParameterName();
    void recordSessionTime(SessionInterface arg0);
    boolean isNodeIdInSessionId();
    boolean isSecureRequestOnly();
    void setCheckingRemoteSessionIdEncoding(boolean arg0);
    void expandHandler(org.eclipse.jetty.server.Handler arg0, java.util.List<org.eclipse.jetty.server.Handler> arg1, java.lang.Class<?> arg2);
    void insertHandler(HandlerWrapperInterface arg0);
    void setSessionIdManager(org.eclipse.jetty.server.SessionIdManager arg0);
    java.util.Set<javax.servlet.SessionTrackingMode> getDefaultSessionTrackingModes();
    void stop(org.eclipse.jetty.util.component.LifeCycle arg0) throws java.lang.Exception;
    java.lang.String getState(org.eclipse.jetty.util.component.LifeCycle arg0);
    void stop() throws java.lang.Exception;
    void setSessionIdPathParameterName(java.lang.String arg0);
    void manage(BeanInterface arg0);
    void dumpThis(java.lang.Appendable arg0) throws java.io.IOException;
    long getStopTimeout();
    boolean isUsingCookies();
    <T> T findContainerOf(org.eclipse.jetty.server.HandlerContainer arg0, java.lang.Class<T> arg1, org.eclipse.jetty.server.Handler arg2);
    void setServer(ServerInterface arg0);
    void callSessionCreatedListeners(SessionInterface arg0);
    void setHttpOnly(boolean arg0);
    boolean isAuto(java.lang.Object arg0);
    void statsReset();
    void setStarting();
    void sessionInactivityTimerExpired(SessionInterface arg0, long arg1);
    void start(org.eclipse.jetty.util.component.LifeCycle arg0) throws java.lang.Exception;
    void clearEventListeners();
    void setBeans(java.util.Collection<java.lang.Object> arg0);
}