package org.apache.hadoop.hdfs.remoteProxies;

public interface DataNodeInterface {
    void setClusterId(java.lang.String arg0, java.lang.String arg1) throws java.io.IOException;
    void scheduleAllBlockReport(long arg0);
    void removeVolumes(java.util.Collection<org.apache.hadoop.hdfs.server.datanode.StorageLocation> arg0, boolean arg1) throws java.io.IOException;
    void shutdownPeriodicScanners();
//    java.util.List<org.apache.hadoop.hdfs.server.datanode.BPOfferService> getAllBpOs();
    BlockScannerInterface getBlockScanner();
    java.lang.String getSoftwareVersion();
    void handleAddBlockPoolError(AddBlockPoolExceptionInterface arg0) throws java.io.IOException;
    void notifyNamenodeReceivingBlock(ExtendedBlockInterface arg0, java.lang.String arg1);
    boolean isTransfer(org.apache.hadoop.hdfs.protocol.datatransfer.BlockConstructionStage arg0, java.lang.String arg1);
    java.util.List<org.apache.hadoop.hdfs.protocol.DatanodeVolumeInfo> getVolumeReport() throws java.io.IOException;
    void transferBlocks(java.lang.String arg0, org.apache.hadoop.hdfs.protocol.Block[] arg1, org.apache.hadoop.hdfs.protocol.DatanodeInfo[][] arg2, org.apache.hadoop.fs.StorageType[][] arg3, java.lang.String[][] arg4);
    java.lang.String getSlowDisks();
    DataStorageInterface getStorage();
    ConfigurationInterface getNewConf();
    void checkDatanodeUuid() throws java.io.IOException;
    int getInfoSecurePort();
    void startReconfiguration() throws java.io.IOException;
    java.lang.String generateUuid();
    long getMaxNumberOfBlocksToLog();
    java.lang.String getDiskBalancerSetting(java.lang.String arg0) throws java.io.IOException;
    void incrementXmitsInProcess(int arg0);
    void removeVolumes(java.util.Collection<org.apache.hadoop.hdfs.server.datanode.StorageLocation> arg0) throws java.io.IOException;
    TracerInterface createTracer(ConfigurationInterface arg0);
    void incrementXmitsInProgress();
    org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataEncryptionKeyFactory getDataEncryptionKeyFactoryForBlock(ExtendedBlockInterface arg0);
    void shutdownDatanode(boolean arg0) throws java.io.IOException;
    java.net.Socket newSocket() throws java.io.IOException;
    void submitDiskBalancerPlan(java.lang.String arg0, long arg1, java.lang.String arg2, java.lang.String arg3, boolean arg4) throws java.io.IOException;
    boolean isSecurityEnabled();
    void printUsage(java.io.PrintStream arg0);
    BlockPoolManagerInterface getBlockPoolManager();
    java.util.List<java.lang.String> listReconfigurableProperties() throws java.io.IOException;
    DatanodeIDInterface getDatanodeId();
    DataNodeInterface instantiateDataNode(java.lang.String[] arg0, ConfigurationInterface arg1) throws java.io.IOException;
    DataNodeInterface makeInstance(java.util.Collection<org.apache.hadoop.hdfs.server.datanode.StorageLocation> arg0, ConfigurationInterface arg1, SecureResourcesInterface arg2) throws java.io.IOException;
    DataTransferThrottlerInterface getEcReconstuctWriteThrottler();
    void clearAllBlockSecretKeys();
    DiskBalancerWorkStatusInterface queryDiskBalancerPlan() throws java.io.IOException;
    void reportBadBlock(BPOfferServiceInterface arg0, ExtendedBlockInterface arg1, java.lang.String arg2);
    void decrementXmitsInProgress();
    java.lang.String getDatanodeUuid();
    void startInfoServer() throws java.io.IOException;
    boolean areIBRDisabledForTests();
    java.lang.String getBPServiceActorInfo();
    java.lang.String getVolumeInfo();
    java.net.InetSocketAddress getInfoAddr(ConfigurationInterface arg0);
    void initStorage(NamespaceInfoInterface arg0) throws java.io.IOException;
    boolean isBPServiceAlive(java.lang.String arg0);
    void notifyNamenodeReceivedBlock(ExtendedBlockInterface arg0, java.lang.String arg1, java.lang.String arg2, boolean arg3);
    ChangedVolumesInterface parseChangedVolumes(java.lang.String arg0) throws java.io.IOException;
    java.lang.String getSendPacketDownstreamAvgInfo();
    java.net.InetSocketAddress getStreamingAddr(ConfigurationInterface arg0);
    void refreshNamenodes() throws java.io.IOException;
    void handleBadBlock(ExtendedBlockInterface arg0, java.io.IOException arg1, boolean arg2);
    java.lang.String getDataPort();
    void setHeartbeatsDisabledForTests(boolean arg0);
    java.lang.String reconfCacheReportParameters(java.lang.String arg0, java.lang.String arg1) throws org.apache.hadoop.conf.ReconfigurationException;
    java.lang.String getDatanodeHostname();
    boolean areHeartbeatsDisabledForTests();
    long getOOBTimeout(org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos.Status arg0) throws java.io.IOException;
    SaslDataTransferClientInterface getSaslClient();
    ReconfigurationTaskStatusInterface getReconfigurationTaskStatus();
    void checkSecureConfig(DNConfInterface arg0, ConfigurationInterface arg1, SecureResourcesInterface arg2) throws java.lang.RuntimeException;
    java.lang.String updateReplicaUnderRecovery(ExtendedBlockInterface arg0, long arg1, long arg2, long arg3) throws java.io.IOException;
    java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Long>> getDatanodeNetworkCounts();
    java.util.Collection<java.lang.String> getReconfigurableProperties();
    DomainPeerServerInterface getDomainPeerServer(ConfigurationInterface arg0, int arg1) throws java.io.IOException;
    void shutdownBlockPool(BPOfferServiceInterface arg0);
    void shutdownDiskBalancer();
    DataNodeInterface instantiateDataNode(java.lang.String[] arg0, ConfigurationInterface arg1, SecureResourcesInterface arg2) throws java.io.IOException;
    java.lang.String reconfDataXceiverParameters(java.lang.String arg0, java.lang.String arg1) throws org.apache.hadoop.conf.ReconfigurationException;
    BlockRecoveryWorkerInterface getBlockRecoveryWorker();
    void incrDatanodeNetworkErrors(java.lang.String arg0);
    java.lang.String reconfSlowDiskParameters(java.lang.String arg0, java.lang.String arg1) throws org.apache.hadoop.conf.ReconfigurationException;
    void handleVolumeFailures(java.util.Set<org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi> arg0);
    org.apache.hadoop.hdfs.protocol.datatransfer.PipelineAck.ECN getECN();
    void setBlockScanner(BlockScannerInterface arg0);
    java.lang.String toString();
    DiskBalancerInterface getDiskBalancer() throws java.io.IOException;
    java.lang.String getVersion();
    boolean parseArguments(java.lang.String[] arg0, ConfigurationInterface arg1);
    boolean shouldRun();
    void checkSuperuserPrivilege() throws java.io.IOException, org.apache.hadoop.security.AccessControlException;
    DatanodeLifelineProtocolClientSideTranslatorPBInterface connectToLifelineNN(java.net.InetSocketAddress arg0) throws java.io.IOException;
    void transferBlock(ExtendedBlockInterface arg0, org.apache.hadoop.hdfs.protocol.DatanodeInfo[] arg1, org.apache.hadoop.fs.StorageType[] arg2, java.lang.String[] arg3) throws java.io.IOException;
    void notifyNamenodeDeletedBlock(ExtendedBlockInterface arg0, java.lang.String arg1);
    java.lang.String reconfDfsUsageParameters(java.lang.String arg0, java.lang.String arg1) throws org.apache.hadoop.conf.ReconfigurationException;
    FileIoProviderInterface getFileIoProvider();
    void initDiskBalancer(org.apache.hadoop.hdfs.server.datanode.fsdataset.FsDatasetSpi arg0, ConfigurationInterface arg1);
    void startMetricsLogger();
    void shutdownReconfigurationTask();
    long getReplicaVisibleLength(ExtendedBlockInterface arg0) throws java.io.IOException;
    void refreshNamenodes(ConfigurationInterface arg0) throws java.io.IOException;
    SaslDataTransferServerInterface getSaslServer();
    ShortCircuitRegistryInterface getShortCircuitRegistry();
    void initDataXceiver() throws java.io.IOException;
    void main(java.lang.String[] arg0);
    IOStreamPairInterface connectToDN(DatanodeInfoInterface arg0, int arg1, ExtendedBlockInterface arg2, TokenInterface<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier> arg3) throws java.io.IOException;
    BlockLocalPathInfoInterface getBlockLocalPathInfo(ExtendedBlockInterface arg0, TokenInterface<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier> arg1) throws java.io.IOException;
    boolean areCacheReportsDisabledForTests();
    void transferReplicaForPipelineRecovery(ExtendedBlockInterface arg0, DatanodeInfoInterface[] arg1, org.apache.hadoop.fs.StorageType[] arg2, java.lang.String[] arg3, java.lang.String arg4) throws java.io.IOException;
    java.lang.String getNamenodeAddresses();
    java.lang.String reconfSlowPeerParameters(java.lang.String arg0, java.lang.String arg1) throws org.apache.hadoop.conf.ReconfigurationException;
    int getBpOsCount();
    DataNodeMetricsInterface getMetrics();
    java.io.FileInputStream[] requestShortCircuitFdsForRead(ExtendedBlockInterface arg0, TokenInterface<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier> arg1, int arg2) throws org.apache.hadoop.hdfs.server.datanode.DataNode.ShortCircuitFdsUnsupportedException, org.apache.hadoop.hdfs.server.datanode.DataNode.ShortCircuitFdsVersionException, java.io.IOException;
    TokenInterface<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier> getBlockAccessToken(ExtendedBlockInterface arg0, java.util.EnumSet<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier.AccessMode> arg1, org.apache.hadoop.fs.StorageType[] arg2, java.lang.String[] arg3) throws java.io.IOException;
    org.apache.hadoop.hdfs.server.protocol.InterDatanodeProtocol createInterDataNodeProtocolProxy(DatanodeIDInterface arg0, ConfigurationInterface arg1, int arg2, boolean arg3) throws java.io.IOException;
    boolean isRestarting();
    void reportBadBlocks(ExtendedBlockInterface arg0, org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi arg1) throws java.io.IOException;
    ErasureCodingWorkerInterface getErasureCodingWorker();
    DNConfInterface getDnConf();
    DataNodeInterface createDataNode(java.lang.String[] arg0, ConfigurationInterface arg1, SecureResourcesInterface arg2) throws java.io.IOException;
    void deleteBlockPool(java.lang.String arg0, boolean arg1) throws java.io.IOException;
    DataNodePeerMetricsInterface getPeerMetrics();
    java.lang.String getDisplayName();
    boolean isDatanodeUp();
    void shutdown();
    DataXceiverServerInterface getXferServer();
    void checkKerberosAuthMethod(java.lang.String arg0) throws java.io.IOException;
    void closeBlock(ExtendedBlockInterface arg0, java.lang.String arg1, java.lang.String arg2, boolean arg3);
    BlockPoolTokenSecretManagerInterface getBlockPoolTokenSecretManager();
    java.lang.String reconfigurePropertyImpl(java.lang.String arg0, java.lang.String arg1) throws org.apache.hadoop.conf.ReconfigurationException;
    void stopMetricsLogger();
    long getDNStartedTimeInMillis();
    java.util.concurrent.ScheduledThreadPoolExecutor getMetricsLoggerTimer();
    java.lang.String reconfBlockReportParameters(java.lang.String arg0, java.lang.String arg1) throws org.apache.hadoop.conf.ReconfigurationException;
    boolean isConnectedToNN(java.net.InetSocketAddress arg0);
    void cancelDiskBalancePlan(java.lang.String arg0) throws java.io.IOException;
    void reconfigureProperty(java.lang.String arg0, java.lang.String arg1) throws org.apache.hadoop.conf.ReconfigurationException;
    void initIpcServer() throws java.io.IOException;
    void checkDiskErrorAsync(org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi arg0);
    void initBlockPool(BPOfferServiceInterface arg0) throws java.io.IOException;
    void triggerBlockReport(BlockReportOptionsInterface arg0) throws java.io.IOException;
    DatanodeRegistrationInterface getDNRegistrationForBP(java.lang.String arg0) throws java.io.IOException;
    void decrementXmitsInProgress(int arg0);
    java.lang.String getHttpPort();
    ReplicaRecoveryInfoInterface initReplicaRecovery(RecoveringBlockInterface arg0) throws java.io.IOException;
    BPOfferServiceInterface getBPOSForBlock(ExtendedBlockInterface arg0) throws java.io.IOException;
    ConfigurationInterface getConf();
    DataNodeInterface createDataNode(java.lang.String[] arg0, ConfigurationInterface arg1) throws java.io.IOException;
    void initOOBTimeout();
    int getActiveTransferThreadCount();
    long getBalancerBandwidth();
    void setCacheReportsDisabledForTest(boolean arg0);
    DatanodeLocalInfoInterface getDatanodeInfo();
    void handleDiskError(java.lang.String arg0, int arg1);
    void evictWriters() throws java.io.IOException;
    java.util.List<org.apache.hadoop.hdfs.server.datanode.StorageLocation> getStorageLocations(ConfigurationInterface arg0);
    boolean isDatanodeFullyStarted();
    DataTransferThrottlerInterface getEcReconstuctReadThrottler();
    int getXceiverCount();
    void refreshVolumes(java.lang.String arg0) throws java.io.IOException;
    java.net.InetSocketAddress createSocketAddr(java.lang.String arg0);
    void runDatanodeDaemon() throws java.io.IOException;
    void setConf(ConfigurationInterface arg0);
    void join();
    void shutdownDirectoryScanner();
    int getIpcPort();
    void checkReadAccess(ExtendedBlockInterface arg0) throws java.io.IOException;
    void checkBlockToken(ExtendedBlockInterface arg0, TokenInterface<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier> arg1, org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier.AccessMode arg2) throws java.io.IOException;
    java.lang.String getRpcPort();
    boolean isWrite(org.apache.hadoop.hdfs.protocol.datatransfer.BlockConstructionStage arg0);
    BPOfferServiceInterface getBPOfferService(java.lang.String arg0);
    DataNodeDiskMetricsInterface getDiskMetrics();
    void initDirectoryScanner(ConfigurationInterface arg0);
    void startDataNode(java.util.List<org.apache.hadoop.hdfs.server.datanode.StorageLocation> arg0, SecureResourcesInterface arg1) throws java.io.IOException;
    void checkDiskError() throws java.io.IOException;
    DatanodeRegistrationInterface createBPRegistration(NamespaceInfoInterface arg0);
    java.util.Collection<org.apache.hadoop.conf.ReconfigurationUtil.PropertyChange> getChangedProperties(ConfigurationInterface arg0, ConfigurationInterface arg1);
    TracerInterface getTracer();
    void finalizeUpgradeForPool(java.lang.String arg0) throws java.io.IOException;
    int getXmitsInProgress();
    int getInfoPort();
    void registerMXBean();
    long getLastDiskErrorCheck();
    void reportRemoteBadBlock(DatanodeInfoInterface arg0, ExtendedBlockInterface arg1) throws java.io.IOException;
    void reportBadBlocks(ExtendedBlockInterface arg0) throws java.io.IOException;
    java.lang.String getRevision();
    org.apache.hadoop.hdfs.server.datanode.fsdataset.FsDatasetSpi<?> getFSDataset();
    DatanodeProtocolClientSideTranslatorPBInterface connectToNN(java.net.InetSocketAddress arg0) throws java.io.IOException;
    void startReconfigurationTask() throws java.io.IOException;
    void bpRegistrationSucceeded(DatanodeRegistrationInterface arg0, java.lang.String arg1) throws java.io.IOException;
    java.lang.String getDiskBalancerStatus();
    void setIBRDisabledForTest(boolean arg0);
    java.lang.String getHostName(ConfigurationInterface arg0) throws java.net.UnknownHostException;
    DirectoryScannerInterface getDirectoryScanner();
    void startPlugins(ConfigurationInterface arg0);
    org.apache.hadoop.hdfs.server.common.HdfsServerConstants.StartupOption getStartupOption(ConfigurationInterface arg0);
    void reportCorruptedBlocks(CorruptedBlocksInterface arg0) throws java.io.IOException;
    void registerBlockPoolWithSecretManager(DatanodeRegistrationInterface arg0, java.lang.String arg1) throws java.io.IOException;
    ReconfigurationTaskStatusInterface getReconfigurationStatus() throws java.io.IOException;
    java.net.InetSocketAddress getXferAddress();
    boolean isPropertyReconfigurable(java.lang.String arg0);
    java.lang.String getClusterId();
    void setReconfigurationUtil(ReconfigurationUtilInterface arg0);
    boolean testRMIPrint(java.lang.String arg0);
    int getXferPort();
    void setStartupOption(ConfigurationInterface arg0, org.apache.hadoop.hdfs.server.common.HdfsServerConstants.StartupOption arg1);
    void secureMain(java.lang.String[] arg0, SecureResourcesInterface arg1);
    void checkBlockLocalPathAccess() throws java.io.IOException;
}