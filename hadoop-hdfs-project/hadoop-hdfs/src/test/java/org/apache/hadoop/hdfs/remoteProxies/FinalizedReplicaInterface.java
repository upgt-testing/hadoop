package org.apache.hadoop.hdfs.remoteProxies;

public interface FinalizedReplicaInterface {
    int hashCode();
    void set(long arg0, long arg1, long arg2);
    byte[] getLastPartialChunkChecksum();
    boolean renameFile(java.io.File arg0, java.io.File arg1) throws java.io.IOException;
    java.io.OutputStream getDataOutputStream(boolean arg0) throws java.io.IOException;
    void setBlockId(long arg0);
    long getVisibleLength();
    java.lang.String toString(BlockInterface arg0);
    void setPinning(LocalFileSystemInterface arg0, PathInterface arg1) throws java.io.IOException;
    void readHelper(java.io.DataInput arg0) throws java.io.IOException;
    java.lang.String toString();
    boolean isMetaFilename(java.lang.String arg0);
    boolean renameMeta(java.net.URI arg0) throws java.io.IOException;
    boolean matchingIdAndGenStamp(BlockInterface arg0, BlockInterface arg1);
    void readFields(java.io.DataInput arg0) throws java.io.IOException;
    void setNumBytes(long arg0);
    void fsyncDirectory() throws java.io.IOException;
    long getOriginalBytesReserved();
    void updateWithReplica(StorageLocationInterface arg0);
    long getBlockId(java.lang.String arg0);
    long getRecoveryID();
    java.net.URI getMetadataURI();
    java.io.File getMetaFile();
    void breakHardlinks(java.io.File arg0, BlockInterface arg1) throws java.io.IOException;
    long getGenerationStamp(java.lang.String arg0);
    boolean metadataExists();
    long filename2id(java.lang.String arg0);
    java.io.InputStream getDataInputStream(long arg0) throws java.io.IOException;
    long getBlockId();
    void setLastPartialChunkChecksum(byte[] arg0);
    boolean deleteMetadata();
    boolean blockDataExists();
    long getBlockDataLength();
    long getGenerationStamp();
    boolean isOnTransientStorage();
    long getBytesOnDisk();
    void setVolume(org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi arg0);
    void setNext(org.apache.hadoop.util.LightWeightGSet.LinkedElement arg0);
    void truncateBlock(long arg0) throws java.io.IOException;
    java.io.File metaToBlockFile(java.io.File arg0);
    void copyMetadata(java.net.URI arg0) throws java.io.IOException;
    int compareTo(BlockInterface arg0);
    void appendStringTo(java.lang.StringBuilder arg0);
    java.lang.String getBlockName();
    void setPinning(LocalFileSystemInterface arg0) throws java.io.IOException;
    boolean deleteBlockData();
    boolean equals(java.lang.Object arg0);
    void copyBlockdata(java.net.URI arg0) throws java.io.IOException;
    long getNumBytes();
    java.io.OutputStream getMetadataOutputStream(boolean arg0) throws java.io.IOException;
    void writeHelper(java.io.DataOutput arg0) throws java.io.IOException;
    org.apache.hadoop.hdfs.server.common.HdfsServerConstants.ReplicaState getState();
    java.lang.String getStorageUuid();
    ReplicaInfoInterface getOriginalReplica();
    java.io.FileInputStream getDataInputStream(java.io.File arg0, long arg1) throws java.io.IOException;
    org.apache.hadoop.util.LightWeightGSet.LinkedElement getNext();
    long getMetadataLength();
    void setDirInternal(java.io.File arg0);
    void write(java.io.DataOutput arg0) throws java.io.IOException;
    FileIoProviderInterface getFileIoProvider();
    void bumpReplicaGS(long arg0) throws java.io.IOException;
    void loadLastPartialChunkChecksum() throws java.io.IOException;
    org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi getVolume();
    void setRecoveryID(long arg0);
    void setGenerationStamp(long arg0);
    java.io.File getDir();
    ReplicaDirInfoInterface parseBaseDir(java.io.File arg0, long arg1);
    void readId(java.io.DataInput arg0) throws java.io.IOException;
    boolean renameData(java.net.URI arg0) throws java.io.IOException;
    boolean getPinning(LocalFileSystemInterface arg0) throws java.io.IOException;
    int compareWith(ScanInfoInterface arg0);
    LengthInputStreamInterface getMetadataInputStream(long arg0) throws java.io.IOException;
    long getBytesReserved();
    void writeId(java.io.DataOutput arg0) throws java.io.IOException;
    ReplicaRecoveryInfoInterface createInfo();
    java.net.URI getBlockURI();
    boolean getPinning(LocalFileSystemInterface arg0, PathInterface arg1) throws java.io.IOException;
    void truncateBlock(org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi arg0, java.io.File arg1, java.io.File arg2, long arg3, long arg4, FileIoProviderInterface arg5) throws java.io.IOException;
    boolean breakHardLinksIfNeeded() throws java.io.IOException;
    java.io.File getBlockFile();
    boolean isBlockFilename(java.io.File arg0);
}