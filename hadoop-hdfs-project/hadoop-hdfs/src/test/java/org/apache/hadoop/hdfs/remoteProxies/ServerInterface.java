package org.apache.hadoop.hdfs.remoteProxies;

public interface ServerInterface {
//    org.apache.hadoop.ipc.RPC.RpcInvoker getRpcInvoker(org.apache.hadoop.ipc.RPC.RpcKind arg0);
    java.lang.Class<? extends org.apache.hadoop.io.Writable> getRpcRequestWrapper(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos.RpcKindProto arg0);
    java.lang.Class<?> getProtocolClass(java.lang.String arg0, ConfigurationInterface arg1) throws java.lang.ClassNotFoundException;
    boolean isLogSlowRPC();
    void wrapWithSasl(RpcCallInterface arg0) throws java.io.IOException;
    void setupResponseOldVersionFatal(java.io.ByteArrayOutputStream arg0, RpcCallInterface arg1, org.apache.hadoop.io.Writable arg2, java.lang.String arg3, java.lang.String arg4) throws java.io.IOException;
    ConnectionInterface[] getConnections();
    UserGroupInformationInterface getRemoteUser();
    java.lang.String getAuxiliaryPortEstablishedQOP();
    void logException(org.slf4j.Logger arg0, java.lang.Throwable arg1, CallInterface arg2);
    void shutdownMetricsUpdaterExecutor();
    boolean getClientBackoffEnable(java.lang.String arg0, ConfigurationInterface arg1);
    byte[] setupResponseForWritable(RpcResponseHeaderProtoInterface arg0, org.apache.hadoop.io.Writable arg1) throws java.io.IOException;
    void setAlignmentContext(org.apache.hadoop.ipc.AlignmentContext arg0);
    int getPriorityLevel();
    void bind(java.net.ServerSocket arg0, java.net.InetSocketAddress arg1, int arg2) throws java.io.IOException;
    void closeConnection(ConnectionInterface arg0);
    int getRemotePort();
    java.lang.String getServerName();
    int getPriorityLevel(org.apache.hadoop.ipc.Schedulable arg0);
    boolean isRpcInvocation();
    RpcDetailedMetricsInterface getRpcDetailedMetrics();
    java.lang.String getRemoteAddress();
    void join() throws java.lang.InterruptedException;
    int getCallQueueLen();
    java.util.Set<java.net.InetSocketAddress> getAuxiliaryListenerAddresses();
    ServerInterface get();
    java.util.List<org.apache.hadoop.security.SaslRpcServer.AuthMethod> getAuthMethods(SecretManagerInterface<?> arg0, ConfigurationInterface arg1);
    void setPurgeIntervalNanos(int arg0);
    java.lang.Class<? extends org.apache.hadoop.ipc.RpcScheduler> getSchedulerClass(java.lang.String arg0, ConfigurationInterface arg1);
    long getTotalRequestsPerSecond();
    void logSlowRpcCalls(java.lang.String arg0, CallInterface arg1, ProcessingDetailsInterface arg2);
    void stop();
    java.net.InetAddress getRemoteIp();
    long getNumDroppedConnections();
    void refreshServiceAclWithLoadedConfiguration(ConfigurationInterface arg0, PolicyProviderInterface arg1);
    ServiceAuthorizationManagerInterface getServiceAuthorizationManager();
    java.lang.Iterable<? extends java.lang.Thread> getHandlers();
    void setupResponse(RpcCallInterface arg0, org.apache.hadoop.ipc.protobuf.RpcHeaderProtos.RpcResponseHeaderProto.RpcStatusProto arg1, org.apache.hadoop.ipc.protobuf.RpcHeaderProtos.RpcResponseHeaderProto.RpcErrorCodeProto arg2, org.apache.hadoop.io.Writable arg3, java.lang.String arg4, java.lang.String arg5) throws java.io.IOException;
    boolean isClientBackoffEnabled();
    int channelIO(java.nio.channels.ReadableByteChannel arg0, java.nio.channels.WritableByteChannel arg1, java.nio.ByteBuffer arg2) throws java.io.IOException;
    int channelRead(java.nio.channels.ReadableByteChannel arg0, java.nio.ByteBuffer arg1) throws java.io.IOException;
    java.lang.String getProtocol();
    void setPriorityLevel(UserGroupInformationInterface arg0, int arg1);
    void queueCall(CallInterface arg0) throws java.io.IOException, java.lang.InterruptedException;
    void refreshCallQueue(ConfigurationInterface arg0);
    void setupResponse(RpcCallInterface arg0, RpcResponseHeaderProtoInterface arg1, org.apache.hadoop.io.Writable arg2) throws java.io.IOException;
    int getMaxIdleTime();
    java.net.InetSocketAddress getListenerAddress();
    void addAuxiliaryListener(int arg0) throws java.io.IOException;
    int getDelimitedLength(org.apache.hadoop.thirdparty.protobuf.Message arg0);
    RpcMetricsInterface getRpcMetrics();
    void authorize(UserGroupInformationInterface arg0, java.lang.String arg1, java.net.InetAddress arg2) throws org.apache.hadoop.security.authorize.AuthorizationException;
    RpcSaslProtoInterface buildNegotiateResponse(java.util.List<org.apache.hadoop.security.SaslRpcServer.AuthMethod> arg0) throws java.io.IOException;
    void addSuppressedLoggingExceptions(java.lang.Class<?>... arg0);
    void setClientBackoffEnabled(boolean arg0);
//    org.apache.hadoop.ipc.RPC.RpcInvoker getServerRpcInvoker(org.apache.hadoop.ipc.RPC.RpcKind arg0);
    void internalQueueCall(CallInterface arg0) throws java.io.IOException, java.lang.InterruptedException;
    void start();
    int getMaxQueueSize();
    java.lang.Class<? extends java.util.concurrent.BlockingQueue<org.apache.hadoop.ipc.Server.Call>> getQueueClass(java.lang.String arg0, ConfigurationInterface arg1);
    void updateMetrics(CallInterface arg0, long arg1, boolean arg2);
    int getNumReaders();
    void internalQueueCall(CallInterface arg0, boolean arg1) throws java.io.IOException, java.lang.InterruptedException;
    void refreshServiceAcl(ConfigurationInterface arg0, PolicyProviderInterface arg1);
    int getNumOpenConnections();
    void setTracer(TracerInterface arg0);
    org.apache.hadoop.io.Writable call(org.apache.hadoop.io.Writable arg0, long arg1) throws java.lang.Exception;
    java.lang.String getNumOpenConnectionsPerUser();
    int getCallId();
    void addTerseExceptions(java.lang.Class<?>... arg0);
    byte[] getClientId();
    java.lang.ThreadLocal<org.apache.hadoop.ipc.Server.Call> getCurCall();
    int getCallRetryCount();
    java.lang.String getQueueClassPrefix();
    int getPort();
    long getTotalRequests();
    void bind(java.net.ServerSocket arg0, java.net.InetSocketAddress arg1, int arg2, ConfigurationInterface arg3, java.lang.String arg4) throws java.io.IOException;
    org.apache.hadoop.io.Writable call(org.apache.hadoop.ipc.RPC.RpcKind arg0, java.lang.String arg1, org.apache.hadoop.io.Writable arg2, long arg3) throws java.lang.Exception;
    ConfigurationInterface getConf();
    int getPriorityLevel(UserGroupInformationInterface arg0);
    void setSocketSendBufSize(int arg0);
    long getPurgeIntervalNanos();
    void updateDeferredMetrics(java.lang.String arg0, long arg1);
    void setLogSlowRPC(boolean arg0);
    byte[] setupResponseForProtobuf(RpcResponseHeaderProtoInterface arg0, org.apache.hadoop.io.Writable arg1) throws java.io.IOException;
    int channelWrite(java.nio.channels.WritableByteChannel arg0, java.nio.ByteBuffer arg1) throws java.io.IOException;
//    void registerProtocolEngine(org.apache.hadoop.ipc.RPC.RpcKind arg0, java.lang.Class<? extends org.apache.hadoop.io.Writable> arg1, org.apache.hadoop.ipc.RPC.RpcInvoker arg2);
}