package org.apache.hadoop.hdfs.remoteProxies;

public interface UserGroupInformationInterface {
    java.lang.String toString();
    UserGroupInformationInterface createLoginUser(SubjectInterface arg0) throws java.io.IOException;
    UserGroupInformationInterface getRealUserOrSelf(UserGroupInformationInterface arg0);
    UserGroupInformationInterface getRealUser();
    void logoutUserFromKeytab() throws java.io.IOException;
    java.util.Set<org.apache.hadoop.security.token.TokenIdentifier> getTokenIdentifiers();
    UserGroupInformationInterface createRemoteUser(java.lang.String arg0);
    boolean hasKerberosCredentials();
    void executeAutoRenewalTask(java.lang.String arg0, AutoRenewalForUserCredsRunnableInterface arg1);
    UserGroupInformationInterface createProxyUserForTesting(java.lang.String arg0, UserGroupInformationInterface arg1, java.lang.String[] arg2);
    void unprotectedRelogin(HadoopLoginContextInterface arg0, boolean arg1) throws java.io.IOException;
    void reloginFromKeytab(boolean arg0, boolean arg1) throws java.io.IOException;
    void logUserInfo(org.slf4j.Logger arg0, java.lang.String arg1, UserGroupInformationInterface arg2) throws java.io.IOException;
    void setShouldRenewImmediatelyForTests(boolean arg0);
    void loginUserFromSubject(SubjectInterface arg0) throws java.io.IOException;
    <T> T doAs(java.security.PrivilegedExceptionAction<T> arg0) throws java.io.IOException, java.lang.InterruptedException;
    boolean isHadoopLogin();
    void addCredentials(CredentialsInterface arg0);
    java.lang.String trimLoginMethod(java.lang.String arg0);
    void reloginFromKeytab(boolean arg0) throws java.io.IOException;
    int hashCode();
    UserGroupInformationInterface getBestUGI(java.lang.String arg0, java.lang.String arg1) throws java.io.IOException;
    void setAuthenticationMethod(org.apache.hadoop.security.UserGroupInformation.AuthenticationMethod arg0);
    boolean shouldRelogin();
    <T> T doAs(java.security.PrivilegedAction<T> arg0);
    UserGroupInformationInterface doSubjectLogin(SubjectInterface arg0, LoginParamsInterface arg1) throws java.io.IOException;
    UserGroupInformationInterface getUGIFromSubject(SubjectInterface arg0) throws java.io.IOException;
    boolean equals(java.lang.Object arg0);
    org.apache.hadoop.security.UserGroupInformation.AuthenticationMethod getRealAuthenticationMethod(UserGroupInformationInterface arg0);
    void relogin(HadoopLoginContextInterface arg0, boolean arg1) throws java.io.IOException;
//    boolean addToken(TextInterface arg0, TokenInterface<? extends TokenInterfaceIdentifier> arg1);
    SubjectInterface getSubject();
    org.apache.hadoop.security.UserGroupInformation.AuthenticationMethod getRealAuthenticationMethod();
    void setLogin(LoginContextInterface arg0);
    UserGroupInformationInterface getCurrentUser() throws java.io.IOException;
    void setLastLogin(long arg0);
    java.lang.String getUserName();
    org.apache.hadoop.security.UserGroupInformation.AuthenticationMethod getAuthenticationMethod();
    java.util.Optional<java.util.concurrent.ExecutorService> getKerberosLoginRenewalExecutor();
    void setAuthenticationMethod(org.apache.hadoop.security.SaslRpcServer.AuthMethod arg0);
    boolean isKerberosKeyTabLoginRenewalEnabled();
    boolean isLoginKeytabBased() throws java.io.IOException;
    void reloginFromKeytab() throws java.io.IOException;
    java.lang.Class<? extends java.security.Principal> getOsPrincipalClass();
    boolean isFromKeytab();
    void setConfiguration(ConfigurationInterface arg0);
    void logAllUserInfo(UserGroupInformationInterface arg0) throws java.io.IOException;
    java.lang.String getShortUserName();
    boolean isSecurityEnabled();
    void initialize(ConfigurationInterface arg0, boolean arg1);
    java.lang.String getPrimaryGroupName() throws java.io.IOException;
    void spawnAutoRenewalThreadForUserCreds(boolean arg0);
    void reattachMetrics();
    UserGroupInformationInterface getLoginUser() throws java.io.IOException;
    boolean hasSufficientTimeElapsed(long arg0);
    UserGroupInformationInterface loginUserFromKeytabAndReturnUGI(java.lang.String arg0, java.lang.String arg1) throws java.io.IOException;
//    boolean addToken(TokenInterface<? extends TokenInterfaceIdentifier> arg0);
    UserGroupInformationInterface createProxyUser(java.lang.String arg0, UserGroupInformationInterface arg1);
    void setLoginUser(UserGroupInformationInterface arg0);
    void print() throws java.io.IOException;
    void fixKerberosTicketOrder();
    long getNextTgtRenewalTime(long arg0, long arg1, org.apache.hadoop.io.retry.RetryPolicy arg2) throws java.lang.Exception;
    UserGroupInformationInterface createUserForTesting(java.lang.String arg0, java.lang.String[] arg1);
    void main(java.lang.String[] arg0) throws java.lang.Exception;
    java.lang.String getKeytab();
    void logAllUserInfo(org.slf4j.Logger arg0, UserGroupInformationInterface arg1) throws java.io.IOException;
    boolean isAuthenticationMethodEnabled(org.apache.hadoop.security.UserGroupInformation.AuthenticationMethod arg0);
    java.util.Collection<org.apache.hadoop.security.token.Token<? extends org.apache.hadoop.security.token.TokenIdentifier>> getTokens();
    boolean addTokenIdentifier(TokenIdentifierInterface arg0);
    java.lang.String getOSLoginModuleName();
    KerberosTicketInterface getTGT();
    CredentialsInterface getCredentialsInternal();
    void checkTGTAndReloginFromKeytab() throws java.io.IOException;
    long getRefreshTime(KerberosTicketInterface arg0);
    java.util.List<java.lang.String> getGroups();
    UserGroupInformationInterface createRemoteUser(java.lang.String arg0, org.apache.hadoop.security.SaslRpcServer.AuthMethod arg1);
    java.lang.String[] getGroupNames();
    CredentialsInterface getCredentials();
    void loginUserFromKeytab(java.lang.String arg0, java.lang.String arg1) throws java.io.IOException;
    HadoopLoginContextInterface getLogin();
    void reloginFromTicketCache() throws java.io.IOException;
    UserGroupInformationInterface getUGIFromTicketCache(java.lang.String arg0, java.lang.String arg1) throws java.io.IOException;
    void reset();
    HadoopLoginContextInterface newLoginContext(java.lang.String arg0, SubjectInterface arg1, HadoopConfigurationInterface arg2) throws javax.security.auth.login.LoginException;
    boolean isFromTicket();
    void ensureInitialized();
    boolean isLoginTicketBased() throws java.io.IOException;
    void spawnAutoRenewalThreadForKeytab();
    boolean isInitialized();
    void forceReloginFromKeytab() throws java.io.IOException;
}