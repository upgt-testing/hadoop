package org.apache.hadoop.hdfs.remoteProxies;

public interface NameNodeInterface {
    boolean isInSafeMode();
    java.lang.String getSlowDisksReport();
    void transitionToActive() throws org.apache.hadoop.ha.ServiceFailedException, org.apache.hadoop.security.AccessControlException;
    java.net.InetSocketAddress getServiceRpcAddress();
    java.net.InetSocketAddress getServiceRpcServerAddress(ConfigurationInterface arg0);
    ConfigurationInterface getNewConf();
    java.lang.String reconfHeartbeatInterval(DatanodeManagerInterface arg0, java.lang.String arg1, java.lang.String arg2) throws org.apache.hadoop.conf.ReconfigurationException;
    boolean isStandbyState();
    java.net.InetSocketAddress getNameNodeAddress();
    java.lang.String getLifelineRpcServerBindHost(ConfigurationInterface arg0);
    boolean isStarted();
    org.apache.hadoop.hdfs.server.common.HdfsServerConstants.NamenodeRole getRole();
    void startTrashEmptier(ConfigurationInterface arg0) throws java.io.IOException;
    java.lang.String reconfigureParallelLoad(java.lang.String arg0);
    java.lang.String getSlowPeersReport();
    void setStartupOption(ConfigurationInterface arg0, org.apache.hadoop.hdfs.server.common.HdfsServerConstants.StartupOption arg1);
    void stopHttpServer();
    ReconfigurationTaskStatusInterface getReconfigurationTaskStatus();
    FSImageInterface getFSImage();
    boolean isActiveState();
    void joinHttpServer();
    java.lang.String reconfigureSlowNodesParameters(DatanodeManagerInterface arg0, java.lang.String arg1, java.lang.String arg2) throws org.apache.hadoop.conf.ReconfigurationException;
    void setRpcServerAddress(ConfigurationInterface arg0, java.net.InetSocketAddress arg1);
    java.lang.String getState();
    void format(ConfigurationInterface arg0) throws java.io.IOException;
    java.lang.String getTokenServiceName();
    java.lang.String getNameNodeAddressHostPortString();
    void shutdownReconfigurationTask();
    void startReconfigurationTask() throws java.io.IOException;
    ConfigurationInterface getConfigurationWithoutSharedEdits(ConfigurationInterface arg0) throws java.io.IOException;
    void setRpcServiceServerAddress(ConfigurationInterface arg0, java.net.InetSocketAddress arg1);
    void checkHaStateChange(StateChangeRequestInfoInterface arg0) throws org.apache.hadoop.security.AccessControlException;
    HAStateInterface createHAState(org.apache.hadoop.hdfs.server.common.HdfsServerConstants.StartupOption arg0);
    void setServiceAddress(ConfigurationInterface arg0, java.lang.String arg1);
    java.net.InetSocketAddress getHttpServerAddress(ConfigurationInterface arg0);
    boolean initializeSharedEdits(ConfigurationInterface arg0, boolean arg1, boolean arg2) throws java.io.IOException;
    java.net.InetSocketAddress getServiceAddress(ConfigurationInterface arg0, boolean arg1);
    org.apache.hadoop.hdfs.server.protocol.NamenodeProtocols getRpcServer();
    long getProtocolVersion(java.lang.String arg0, long arg1) throws java.io.IOException;
    HAServiceStatusInterface getServiceStatus() throws org.apache.hadoop.ha.ServiceFailedException, org.apache.hadoop.security.AccessControlException;
    boolean isObserverState();
    long getBytesWithFutureGenerationStamps();
    org.apache.hadoop.ha.HAServiceProtocol.HAServiceState getServiceState();
    long getLastHATransitionTime();
    boolean doRollback(ConfigurationInterface arg0, boolean arg1) throws java.io.IOException;
    HttpServer2Interface getHttpServer();
    org.apache.hadoop.hdfs.server.common.HdfsServerConstants.StartupOption parseArguments(java.lang.String[] arg0);
    void startMetricsLogger(ConfigurationInterface arg0);
    java.lang.String reconfigureIPCBackoffEnabled(java.lang.String arg0);
    void transitionToStandby() throws org.apache.hadoop.ha.ServiceFailedException, org.apache.hadoop.security.AccessControlException;
    void main(java.lang.String[] arg0) throws java.lang.Exception;
    boolean initializeSharedEdits(ConfigurationInterface arg0, boolean arg1) throws java.io.IOException;
    java.lang.String getNNRole();
    void initMetrics(ConfigurationInterface arg0, org.apache.hadoop.hdfs.server.common.HdfsServerConstants.NamenodeRole arg1);
    FSNamesystemInterface getNamesystem();
    void registerNNSMXBean();
    void startHttpServer(ConfigurationInterface arg0) throws java.io.IOException;
    java.lang.String composeNotStartedMessage(org.apache.hadoop.hdfs.server.common.HdfsServerConstants.NamenodeRole arg0);
    java.lang.String reconfigureBlockInvalidateLimit(DatanodeManagerInterface arg0, java.lang.String arg1, java.lang.String arg2) throws org.apache.hadoop.conf.ReconfigurationException;
    boolean testRMIPrint(java.lang.String arg0);
    java.lang.String getServiceRpcServerBindHost(ConfigurationInterface arg0);
    void startCommonServices(ConfigurationInterface arg0) throws java.io.IOException;
    NameNodeRpcServerInterface createRpcServer(ConfigurationInterface arg0) throws java.io.IOException;
    void setConf(ConfigurationInterface arg0);
    void startAliasMapServerIfNecessary(ConfigurationInterface arg0) throws java.io.IOException;
    void initializeGenericKeys(ConfigurationInterface arg0, java.lang.String arg1, java.lang.String arg2);
    void doImmediateShutdown(java.lang.Throwable arg0) throws org.apache.hadoop.util.ExitUtil.ExitException;
    void stopMetricsLogger();
    java.lang.String reconfReplicationParameters(java.lang.String arg0, java.lang.String arg1) throws org.apache.hadoop.conf.ReconfigurationException;
    boolean initializeSharedEdits(ConfigurationInterface arg0) throws java.io.IOException;
    java.net.InetSocketAddress getLifelineRpcServerAddress(ConfigurationInterface arg0);
    boolean isRole(org.apache.hadoop.hdfs.server.common.HdfsServerConstants.NamenodeRole arg0);
    java.net.InetSocketAddress getHttpAddress();
    void stopTrashEmptier();
    org.apache.hadoop.hdfs.server.common.HdfsServerConstants.StartupOption getStartupOption(ConfigurationInterface arg0);
    boolean isPropertyReconfigurable(java.lang.String arg0);
    void reconfBlockPlacementPolicy();
    java.lang.String reconfigurePropertyImpl(java.lang.String arg0, java.lang.String arg1) throws org.apache.hadoop.conf.ReconfigurationException;
    int adjustNewVal(int arg0, java.lang.String arg1);
    boolean printMetadataVersion(ConfigurationInterface arg0) throws java.io.IOException;
    void stop();
    void doRecovery(org.apache.hadoop.hdfs.server.common.HdfsServerConstants.StartupOption arg0, ConfigurationInterface arg1) throws java.io.IOException;
    NameNodeMetricsInterface getNameNodeMetrics();
    void stopCommonServices();
    void transitionToObserver() throws org.apache.hadoop.ha.ServiceFailedException, org.apache.hadoop.security.AccessControlException;
    void setReconfigurationUtil(ReconfigurationUtilInterface arg0);
    org.apache.hadoop.hdfs.server.namenode.ha.HAContext createHAContext();
    void queueExternalCall(ExternalCallInterface<?> arg0) throws java.io.IOException, java.lang.InterruptedException;
    java.lang.String reconfHeartbeatRecheckInterval(DatanodeManagerInterface arg0, java.lang.String arg1, java.lang.String arg2) throws org.apache.hadoop.conf.ReconfigurationException;
    void testRMIConf(ConfigurationInterface arg0);
    void setRpcLifelineServerAddress(ConfigurationInterface arg0, java.net.InetSocketAddress arg1);
    void copyEditLogSegmentsToSharedDir(FSNamesystemInterface arg0, java.util.Collection<java.net.URI> arg1, NNStorageInterface arg2, ConfigurationInterface arg3) throws java.io.IOException;
    ConfigurationInterface getConf();
    boolean isSecurityEnabled();
    void checkAllowFormat(ConfigurationInterface arg0) throws java.io.IOException;
    InMemoryLevelDBAliasMapServerInterface getAliasMapServer();
    void stopAtException(java.lang.Exception arg0);
    java.net.InetSocketAddress getRpcServerAddress(ConfigurationInterface arg0);
    java.lang.String getNNAuxiliaryRpcAddress();
    java.lang.String getTrimmedOrNull(ConfigurationInterface arg0, java.lang.String arg1);
    void initReconfigurableBackoffKey();
    void monitorHealth() throws org.apache.hadoop.ha.HealthCheckFailedException, org.apache.hadoop.security.AccessControlException;
    java.lang.String buildBackoffEnableKey(int arg0);
    java.lang.String getHostAndPort();
    java.lang.String reconfigureSPSModeEvent(java.lang.String arg0, java.lang.String arg1) throws org.apache.hadoop.conf.ReconfigurationException;
    NamenodeRegistrationInterface getRegistration();
    void initialize(ConfigurationInterface arg0) throws java.io.IOException;
    boolean format(ConfigurationInterface arg0, boolean arg1, boolean arg2) throws java.io.IOException;
    java.net.InetSocketAddress getHttpAddress(ConfigurationInterface arg0);
    void loadNamesystem(ConfigurationInterface arg0) throws java.io.IOException;
    java.lang.String reconfCallerContextEnabled(java.lang.String arg0);
    NamenodeRegistrationInterface setRegistration();
    UserGroupInformationInterface getRemoteUser() throws java.io.IOException;
    java.util.Set<java.net.InetSocketAddress> getAuxiliaryNameNodeAddresses();
    void loginAsNameNodeUser(ConfigurationInterface arg0) throws java.io.IOException;
    java.lang.String getRpcServerBindHost(ConfigurationInterface arg0);
    java.net.InetSocketAddress getHttpsAddress();
    void printUsage(java.io.PrintStream arg0);
    java.lang.String reconfProtectedDirectories(java.lang.String arg0);
    java.lang.String getNameServiceId(ConfigurationInterface arg0);
    void verifyToken(DelegationTokenIdentifierInterface arg0, byte[] arg1) throws java.io.IOException;
    java.lang.String getClientNamenodeAddress();
    StartupProgressInterface getStartupProgress();
    boolean isStopRequested();
    java.util.Collection<java.lang.String> getReconfigurableProperties();
    void join();
    java.util.Collection<org.apache.hadoop.conf.ReconfigurationUtil.PropertyChange> getChangedProperties(ConfigurationInterface arg0, ConfigurationInterface arg1);
    void reconfigureProperty(java.lang.String arg0, java.lang.String arg1) throws org.apache.hadoop.conf.ReconfigurationException;
    NameNodeInterface createNameNode(java.lang.String[] arg0, ConfigurationInterface arg1) throws java.io.IOException;
    java.net.InetSocketAddress getHttpServerBindAddress(ConfigurationInterface arg0);
}