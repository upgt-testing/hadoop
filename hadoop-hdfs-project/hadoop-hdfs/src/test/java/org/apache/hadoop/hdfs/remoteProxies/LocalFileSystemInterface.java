package org.apache.hadoop.hdfs.remoteProxies;

public interface LocalFileSystemInterface {
    org.apache.hadoop.fs.PathHandle getPathHandle(FileStatusInterface arg0, org.apache.hadoop.fs.Options.HandleOpt... arg1);
    java.util.Map<java.lang.String, byte[]> getXAttrs(PathInterface arg0) throws java.io.IOException;
    void checkAccessPermissions(FileStatusInterface arg0, org.apache.hadoop.fs.permission.FsAction arg1) throws org.apache.hadoop.security.AccessControlException, java.io.IOException;
    void setWriteChecksum(boolean arg0);
    java.util.Collection<org.apache.hadoop.fs.FileStatus> getTrashRoots(boolean arg0);
    void collectDelegationTokens(org.apache.hadoop.security.token.DelegationTokenIssuer arg0, java.lang.String arg1, CredentialsInterface arg2, java.util.List<org.apache.hadoop.security.token.Token<?>> arg3) throws java.io.IOException;
    void completeLocalOutput(PathInterface arg0, PathInterface arg1) throws java.io.IOException;
    void loadFileSystems();
    void setDefaultUri(ConfigurationInterface arg0, java.lang.String arg1);
    boolean isDirectory(PathInterface arg0) throws java.io.IOException;
    FileChecksumInterface getFileChecksum(PathInterface arg0, long arg1) throws java.io.IOException;
    void initialize(java.net.URI arg0, ConfigurationInterface arg1) throws java.io.IOException;
    java.util.Map<java.lang.String, org.apache.hadoop.fs.FileSystem.Statistics> getStatistics();
    org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.Path> listCorruptFileBlocks(PathInterface arg0) throws java.io.IOException;
    java.util.concurrent.CompletableFuture<org.apache.hadoop.fs.FSDataInputStream> openFileWithOptions(org.apache.hadoop.fs.PathHandle arg0, OpenFileParametersInterface arg1) throws java.io.IOException;
    FSDataOutputStreamInterface create(PathInterface arg0, short arg1, org.apache.hadoop.util.Progressable arg2) throws java.io.IOException;
    FSDataOutputStreamInterface create(PathInterface arg0, FsPermissionInterface arg1, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag> arg2, int arg3, short arg4, long arg5, org.apache.hadoop.util.Progressable arg6, ChecksumOptInterface arg7) throws java.io.IOException;
    PathInterface getLinkTarget(PathInterface arg0) throws java.io.IOException;
    void copyToLocalFile(boolean arg0, PathInterface arg1, PathInterface arg2) throws java.io.IOException;
    org.apache.hadoop.security.token.DelegationTokenIssuer[] getAdditionalTokenIssuers() throws java.io.IOException;
    void removeDefaultAcl(PathInterface arg0) throws java.io.IOException;
    TokenInterface<?>[] addDelegationTokens(java.lang.String arg0, CredentialsInterface arg1) throws java.io.IOException;
    void copyFromLocalFile(PathInterface arg0, PathInterface arg1) throws java.io.IOException;
    org.apache.hadoop.fs.MultipartUploaderBuilder createMultipartUploader(PathInterface arg0) throws java.io.IOException;
    FSDataOutputStreamInterface primitiveCreate(PathInterface arg0, FsPermissionInterface arg1, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag> arg2, int arg3, short arg4, long arg5, org.apache.hadoop.util.Progressable arg6, ChecksumOptInterface arg7) throws java.io.IOException;
    boolean reportChecksumFailure(PathInterface arg0, FSDataInputStreamInterface arg1, long arg2, FSDataInputStreamInterface arg3, long arg4);
    boolean primitiveMkdir(PathInterface arg0, FsPermissionInterface arg1) throws java.io.IOException;
    FSDataOutputStreamBuilderInterface appendFile(PathInterface arg0);
    FileStatusInterface[] listStatus(PathInterface[] arg0, org.apache.hadoop.fs.PathFilter arg1) throws java.io.FileNotFoundException, java.io.IOException;
    boolean createNewFile(PathInterface arg0) throws java.io.IOException;
    boolean delete(PathInterface arg0) throws java.io.IOException;
    void setXAttr(PathInterface arg0, java.lang.String arg1, byte[] arg2) throws java.io.IOException;
    short getDefaultReplication();
    long getDefaultBlockSize();
    void copyFromLocalFile(boolean arg0, boolean arg1, PathInterface arg2, PathInterface arg3) throws java.io.IOException;
    java.lang.String fixName(java.lang.String arg0);
    java.lang.Class<? extends org.apache.hadoop.fs.FileSystem> getFileSystemClass(java.lang.String arg0, ConfigurationInterface arg1) throws java.io.IOException;
    void setVerifyChecksum(boolean arg0);
    FileSystemInterface newInstance(java.net.URI arg0, ConfigurationInterface arg1) throws java.io.IOException;
    void setXAttr(PathInterface arg0, java.lang.String arg1, byte[] arg2, java.util.EnumSet<org.apache.hadoop.fs.XAttrSetFlag> arg3) throws java.io.IOException;
    void setAcl(PathInterface arg0, java.util.List<org.apache.hadoop.fs.permission.AclEntry> arg1) throws java.io.IOException;
    int getSumBufferSize(int arg0, int arg1);
    boolean areSymlinksEnabled();
    FSDataOutputStreamInterface append(PathInterface arg0) throws java.io.IOException;
    FSDataInputStreamInterface open(PathInterface arg0) throws java.io.IOException;
    boolean mkdirs(FileSystemInterface arg0, PathInterface arg1, FsPermissionInterface arg2) throws java.io.IOException;
    void copyFromLocalFile(boolean arg0, PathInterface arg1, PathInterface arg2) throws java.io.IOException;
    FSDataOutputStreamInterface append(PathInterface arg0, int arg1) throws java.io.IOException;
    void satisfyStoragePolicy(PathInterface arg0) throws java.io.IOException;
    AclStatusInterface getAclStatus(PathInterface arg0) throws java.io.IOException;
    org.apache.hadoop.fs.FutureDataInputStreamBuilder openFile(org.apache.hadoop.fs.PathHandle arg0) throws java.io.IOException, java.lang.UnsupportedOperationException;
    FSDataOutputStreamInterface create(PathInterface arg0, FsPermissionInterface arg1, boolean arg2, boolean arg3, int arg4, short arg5, long arg6, org.apache.hadoop.util.Progressable arg7) throws java.io.IOException;
    java.net.URI getCanonicalUri();
    java.util.List<java.lang.String> listXAttrs(PathInterface arg0) throws java.io.IOException;
    FSDataOutputStreamInterface create(PathInterface arg0, boolean arg1, int arg2, short arg3, long arg4) throws java.io.IOException;
    long getChecksumLength(long arg0, int arg1);
    void copyToLocalFile(PathInterface arg0, PathInterface arg1) throws java.io.IOException;
    StatisticsInterface getStatistics(java.lang.String arg0, java.lang.Class<? extends org.apache.hadoop.fs.FileSystem> arg1);
    FileSystemInterface get(java.net.URI arg0, ConfigurationInterface arg1) throws java.io.IOException;
    FSDataOutputStreamInterface create(PathInterface arg0, boolean arg1, int arg2, short arg3, long arg4, org.apache.hadoop.util.Progressable arg5) throws java.io.IOException;
    void checkPath(PathInterface arg0);
    FileSystemInterface getRaw();
    ContentSummaryInterface getContentSummary(PathInterface arg0) throws java.io.IOException;
    java.lang.String getScheme();
    FSDataOutputStreamInterface createNonRecursive(PathInterface arg0, FsPermissionInterface arg1, boolean arg2, int arg3, short arg4, long arg5, org.apache.hadoop.util.Progressable arg6) throws java.io.IOException;
    FSDataOutputStreamInterface create(PathInterface arg0) throws java.io.IOException;
    void setOwner(PathInterface arg0, java.lang.String arg1, java.lang.String arg2) throws java.io.IOException;
    int getDefaultPort();
    long getDefaultBlockSize(PathInterface arg0);
    boolean mkdirs(PathInterface arg0, FsPermissionInterface arg1) throws java.io.IOException;
    FsServerDefaultsInterface getServerDefaults(PathInterface arg0) throws java.io.IOException;
    FSDataOutputStreamInterface create(PathInterface arg0, short arg1) throws java.io.IOException;
    java.lang.String getName();
    FsStatusInterface getStatus() throws java.io.IOException;
    FileSystemInterface newInstance(ConfigurationInterface arg0) throws java.io.IOException;
    org.apache.hadoop.fs.GlobalStorageStatistics getGlobalStorageStatistics();
    FileSystemInterface createFileSystem(java.net.URI arg0, ConfigurationInterface arg1) throws java.io.IOException;
    void rename(PathInterface arg0, PathInterface arg1, org.apache.hadoop.fs.Options.Rename... arg2) throws java.io.IOException;
    boolean isFile(PathInterface arg0) throws java.io.IOException;
    PathInterface createSnapshot(PathInterface arg0, java.lang.String arg1) throws java.io.IOException;
    void primitiveMkdir(PathInterface arg0, FsPermissionInterface arg1, boolean arg2) throws java.io.IOException;
    FileStatusInterface getFileLinkStatus(PathInterface arg0) throws java.io.IOException;
    FSDataOutputStreamInterface createNonRecursive(PathInterface arg0, boolean arg1, int arg2, short arg3, long arg4, org.apache.hadoop.util.Progressable arg5) throws java.io.IOException;
    void debugLogFileSystemClose(java.lang.String arg0, java.lang.String arg1);
    LocalFileSystemInterface newInstanceLocal(ConfigurationInterface arg0) throws java.io.IOException;
    FSDataOutputStreamInterface create(PathInterface arg0, FsPermissionInterface arg1, boolean arg2, int arg3, short arg4, long arg5, org.apache.hadoop.util.Progressable arg6) throws java.io.IOException;
    void clearStatistics();
    void removeAclEntries(PathInterface arg0, java.util.List<org.apache.hadoop.fs.permission.AclEntry> arg1) throws java.io.IOException;
    FileStatusInterface[] listStatus(PathInterface[] arg0) throws java.io.FileNotFoundException, java.io.IOException;
    PathInterface getInitialWorkingDirectory();
    void removeXAttr(PathInterface arg0, java.lang.String arg1) throws java.io.IOException;
    void setConf(ConfigurationInterface arg0);
    void setPermission(PathInterface arg0, FsPermissionInterface arg1) throws java.io.IOException;
    void addFileSystemForTesting(java.net.URI arg0, ConfigurationInterface arg1, FileSystemInterface arg2) throws java.io.IOException;
    void createSymlink(PathInterface arg0, PathInterface arg1, boolean arg2) throws java.io.IOException;
    boolean setReplication(PathInterface arg0, short arg1) throws java.io.IOException;
    void close() throws java.io.IOException;
    boolean mkdirs(PathInterface arg0) throws java.io.IOException;
    java.net.URI getDefaultUri(ConfigurationInterface arg0);
    void copyFromLocalFile(boolean arg0, boolean arg1, PathInterface[] arg2, PathInterface arg3) throws java.io.IOException;
    FsServerDefaultsInterface getServerDefaults() throws java.io.IOException;
    void modifyAclEntries(PathInterface arg0, java.util.List<org.apache.hadoop.fs.permission.AclEntry> arg1) throws java.io.IOException;
    void processDeleteOnExit();
    void methodNotSupported();
    void setQuotaByStorageType(PathInterface arg0, org.apache.hadoop.fs.StorageType arg1, long arg2) throws java.io.IOException;
    void closeAll() throws java.io.IOException;
    org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.LocatedFileStatus> listLocatedStatus(PathInterface arg0, org.apache.hadoop.fs.PathFilter arg1) throws java.io.FileNotFoundException, java.io.IOException;
    void setWorkingDirectory(PathInterface arg0);
    int cacheSize();
    QuotaUsageInterface getQuotaUsage(PathInterface arg0) throws java.io.IOException;
    FSDataOutputStreamInterface append(PathInterface arg0, int arg1, org.apache.hadoop.util.Progressable arg2) throws java.io.IOException;
    java.util.Collection<? extends org.apache.hadoop.fs.BlockStoragePolicySpi> getAllStoragePolicies() throws java.io.IOException;
    int getBytesPerSum();
    java.net.URI canonicalizeUri(java.net.URI arg0);
    java.net.URI getUri();
    FileSystemInterface get(ConfigurationInterface arg0) throws java.io.IOException;
    boolean exists(PathInterface arg0) throws java.io.IOException;
    void renameSnapshot(PathInterface arg0, java.lang.String arg1, java.lang.String arg2) throws java.io.IOException;
    void concat(PathInterface arg0, PathInterface[] arg1) throws java.io.IOException;
    BlockLocationInterface[] getFileBlockLocations(FileStatusInterface arg0, long arg1, long arg2) throws java.io.IOException;
    PathInterface getHomeDirectory();
    PathInterface startLocalOutput(PathInterface arg0, PathInterface arg1) throws java.io.IOException;
    PathInterface fixRelativePart(PathInterface arg0);
    FSDataInputStreamInterface open(PathInterface arg0, int arg1) throws java.io.IOException;
    void unsetStoragePolicy(PathInterface arg0) throws java.io.IOException;
    FileSystemInterface newInstance(java.net.URI arg0, ConfigurationInterface arg1, java.lang.String arg2) throws java.io.IOException, java.lang.InterruptedException;
    PathInterface getChecksumFile(PathInterface arg0);
    void setDefaultUri(ConfigurationInterface arg0, java.net.URI arg1);
    java.io.File pathToFile(PathInterface arg0);
    FileSystemInterface[] getChildFileSystems();
    FileSystemInterface getNamed(java.lang.String arg0, ConfigurationInterface arg1) throws java.io.IOException;
    org.apache.hadoop.fs.PathHandle createPathHandle(FileStatusInterface arg0, org.apache.hadoop.fs.Options.HandleOpt... arg1);
    PathInterface resolvePath(PathInterface arg0) throws java.io.IOException;
    FSDataOutputStreamInterface create(PathInterface arg0, boolean arg1, int arg2, org.apache.hadoop.util.Progressable arg3) throws java.io.IOException;
    void moveFromLocalFile(PathInterface arg0, PathInterface arg1) throws java.io.IOException;
    void access(PathInterface arg0, org.apache.hadoop.fs.permission.FsAction arg1) throws org.apache.hadoop.security.AccessControlException, java.io.FileNotFoundException, java.io.IOException;
    FileSystemInterface getRawFileSystem();
    FSDataOutputStreamInterface create(PathInterface arg0, FsPermissionInterface arg1, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag> arg2, int arg3, short arg4, long arg5, org.apache.hadoop.util.Progressable arg6) throws java.io.IOException;
    long getUsed() throws java.io.IOException;
    long getUsed(PathInterface arg0) throws java.io.IOException;
    ConfigurationInterface getConf();
    FSDataInputStreamBuilderInterface createDataInputStreamBuilder(FileSystemInterface arg0, PathInterface arg1);
    StorageStatisticsInterface getStorageStatistics();
    FsStatusInterface getStatus(PathInterface arg0) throws java.io.IOException;
    void copyToLocalFile(boolean arg0, PathInterface arg1, PathInterface arg2, boolean arg3) throws java.io.IOException;
    void deleteSnapshot(PathInterface arg0, java.lang.String arg1) throws java.io.IOException;
    PathInterface getWorkingDirectory();
    java.lang.String getCanonicalServiceName();
    FileStatusInterface[] globStatus(PathInterface arg0) throws java.io.IOException;
    void moveFromLocalFile(PathInterface[] arg0, PathInterface arg1) throws java.io.IOException;
    LocalFileSystemInterface getLocal(ConfigurationInterface arg0) throws java.io.IOException;
    void setTimes(PathInterface arg0, long arg1, long arg2) throws java.io.IOException;
    DirectoryEntriesInterface listStatusBatch(PathInterface arg0, byte[] arg1) throws java.io.FileNotFoundException, java.io.IOException;
    boolean supportsSymlinks();
    org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.LocatedFileStatus> listLocatedStatus(PathInterface arg0) throws java.io.IOException;
    FileChecksumInterface getFileChecksum(PathInterface arg0) throws java.io.IOException;
    FSDataOutputStreamBuilderInterface createFile(PathInterface arg0);
    BlockLocationInterface[] getFileBlockLocations(PathInterface arg0, long arg1, long arg2) throws java.io.IOException;
    void copyToLocalFile(PathInterface arg0, PathInterface arg1, boolean arg2) throws java.io.IOException;
    FSDataInputStreamBuilderInterface createDataInputStreamBuilder(FileSystemInterface arg0, org.apache.hadoop.fs.PathHandle arg1);
    FSDataOutputStreamInterface create(PathInterface arg0, boolean arg1) throws java.io.IOException;
    boolean hasPathCapability(PathInterface arg0, java.lang.String arg1) throws java.io.IOException;
    PathInterface makeQualified(PathInterface arg0);
    boolean rename(PathInterface arg0, PathInterface arg1) throws java.io.IOException;
    void setStoragePolicy(PathInterface arg0, java.lang.String arg1) throws java.io.IOException;
    void listStatus(java.util.ArrayList<org.apache.hadoop.fs.FileStatus> arg0, PathInterface arg1, org.apache.hadoop.fs.PathFilter arg2) throws java.io.FileNotFoundException, java.io.IOException;
    short getReplication(PathInterface arg0) throws java.io.IOException;
    void setQuota(PathInterface arg0, long arg1, long arg2) throws java.io.IOException;
    java.util.concurrent.CompletableFuture<org.apache.hadoop.fs.FSDataInputStream> openFileWithOptions(PathInterface arg0, OpenFileParametersInterface arg1) throws java.io.IOException;
    org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.FileStatus> listStatusIterator(PathInterface arg0) throws java.io.IOException;
    void msync() throws java.io.IOException, java.lang.UnsupportedOperationException;
    void removeFileSystemForTesting(java.net.URI arg0, ConfigurationInterface arg1, FileSystemInterface arg2) throws java.io.IOException;
    FSDataOutputStreamInterface create(FileSystemInterface arg0, PathInterface arg1, FsPermissionInterface arg2) throws java.io.IOException;
    FSDataOutputStreamBuilderInterface createDataOutputStreamBuilder(FileSystemInterface arg0, PathInterface arg1);
    java.util.List<org.apache.hadoop.fs.FileSystem.Statistics> getAllStatistics();
    FileStatusInterface[] listStatus(PathInterface arg0) throws java.io.IOException;
    boolean isChecksumFile(PathInterface arg0);
    FileStatusInterface getFileStatus(PathInterface arg0) throws java.io.IOException;
    FileStatusInterface[] listStatus(PathInterface arg0, org.apache.hadoop.fs.PathFilter arg1) throws java.io.FileNotFoundException, java.io.IOException;
    PathInterface getTrashRoot(PathInterface arg0);
    FSDataInputStreamInterface open(org.apache.hadoop.fs.PathHandle arg0, int arg1) throws java.io.IOException;
    void enableSymlinks();
    org.apache.hadoop.fs.FutureDataInputStreamBuilder openFile(PathInterface arg0) throws java.io.IOException, java.lang.UnsupportedOperationException;
    void moveToLocalFile(PathInterface arg0, PathInterface arg1) throws java.io.IOException;
    void printStatistics() throws java.io.IOException;
    PathInterface createSnapshot(PathInterface arg0) throws java.io.IOException;
    FSDataOutputStreamInterface createNonRecursive(PathInterface arg0, FsPermissionInterface arg1, java.util.EnumSet<org.apache.hadoop.fs.CreateFlag> arg2, int arg3, short arg4, long arg5, org.apache.hadoop.util.Progressable arg6) throws java.io.IOException;
    boolean delete(PathInterface arg0, boolean arg1) throws java.io.IOException;
    short getDefaultReplication(PathInterface arg0);
    void closeAllForUGI(UserGroupInformationInterface arg0) throws java.io.IOException;
    PathInterface resolveLink(PathInterface arg0) throws java.io.IOException;
    FileStatusInterface[] globStatus(PathInterface arg0, org.apache.hadoop.fs.PathFilter arg1) throws java.io.IOException;
    FileSystemInterface getFSofPath(PathInterface arg0, ConfigurationInterface arg1) throws org.apache.hadoop.fs.UnsupportedFileSystemException, java.io.IOException;
    void removeAcl(PathInterface arg0) throws java.io.IOException;
    FSDataOutputStreamInterface create(PathInterface arg0, boolean arg1, int arg2) throws java.io.IOException;
    TokenInterface<?> getDelegationToken(java.lang.String arg0) throws java.io.IOException;
    long getChecksumFileLength(PathInterface arg0, long arg1);
    boolean truncate(PathInterface arg0, long arg1) throws java.io.IOException;
    long getBlockSize(PathInterface arg0) throws java.io.IOException;
    org.apache.hadoop.fs.RemoteIterator<org.apache.hadoop.fs.LocatedFileStatus> listFiles(PathInterface arg0, boolean arg1) throws java.io.FileNotFoundException, java.io.IOException;
    FSDataInputStreamInterface open(org.apache.hadoop.fs.PathHandle arg0) throws java.io.IOException;
    boolean deleteOnExit(PathInterface arg0) throws java.io.IOException;
    boolean cancelDeleteOnExit(PathInterface arg0);
    byte[] getXAttr(PathInterface arg0, java.lang.String arg1) throws java.io.IOException;
    FSDataOutputStreamInterface create(PathInterface arg0, org.apache.hadoop.util.Progressable arg1) throws java.io.IOException;
    long getLength(PathInterface arg0) throws java.io.IOException;
    double getApproxChkSumLength(long arg0);
    java.util.Map<java.lang.String, byte[]> getXAttrs(PathInterface arg0, java.util.List<java.lang.String> arg1) throws java.io.IOException;
    org.apache.hadoop.fs.BlockStoragePolicySpi getStoragePolicy(PathInterface arg0) throws java.io.IOException;
    FileSystemInterface get(java.net.URI arg0, ConfigurationInterface arg1, java.lang.String arg2) throws java.io.IOException, java.lang.InterruptedException;
}