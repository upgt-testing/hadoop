package org.apache.hadoop.hdfs.remoteProxies;

public interface HttpChannelStateInterface {
    void completing();
    RequestInterface getBaseRequest();
    void upgrade();
    org.eclipse.jetty.server.HttpChannelState.State getState();
    boolean onReadReady();
    boolean completeResponse();
    void onReadUnready();
    void cancelTimeout();
    void timeout();
    java.lang.String toString();
    void complete();
    void removeAttribute(java.lang.String arg0);
    boolean abortResponse();
    boolean isAsync();
    boolean onReadPossible();
    void asyncError(java.lang.Throwable arg0);
    void onError(java.lang.Throwable arg0);
    boolean isAsyncStarted();
    boolean isCompleted();
    void setAttribute(java.lang.String arg0, java.lang.Object arg1);
    void scheduleDispatch();
    void runInContext(AsyncContextEventInterface arg0, java.lang.Runnable arg1);
    long getTimeout();
    ContextHandlerInterface getContextHandler(AsyncContextEventInterface arg0);
    void setTimeout(long arg0);
    void dispatch(javax.servlet.ServletContext arg0, java.lang.String arg1);
    boolean isExpired();
    void startAsync(AsyncContextEventInterface arg0);
    boolean isSendError();
    boolean isResponseCommitted();
    void completed(java.lang.Throwable arg0);
    boolean commitResponse();
    boolean onWritePossible();
    java.lang.String toStringLocked();
    HttpChannelInterface getHttpChannel();
    AsyncContextEventInterface getAsyncContextEvent();
    boolean isIdle();
    void cancelTimeout(AsyncContextEventInterface arg0);
    void recycle();
    java.lang.String getStatusStringLocked();
    org.eclipse.jetty.server.HttpChannelState.Action handling();
    boolean isInitial();
    javax.servlet.ServletResponse getServletResponse();
    javax.servlet.ServletResponse getServletResponse(AsyncContextEventInterface arg0);
    org.eclipse.jetty.server.HttpChannelState.Action nextAction(boolean arg0);
    void sendError(int arg0, java.lang.String arg1);
    boolean partialResponse();
    boolean onReadEof();
    void sendError(java.lang.Throwable arg0);
    boolean isSuspended();
    java.lang.Object getAttribute(java.lang.String arg0);
    org.eclipse.jetty.server.HttpChannelState.Action unhandle();
    java.lang.String getStatusString();
    boolean hasListener(javax.servlet.AsyncListener arg0);
    ContextHandlerInterface getContextHandler();
    boolean isResponseCompleted();
    void addListener(javax.servlet.AsyncListener arg0);
    boolean onContentAdded();
    void onTimeout();
}