package org.apache.hadoop.hdfs.remoteProxies;

public interface SelectorManagerInterface {
    <T> T getBean(java.lang.Class<T> arg0);
    ManagedSelectorInterface newSelector(int arg0);
    boolean isConnectionPending(java.nio.channels.SelectableChannel arg0);
//    boolean addBean(java.lang.Object arg0, org.eclipse.jetty.util.component.ContainerLifeCycle.Managed arg1);
    boolean isRunning();
    boolean isFailed();
    java.lang.String toString();
    void removeEventListener(org.eclipse.jetty.util.component.Container.Listener arg0);
    void setReservedThreads(int arg0);
    void dumpObject(java.lang.Appendable arg0, java.lang.Object arg1) throws java.io.IOException;
    java.util.concurrent.Executor getExecutor();
    ManagedSelectorInterface chooseSelector();
    boolean addBean(java.lang.Object arg0);
    org.eclipse.jetty.util.component.Dumpable named(java.lang.String arg0, java.lang.Object arg1);
    java.io.Closeable acceptor(java.nio.channels.SelectableChannel arg0);
    void doStart() throws java.lang.Exception;
    java.nio.channels.SelectableChannel doAccept(java.nio.channels.SelectableChannel arg0) throws java.io.IOException;
    void dumpContainer(java.lang.Appendable arg0, java.lang.String arg1, org.eclipse.jetty.util.component.Container arg2, boolean arg3) throws java.io.IOException;
    void unmanage(java.lang.Object arg0);
    int getSelectorCount();
    void updateBean(java.lang.Object arg0, java.lang.Object arg1);
    void execute(java.lang.Runnable arg0);
    boolean remove(BeanInterface arg0);
    void setStopping();
    void start() throws java.lang.Exception;
    java.lang.String dump();
    void stop() throws java.lang.Exception;
    void lambda$named$0(java.lang.String arg0, java.lang.Object arg1, java.lang.Appendable arg2, java.lang.String arg3) throws java.io.IOException;
    void setBeans(java.util.Collection<java.lang.Object> arg0);
    java.lang.String dump(org.eclipse.jetty.util.component.Dumpable arg0);
    void setStarted();
    void removeEventListener(java.util.EventListener arg0);
    void removeBeans();
    boolean isStarted();
    void dumpObjects(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Object arg2, java.lang.Object... arg3) throws java.io.IOException;
    boolean contains(java.lang.Object arg0);
    java.lang.String dumpSelf();
    void start(org.eclipse.jetty.util.component.LifeCycle arg0) throws java.lang.Exception;
    void updateBean(java.lang.Object arg0, java.lang.Object arg1, boolean arg2);
    void dump(java.lang.Appendable arg0) throws java.io.IOException;
    long getConnectTimeout();
    boolean isDumpable(java.lang.Object arg0);
    void manage(BeanInterface arg0);
    void accept(java.nio.channels.SelectableChannel arg0, java.lang.Object arg1);
    void start(java.lang.Object arg0);
    void dumpMapEntries(java.lang.Appendable arg0, java.lang.String arg1, java.util.Map<?, ?> arg2, boolean arg3) throws java.io.IOException;
    void connect(java.nio.channels.SelectableChannel arg0, java.lang.Object arg1);
    org.eclipse.jetty.util.thread.Scheduler getScheduler();
    <T> java.util.Collection<T> getBeans(java.lang.Class<T> arg0);
    boolean removeBean(java.lang.Object arg0);
    boolean doFinishConnect(java.nio.channels.SelectableChannel arg0) throws java.io.IOException;
    void endPointOpened(org.eclipse.jetty.io.EndPoint arg0);
    void setStopped();
    void setConnectTimeout(long arg0);
    java.util.Collection<java.lang.Object> getBeans();
    void addEventListener(org.eclipse.jetty.util.component.Container.Listener arg0);
    boolean isStarting();
    void setStopTimeout(long arg0);
    void onAccepted(java.nio.channels.SelectableChannel arg0);
    void dumpBeans(java.lang.Appendable arg0, java.lang.String arg1, java.util.Collection<?>... arg2) throws java.io.IOException;
    void manage(java.lang.Object arg0);
    java.nio.channels.Selector newSelector() throws java.io.IOException;
    void onAccepting(java.nio.channels.SelectableChannel arg0);
    void setFailed(java.lang.Throwable arg0);
    java.lang.String getState(org.eclipse.jetty.util.component.LifeCycle arg0);
    boolean isManaged(java.lang.Object arg0);
    <T> void getContainedBeans(java.lang.Class<T> arg0, java.util.Collection<T> arg1);
    void dumpThis(java.lang.Appendable arg0) throws java.io.IOException;
    void doStop() throws java.lang.Exception;
    void removeAcceptListener(org.eclipse.jetty.io.SelectorManager.AcceptListener arg0);
    boolean isUnmanaged(java.lang.Object arg0);
    void destroy();
    void addLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle.Listener arg0);
    void dumpObjects(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Object... arg2) throws java.io.IOException;
    void addEventListener(java.util.EventListener arg0);
    long getStopTimeout();
    void dumpIterable(java.lang.Appendable arg0, java.lang.String arg1, java.lang.Iterable<?> arg2, boolean arg3) throws java.io.IOException;
    void connectionFailed(java.nio.channels.SelectableChannel arg0, java.lang.Throwable arg1, java.lang.Object arg2);
    <T> java.util.Collection<T> getContainedBeans(java.lang.Class<T> arg0);
    void removeLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle.Listener arg0);
    void dump(java.lang.Appendable arg0, java.lang.String arg1) throws java.io.IOException;
    boolean isAuto(java.lang.Object arg0);
    java.lang.String getState();
    boolean isStopping();
    boolean addBean(java.lang.Object arg0, boolean arg1);
    org.eclipse.jetty.io.EndPoint newEndPoint(java.nio.channels.SelectableChannel arg0, ManagedSelectorInterface arg1, java.nio.channels.SelectionKey arg2) throws java.io.IOException;
    void accept(java.nio.channels.SelectableChannel arg0);
    int getReservedThreads();
    void stop(java.lang.Object arg0);
    void unmanage(BeanInterface arg0);
    boolean isStopped();
    org.eclipse.jetty.io.Connection newConnection(java.nio.channels.SelectableChannel arg0, org.eclipse.jetty.io.EndPoint arg1, java.lang.Object arg2) throws java.io.IOException;
    void dumpStdErr();
    void updateBeans(java.lang.Object[] arg0, java.lang.Object[] arg1);
    void endPointClosed(org.eclipse.jetty.io.EndPoint arg0);
    void connectionOpened(org.eclipse.jetty.io.Connection arg0);
    void dump(java.lang.Appendable arg0, java.lang.String arg1, java.util.Collection<?>... arg2) throws java.io.IOException;
    void connectionClosed(org.eclipse.jetty.io.Connection arg0);
    void addManaged(org.eclipse.jetty.util.component.LifeCycle arg0);
    void setStarting();
    void stop(org.eclipse.jetty.util.component.LifeCycle arg0) throws java.lang.Exception;
    int defaultSelectors(java.util.concurrent.Executor arg0);
    BeanInterface getBean(java.lang.Object arg0);
    void accepted(java.nio.channels.SelectableChannel arg0) throws java.io.IOException;
    void addAcceptListener(org.eclipse.jetty.io.SelectorManager.AcceptListener arg0);
    void onAcceptFailed(java.nio.channels.SelectableChannel arg0, java.lang.Throwable arg1);
}